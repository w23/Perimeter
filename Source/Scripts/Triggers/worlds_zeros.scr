TriggerChain = {
	name = "";
	triggers = {
		17;
		{
			name = "START";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = AND;
							conditions = {
								0;
							};
						};
					}
				};
			};
			action = 0;
			outcomingLinks = {
				0;
			};
			state_ = CHECKING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = -2147483648;
			cellNumberY = -2147483648;
			left_ = -2147483648;
			top_ = -2147483648;
			right_ = -2147483648;
			bottom_ = -2147483648;
			cellIndex = {
				x = -2147483648;
				y = -2147483648;
			};
			boundingRect = {
				left = -2147483648;
				top = -2147483648;
				right = -2147483648;
				bottom = -2147483648;
			};
		},
		{
			name = "время";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionUnitClassUnderAttack" {
							state_ = false;
							internalColor_ = 0;
							victimUnitClass = UNIT_CLASS_STRUCTURE | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_STRUCTURE_CORE | UNIT_CLASS_FRAME | UNIT_CLASS_IGNORE;
							damagePercent = 1;
							agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_UNDERGROUND | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_MISSILE | UNIT_CLASS_IGNORE;
							playerType = AI_PLAYER_TYPE_ENEMY;
						};
					}
				};
			};
			action = "struct ActionDelay" {
				internalColor_ = 0;
				delay = 1800;
				showTimer = true;
				scaleByDifficulty = false;
				timer = {
					time = 0;
				};
			};
			outcomingLinks = {
				1;
				{
					triggerName = "поражение";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -2147483648;
					parentOffsetY_ = -2147483648;
					childOffsetX_ = -2147483648;
					childOffsetY_ = -2147483648;
					parentOffset = {
						x = -2147483648;
						y = -2147483648;
					};
					childOffset = {
						x = -2147483648;
						y = -2147483648;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = -2147483648;
			cellNumberY = -2147483648;
			left_ = -2147483648;
			top_ = -2147483648;
			right_ = -2147483648;
			bottom_ = -2147483648;
			cellIndex = {
				x = -2147483648;
				y = -2147483648;
			};
			boundingRect = {
				left = -2147483648;
				top = -2147483648;
				right = -2147483648;
				bottom = -2147483648;
			};
		},
		{
			name = "победа";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionCorridorOmegaUpgraded" {
							state_ = false;
							internalColor_ = 0;
						};
					}
				};
			};
			action = "struct ActionVictory" {
				internalColor_ = 0;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = -2147483648;
			cellNumberY = -2147483648;
			left_ = -2147483648;
			top_ = -2147483648;
			right_ = -2147483648;
			bottom_ = -2147483648;
			cellIndex = {
				x = -2147483648;
				y = -2147483648;
			};
			boundingRect = {
				left = -2147483648;
				top = -2147483648;
				right = -2147483648;
				bottom = -2147483648;
			};
		},
		{
			name = "поражение";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = INVERTED;
						condition = "struct ConditionCorridorOmegaUpgraded" {
							state_ = false;
							internalColor_ = 0;
						};
					}
				};
			};
			action = "struct ActionDefeat" {
				internalColor_ = 0;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = -2147483648;
			cellNumberY = -2147483648;
			left_ = -2147483648;
			top_ = -2147483648;
			right_ = -2147483648;
			bottom_ = -2147483648;
			cellIndex = {
				x = -2147483648;
				y = -2147483648;
			};
			boundingRect = {
				left = -2147483648;
				top = -2147483648;
				right = -2147483648;
				bottom = -2147483648;
			};
		},
		{
			name = "тряска камеры";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = false;
							internalColor_ = 0;
							type = AND;
							conditions = {
								0;
							};
						};
					}
				};
			};
			action = "struct ActionOscillateCamera" {
				internalColor_ = 0;
				duration = 10;
				factor = 1.;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "пауза";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -2147483648;
					parentOffsetY_ = -2147483648;
					childOffsetX_ = -2147483648;
					childOffsetY_ = -2147483648;
					parentOffset = {
						x = -2147483648;
						y = -2147483648;
					};
					childOffset = {
						x = -2147483648;
						y = -2147483648;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = -2147483648;
			cellNumberY = -2147483648;
			left_ = -2147483648;
			top_ = -2147483648;
			right_ = -2147483648;
			bottom_ = -2147483648;
			cellIndex = {
				x = -2147483648;
				y = -2147483648;
			};
			boundingRect = {
				left = -2147483648;
				top = -2147483648;
				right = -2147483648;
				bottom = -2147483648;
			};
		},
		{
			name = "Camera";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = AND;
							conditions = {
								0;
							};
						};
					}
				};
			};
			action = "struct ActionSetCamera" {
				internalColor_ = 0;
				cameraSplineName = "Camera0";
				stepTime = -1.32704e-003;
				cycles = -1163005939;
				smoothTransition = true;
			};
			outcomingLinks = {
				0;
			};
			state_ = CHECKING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = -2147483648;
			cellNumberY = -2147483648;
			left_ = -2147483648;
			top_ = -2147483648;
			right_ = -2147483648;
			bottom_ = -2147483648;
			cellIndex = {
				x = -2147483648;
				y = -2147483648;
			};
			boundingRect = {
				left = -2147483648;
				top = -2147483648;
				right = -2147483648;
				bottom = -2147483648;
			};
		},
		{
			name = "поражение 0";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionUnitClassUnderAttack" {
							state_ = false;
							internalColor_ = 0;
							victimUnitClass = UNIT_CLASS_FRAME | UNIT_CLASS_IGNORE;
							damagePercent = 90;
							agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_MISSILE | UNIT_CLASS_AIR_FILTH | UNIT_CLASS_GROUND_FILTH | UNIT_CLASS_IGNORE;
							playerType = AI_PLAYER_TYPE_ME;
						};
					}
				};
			};
			action = "struct ActionDefeat" {
				internalColor_ = 0;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = -2147483648;
			cellNumberY = -2147483648;
			left_ = -2147483648;
			top_ = -2147483648;
			right_ = -2147483648;
			bottom_ = -2147483648;
			cellIndex = {
				x = -2147483648;
				y = -2147483648;
			};
			boundingRect = {
				left = -2147483648;
				top = -2147483648;
				right = -2147483648;
				bottom = -2147483648;
			};
		},
		{
			name = "пауза";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = false;
							internalColor_ = 0;
							type = AND;
							conditions = {
								0;
							};
						};
					}
				};
			};
			action = "struct ActionDelay" {
				internalColor_ = 0;
				delay = 180;
				showTimer = false;
				scaleByDifficulty = false;
				timer = {
					time = 0;
				};
			};
			outcomingLinks = {
				1;
				{
					triggerName = "тряска камеры";
					color = STRATEGY_BLUE;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -2147483648;
					parentOffsetY_ = -2147483648;
					childOffsetX_ = -2147483648;
					childOffsetY_ = -2147483648;
					parentOffset = {
						x = -2147483648;
						y = -2147483648;
					};
					childOffset = {
						x = -2147483648;
						y = -2147483648;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = -2147483648;
			cellNumberY = -2147483648;
			left_ = -2147483648;
			top_ = -2147483648;
			right_ = -2147483648;
			bottom_ = -2147483648;
			cellIndex = {
				x = -2147483648;
				y = -2147483648;
			};
			boundingRect = {
				left = -2147483648;
				top = -2147483648;
				right = -2147483648;
				bottom = -2147483648;
			};
		},
		{
			name = "старт";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionUnitClassUnderAttack" {
							state_ = false;
							internalColor_ = 0;
							victimUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_UNDERGROUND | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_MISSILE | UNIT_CLASS_IGNORE;
							damagePercent = 1;
							agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_UNDERGROUND | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_IGNORE;
							playerType = AI_PLAYER_TYPE_ME;
						};
					}
				};
			};
			action = 0;
			outcomingLinks = {
				2;
				{
					triggerName = "тряска камеры";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -2147483648;
					parentOffsetY_ = -2147483648;
					childOffsetX_ = -2147483648;
					childOffsetY_ = -2147483648;
					parentOffset = {
						x = -2147483648;
						y = -2147483648;
					};
					childOffset = {
						x = -2147483648;
						y = -2147483648;
					};
				},
				{
					triggerName = "отсчет начался";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -2147483648;
					parentOffsetY_ = -2147483648;
					childOffsetX_ = -2147483648;
					childOffsetY_ = -2147483648;
					parentOffset = {
						x = -2147483648;
						y = -2147483648;
					};
					childOffset = {
						x = -2147483648;
						y = -2147483648;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = -2147483648;
			cellNumberY = -2147483648;
			left_ = -2147483648;
			top_ = -2147483648;
			right_ = -2147483648;
			bottom_ = -2147483648;
			cellIndex = {
				x = -2147483648;
				y = -2147483648;
			};
			boundingRect = {
				left = -2147483648;
				top = -2147483648;
				right = -2147483648;
				bottom = -2147483648;
			};
		},
		{
			name = "ЗАДАНИЕ";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = AND;
							conditions = {
								0;
							};
						};
					}
				};
			};
			action = "struct ActionTask" {
				internalColor_ = 0;
				type = ASSIGNED;
				taskID = "Mission Tasks.Mission 22.Task 1";
				duration = 10;
				syncroBySound = false;
				showTips = true;
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 14277119;
			cellNumberX = -2147483648;
			cellNumberY = -2147483648;
			left_ = -2147483648;
			top_ = -2147483648;
			right_ = -2147483648;
			bottom_ = -2147483648;
			cellIndex = {
				x = -2147483648;
				y = -2147483648;
			};
			boundingRect = {
				left = -2147483648;
				top = -2147483648;
				right = -2147483648;
				bottom = -2147483648;
			};
		},
		{
			name = "отсчет начался";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = false;
							internalColor_ = 0;
							type = AND;
							conditions = {
								0;
							};
						};
					}
				};
			};
			action = "struct ActionMessage" {
				internalColor_ = 0;
				messageID = "Mission Tips.Mission 22.Tip 2";
				message = "";
				delay = 0;
				duration = 120;
				syncroBySound = false;
				delayTimer = {
					time = 0;
				};
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				1;
				{
					triggerName = "5мин";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -2147483648;
					parentOffsetY_ = -2147483648;
					childOffsetX_ = -2147483648;
					childOffsetY_ = -2147483648;
					parentOffset = {
						x = -2147483648;
						y = -2147483648;
					};
					childOffset = {
						x = -2147483648;
						y = -2147483648;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 11779837;
			cellNumberX = -2147483648;
			cellNumberY = -2147483648;
			left_ = -2147483648;
			top_ = -2147483648;
			right_ = -2147483648;
			bottom_ = -2147483648;
			cellIndex = {
				x = -2147483648;
				y = -2147483648;
			};
			boundingRect = {
				left = -2147483648;
				top = -2147483648;
				right = -2147483648;
				bottom = -2147483648;
			};
		},
		{
			name = "5мин";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionTimeMatched" {
							state_ = false;
							internalColor_ = 0;
							time = 300;
						};
					}
				};
			};
			action = "struct ActionMessage" {
				internalColor_ = 0;
				messageID = "Mission Tips.Mission 22.Tip 3";
				message = "";
				delay = 0;
				duration = 10;
				syncroBySound = false;
				delayTimer = {
					time = 0;
				};
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				1;
				{
					triggerName = "4мин";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -2147483648;
					parentOffsetY_ = -2147483648;
					childOffsetX_ = -2147483648;
					childOffsetY_ = -2147483648;
					parentOffset = {
						x = -2147483648;
						y = -2147483648;
					};
					childOffset = {
						x = -2147483648;
						y = -2147483648;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 11779837;
			cellNumberX = -2147483648;
			cellNumberY = -2147483648;
			left_ = -2147483648;
			top_ = -2147483648;
			right_ = -2147483648;
			bottom_ = -2147483648;
			cellIndex = {
				x = -2147483648;
				y = -2147483648;
			};
			boundingRect = {
				left = -2147483648;
				top = -2147483648;
				right = -2147483648;
				bottom = -2147483648;
			};
		},
		{
			name = "4мин";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionTimeMatched" {
							state_ = false;
							internalColor_ = 0;
							time = 240;
						};
					}
				};
			};
			action = "struct ActionMessage" {
				internalColor_ = 0;
				messageID = "Mission Tips.Mission 22.Tip 4";
				message = "";
				delay = 0;
				duration = 10;
				syncroBySound = false;
				delayTimer = {
					time = 0;
				};
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				1;
				{
					triggerName = "3мин";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -2147483648;
					parentOffsetY_ = -2147483648;
					childOffsetX_ = -2147483648;
					childOffsetY_ = -2147483648;
					parentOffset = {
						x = -2147483648;
						y = -2147483648;
					};
					childOffset = {
						x = -2147483648;
						y = -2147483648;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 11779837;
			cellNumberX = -2147483648;
			cellNumberY = -2147483648;
			left_ = -2147483648;
			top_ = -2147483648;
			right_ = -2147483648;
			bottom_ = -2147483648;
			cellIndex = {
				x = -2147483648;
				y = -2147483648;
			};
			boundingRect = {
				left = -2147483648;
				top = -2147483648;
				right = -2147483648;
				bottom = -2147483648;
			};
		},
		{
			name = "3мин";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionTimeMatched" {
							state_ = false;
							internalColor_ = 0;
							time = 180;
						};
					}
				};
			};
			action = "struct ActionMessage" {
				internalColor_ = 0;
				messageID = "Mission Tips.Mission 22.Tip 5";
				message = "";
				delay = 0;
				duration = 10;
				syncroBySound = false;
				delayTimer = {
					time = 0;
				};
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				1;
				{
					triggerName = "2мин";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -2147483648;
					parentOffsetY_ = -2147483648;
					childOffsetX_ = -2147483648;
					childOffsetY_ = -2147483648;
					parentOffset = {
						x = -2147483648;
						y = -2147483648;
					};
					childOffset = {
						x = -2147483648;
						y = -2147483648;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 11779837;
			cellNumberX = -2147483648;
			cellNumberY = -2147483648;
			left_ = -2147483648;
			top_ = -2147483648;
			right_ = -2147483648;
			bottom_ = -2147483648;
			cellIndex = {
				x = -2147483648;
				y = -2147483648;
			};
			boundingRect = {
				left = -2147483648;
				top = -2147483648;
				right = -2147483648;
				bottom = -2147483648;
			};
		},
		{
			name = "2мин";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionTimeMatched" {
							state_ = false;
							internalColor_ = 0;
							time = 120;
						};
					}
				};
			};
			action = "struct ActionMessage" {
				internalColor_ = 0;
				messageID = "Mission Tips.Mission 22.Tip 6";
				message = "";
				delay = 0;
				duration = 10;
				syncroBySound = false;
				delayTimer = {
					time = 0;
				};
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				1;
				{
					triggerName = "мин";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -2147483648;
					parentOffsetY_ = -2147483648;
					childOffsetX_ = -2147483648;
					childOffsetY_ = -2147483648;
					parentOffset = {
						x = -2147483648;
						y = -2147483648;
					};
					childOffset = {
						x = -2147483648;
						y = -2147483648;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 11779837;
			cellNumberX = -2147483648;
			cellNumberY = -2147483648;
			left_ = -2147483648;
			top_ = -2147483648;
			right_ = -2147483648;
			bottom_ = -2147483648;
			cellIndex = {
				x = -2147483648;
				y = -2147483648;
			};
			boundingRect = {
				left = -2147483648;
				top = -2147483648;
				right = -2147483648;
				bottom = -2147483648;
			};
		},
		{
			name = "мин";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionTimeMatched" {
							state_ = false;
							internalColor_ = 0;
							time = 60;
						};
					}
				};
			};
			action = "struct ActionMessage" {
				internalColor_ = 0;
				messageID = "Mission Tips.Mission 22.Tip 7";
				message = "";
				delay = 0;
				duration = 10;
				syncroBySound = false;
				delayTimer = {
					time = 0;
				};
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 11779837;
			cellNumberX = -2147483648;
			cellNumberY = -2147483648;
			left_ = -2147483648;
			top_ = -2147483648;
			right_ = -2147483648;
			bottom_ = -2147483648;
			cellIndex = {
				x = -2147483648;
				y = -2147483648;
			};
			boundingRect = {
				left = -2147483648;
				top = -2147483648;
				right = -2147483648;
				bottom = -2147483648;
			};
		},
		{
			name = "UserCamera";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = 0;
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = -2147483648;
			cellNumberY = -2147483648;
			left_ = -2147483648;
			top_ = -2147483648;
			right_ = -2147483648;
			bottom_ = -2147483648;
			cellIndex = {
				x = -2147483648;
				y = -2147483648;
			};
			boundingRect = {
				left = -2147483648;
				top = -2147483648;
				right = -2147483648;
				bottom = -2147483648;
			};
		}
	};
	left_ = -2147483648;
	top_ = -2147483648;
	right_ = -2147483648;
	bottom_ = -2147483648;
	boundingRect = {
		left = -2147483648;
		top = -2147483648;
		right = -2147483648;
		bottom = -2147483648;
	};
	viewRect = {
		left = -2147483648;
		top = -2147483648;
		right = -2147483648;
		bottom = -2147483648;
	};
};
