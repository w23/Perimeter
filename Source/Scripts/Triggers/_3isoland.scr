TriggerChain = {
	name = "";
	triggers = {
		63;
		{
			name = "START";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = AND;
							conditions = {
								0;
							};
						};
					}
				};
			};
			action = 0;
			outcomingLinks = {
				11;
				{
					triggerName = "деактивировать метки скам спотов";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 27;
					parentOffsetY_ = 16;
					childOffsetX_ = 22;
					childOffsetY_ = -16;
					parentOffset = {
						x = 27;
						y = 16;
					};
					childOffset = {
						x = 22;
						y = -16;
					};
				},
				{
					triggerName = "деактивировать метки скам спотов3";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 45;
					parentOffsetY_ = 16;
					childOffsetX_ = 32;
					childOffsetY_ = -16;
					parentOffset = {
						x = 45;
						y = 16;
					};
					childOffset = {
						x = 32;
						y = -16;
					};
				},
				{
					triggerName = "деактивировать ворон";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 57;
					parentOffsetY_ = 16;
					childOffsetX_ = 49;
					childOffsetY_ = -16;
					parentOffset = {
						x = 57;
						y = 16;
					};
					childOffset = {
						x = 49;
						y = -16;
					};
				},
				{
					triggerName = "деактивировать ос";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 73;
					parentOffsetY_ = 16;
					childOffsetX_ = 69;
					childOffsetY_ = -16;
					parentOffset = {
						x = 73;
						y = 16;
					};
					childOffset = {
						x = 69;
						y = -16;
					};
				},
				{
					triggerName = "деактивировать дракона";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 87;
					parentOffsetY_ = 16;
					childOffsetX_ = 79;
					childOffsetY_ = -16;
					parentOffset = {
						x = 87;
						y = 16;
					};
					childOffset = {
						x = 79;
						y = -16;
					};
				},
				{
					triggerName = "деактивировать метки скам спотов 2";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 114;
					parentOffsetY_ = 16;
					childOffsetX_ = -117;
					childOffsetY_ = -16;
					parentOffset = {
						x = 114;
						y = 16;
					};
					childOffset = {
						x = -117;
						y = -16;
					};
				},
				{
					triggerName = "старт";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 113;
					parentOffsetY_ = -16;
					childOffsetX_ = -128;
					childOffsetY_ = 16;
					parentOffset = {
						x = 113;
						y = -16;
					};
					childOffset = {
						x = -128;
						y = 16;
					};
				},
				{
					triggerName = "терминал";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = -1;
					childOffsetX_ = -128;
					childOffsetY_ = -9;
					parentOffset = {
						x = 128;
						y = -1;
					};
					childOffset = {
						x = -128;
						y = -9;
					};
				},
				{
					triggerName = "деактивировать ос0";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 79;
					parentOffsetY_ = 16;
					childOffsetX_ = 69;
					childOffsetY_ = -16;
					parentOffset = {
						x = 79;
						y = 16;
					};
					childOffset = {
						x = 69;
						y = -16;
					};
				},
				{
					triggerName = "деактивировать ворон0";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 53;
					parentOffsetY_ = 16;
					childOffsetX_ = 57;
					childOffsetY_ = -16;
					parentOffset = {
						x = 53;
						y = 16;
					};
					childOffset = {
						x = 57;
						y = -16;
					};
				},
				{
					triggerName = "11";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = -10;
					childOffsetX_ = -128;
					childOffsetY_ = 12;
					parentOffset = {
						x = 128;
						y = -10;
					};
					childOffset = {
						x = -128;
						y = 12;
					};
				}
			};
			state_ = CHECKING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = -1;
			cellNumberY = -1;
			left_ = -288;
			top_ = -64;
			right_ = -32;
			bottom_ = -32;
			cellIndex = {
				x = -1;
				y = -1;
			};
			boundingRect = {
				left = -288;
				top = -64;
				right = -32;
				bottom = -32;
			};
		},
		{
			name = "Camera";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = AND;
							conditions = {
								0;
							};
						};
					}
				};
			};
			action = "struct ActionSetCamera" {
				internalColor_ = 0;
				cameraSplineName = "Camera0";
				stepTime = 7.8125e-003;
				cycles = 1057259520;
				smoothTransition = false;
			};
			outcomingLinks = {
				2;
				{
					triggerName = "вкл. поле";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 115;
					parentOffsetY_ = 16;
					childOffsetX_ = -94;
					childOffsetY_ = -16;
					parentOffset = {
						x = 115;
						y = 16;
					};
					childOffset = {
						x = -94;
						y = -16;
					};
				},
				{
					triggerName = "на скамспот111111";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 49;
					parentOffsetY_ = 16;
					childOffsetX_ = 47;
					childOffsetY_ = -16;
					parentOffset = {
						x = 49;
						y = 16;
					};
					childOffset = {
						x = 47;
						y = -16;
					};
				}
			};
			state_ = CHECKING;
			executionCounter_ = 0;
			internalColor_ = 12632256;
			cellNumberX = 1;
			cellNumberY = -5;
			left_ = 288;
			top_ = -320;
			right_ = 544;
			bottom_ = -288;
			cellIndex = {
				x = 1;
				y = -5;
			};
			boundingRect = {
				left = 288;
				top = -320;
				right = 544;
				bottom = -288;
			};
		},
		{
			name = "поражение при гибели фрейма";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = OR;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionKillObject" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_FRAME;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_FRAME;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = true;
						};
					}
				};
			};
			action = "struct ActionDefeat" {
				internalColor_ = 0;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 0;
			cellNumberY = 2;
			left_ = 0;
			top_ = 128;
			right_ = 256;
			bottom_ = 160;
			cellIndex = {
				x = 0;
				y = 2;
			};
			boundingRect = {
				left = 0;
				top = 128;
				right = 256;
				bottom = 160;
			};
		},
		{
			name = "ЗАДАНИЕ";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = AND;
							conditions = {
								0;
							};
						};
					}
				};
			};
			action = "struct ActionTask" {
				internalColor_ = 0;
				type = ASSIGNED;
				taskID = "Mission Tasks.Mission 03.Task 1";
				duration = 5;
				syncroBySound = false;
				showTips = true;
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				3;
				{
					triggerName = "задача1 выполнена";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -28;
					parentOffsetY_ = 16;
					childOffsetX_ = -28;
					childOffsetY_ = -16;
					parentOffset = {
						x = -28;
						y = 16;
					};
					childOffset = {
						x = -28;
						y = -16;
					};
				},
				{
					triggerName = "задание2 выполнено";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -44;
					parentOffsetY_ = 16;
					childOffsetX_ = -44;
					childOffsetY_ = -16;
					parentOffset = {
						x = -44;
						y = 16;
					};
					childOffset = {
						x = -44;
						y = -16;
					};
				},
				{
					triggerName = "пауза";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 90;
					parentOffsetY_ = 16;
					childOffsetX_ = -114;
					childOffsetY_ = -16;
					parentOffset = {
						x = 90;
						y = 16;
					};
					childOffset = {
						x = -114;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 14277119;
			cellNumberX = 1;
			cellNumberY = 2;
			left_ = 288;
			top_ = 128;
			right_ = 544;
			bottom_ = 160;
			cellIndex = {
				x = 1;
				y = 2;
			};
			boundingRect = {
				left = 288;
				top = 128;
				right = 544;
				bottom = 160;
			};
		},
		{
			name = "активировать кнопку летной лаборатории";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_FLY_STATION1;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = true;
						};
					}
				};
			};
			action = "struct ActionSetControls" {
				internalColor_ = 0;
				controls = {
					2;
					{
						controlID = SQSH_STATION5_ID;
						enabled = true;
						visible = true;
						flashing = true;
						tabNumber = 0;
					},
					{
						controlID = SQSH_TAB_BUILD_ID;
						enabled = true;
						visible = true;
						flashing = true;
						tabNumber = 1;
					}
				};
			};
			outcomingLinks = {
				1;
				{
					triggerName = "деактивировать кнопку летной лаборатории";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -67;
					parentOffsetY_ = 16;
					childOffsetX_ = -64;
					childOffsetY_ = -16;
					parentOffset = {
						x = -67;
						y = 16;
					};
					childOffset = {
						x = -64;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12615935;
			cellNumberX = 1;
			cellNumberY = 3;
			left_ = 288;
			top_ = 192;
			right_ = 544;
			bottom_ = 224;
			cellIndex = {
				x = 1;
				y = 3;
			};
			boundingRect = {
				left = 288;
				top = 192;
				right = 544;
				bottom = 224;
			};
		},
		{
			name = "деактивировать кнопку летной лаборатории";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionClickOnButton" {
							state_ = false;
							internalColor_ = 0;
							controlID = SQSH_STATION5_ID;
							counter = 1;
						};
					}
				};
			};
			action = "struct ActionSetControls" {
				internalColor_ = 0;
				controls = {
					2;
					{
						controlID = SQSH_STATION5_ID;
						enabled = true;
						visible = true;
						flashing = false;
						tabNumber = 0;
					},
					{
						controlID = SQSH_TAB_BUILD_ID;
						enabled = true;
						visible = true;
						flashing = false;
						tabNumber = 1;
					}
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12615935;
			cellNumberX = 1;
			cellNumberY = 4;
			left_ = 288;
			top_ = 256;
			right_ = 544;
			bottom_ = 288;
			cellIndex = {
				x = 1;
				y = 4;
			};
			boundingRect = {
				left = 288;
				top = 256;
				right = 544;
				bottom = 288;
			};
		},
		{
			name = "деактивировать метки скам спотов 2";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = INVERTED;
						condition = "struct ConditionObjectNearObjectByLabel" {
							state_ = true;
							internalColor_ = 0;
							label = "скам спот2";
							object = UNIT_ATTRIBUTE_SCUM_SPOT2;
							objectConstructed = false;
							playerType = AI_PLAYER_TYPE_WORLD;
							distance = 150.;
						};
					}
				};
			};
			action = "struct ActionDeactivateObjectByLabel" {
				internalColor_ = 0;
				label = "скам спот2";
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 0;
			cellNumberY = 3;
			left_ = 0;
			top_ = 192;
			right_ = 256;
			bottom_ = 224;
			cellIndex = {
				x = 0;
				y = 3;
			};
			boundingRect = {
				left = 0;
				top = 192;
				right = 256;
				bottom = 224;
			};
		},
		{
			name = "деактивировать метки скам спотов";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = INVERTED;
						condition = "struct ConditionObjectNearObjectByLabel" {
							state_ = true;
							internalColor_ = 0;
							label = "скам спот";
							object = UNIT_ATTRIBUTE_SCUM_SPOT;
							objectConstructed = false;
							playerType = AI_PLAYER_TYPE_WORLD;
							distance = 100.;
						};
					}
				};
			};
			action = "struct ActionDeactivateObjectByLabel" {
				internalColor_ = 0;
				label = "скам спот";
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = -1;
			cellNumberY = 2;
			left_ = -288;
			top_ = 128;
			right_ = -32;
			bottom_ = 160;
			cellIndex = {
				x = -1;
				y = 2;
			};
			boundingRect = {
				left = -288;
				top = 128;
				right = -32;
				bottom = 160;
			};
		},
		{
			name = "деактивировать метки скам спотов3";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = INVERTED;
						condition = "struct ConditionObjectNearObjectByLabel" {
							state_ = true;
							internalColor_ = 0;
							label = "скам спот3";
							object = UNIT_ATTRIBUTE_SCUM_SPOT3;
							objectConstructed = false;
							playerType = AI_PLAYER_TYPE_WORLD;
							distance = 100.;
						};
					}
				};
			};
			action = "struct ActionDeactivateObjectByLabel" {
				internalColor_ = 0;
				label = "скам спот3";
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = -1;
			cellNumberY = 3;
			left_ = -288;
			top_ = 192;
			right_ = -32;
			bottom_ = 224;
			cellIndex = {
				x = -1;
				y = 3;
			};
			boundingRect = {
				left = -288;
				top = 192;
				right = -32;
				bottom = 224;
			};
		},
		{
			name = "деактивировать ворон";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = INVERTED;
						condition = "struct ConditionObjectNearObjectByLabel" {
							state_ = true;
							internalColor_ = 0;
							label = "скам спот2";
							object = UNIT_ATTRIBUTE_SCUM_SPOT2;
							objectConstructed = false;
							playerType = AI_PLAYER_TYPE_WORLD;
							distance = 100.;
						};
					}
				};
			};
			action = "struct ActionDeactivateObjectByLabel" {
				internalColor_ = 0;
				label = "вороны";
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = -1;
			cellNumberY = 4;
			left_ = -288;
			top_ = 256;
			right_ = -32;
			bottom_ = 288;
			cellIndex = {
				x = -1;
				y = 4;
			};
			boundingRect = {
				left = -288;
				top = 256;
				right = -32;
				bottom = 288;
			};
		},
		{
			name = "деактивировать ос";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = INVERTED;
						condition = "struct ConditionObjectNearObjectByLabel" {
							state_ = true;
							internalColor_ = 0;
							label = "скам спот3";
							object = UNIT_ATTRIBUTE_SCUM_SPOT3;
							objectConstructed = false;
							playerType = AI_PLAYER_TYPE_WORLD;
							distance = 100.;
						};
					}
				};
			};
			action = "struct ActionDeactivateObjectByLabel" {
				internalColor_ = 0;
				label = "осы";
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = -1;
			cellNumberY = 6;
			left_ = -288;
			top_ = 384;
			right_ = -32;
			bottom_ = 416;
			cellIndex = {
				x = -1;
				y = 6;
			};
			boundingRect = {
				left = -288;
				top = 384;
				right = -32;
				bottom = 416;
			};
		},
		{
			name = "деактивировать дракона";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = INVERTED;
						condition = "struct ConditionObjectNearObjectByLabel" {
							state_ = true;
							internalColor_ = 0;
							label = "скам спот";
							object = UNIT_ATTRIBUTE_SCUM_SPOT;
							objectConstructed = false;
							playerType = AI_PLAYER_TYPE_WORLD;
							distance = 100.;
						};
					}
				};
			};
			action = "struct ActionDeactivateObjectByLabel" {
				internalColor_ = 0;
				label = "дракон";
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = -1;
			cellNumberY = 8;
			left_ = -288;
			top_ = 512;
			right_ = -32;
			bottom_ = 544;
			cellIndex = {
				x = -1;
				y = 8;
			};
			boundingRect = {
				left = -288;
				top = 512;
				right = -32;
				bottom = 544;
			};
		},
		{
			name = "старт";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct Action" {
				internalColor_ = 0;
			};
			outcomingLinks = {
				10;
				{
					triggerName = "на скамспот3";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 7;
					parentOffsetY_ = 16;
					childOffsetX_ = 17;
					childOffsetY_ = -16;
					parentOffset = {
						x = 7;
						y = 16;
					};
					childOffset = {
						x = 17;
						y = -16;
					};
				},
				{
					triggerName = "на скамспот2";
					color = STRATEGY_BLUE;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 36;
					parentOffsetY_ = 16;
					childOffsetX_ = 39;
					childOffsetY_ = -16;
					parentOffset = {
						x = 36;
						y = 16;
					};
					childOffset = {
						x = 39;
						y = -16;
					};
				},
				{
					triggerName = "на скамспот";
					color = STRATEGY_YELLOW;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 64;
					parentOffsetY_ = 16;
					childOffsetX_ = 62;
					childOffsetY_ = -16;
					parentOffset = {
						x = 64;
						y = 16;
					};
					childOffset = {
						x = 62;
						y = -16;
					};
				},
				{
					triggerName = "выкл. интерфейс";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 18;
					parentOffsetY_ = 16;
					childOffsetX_ = 22;
					childOffsetY_ = -16;
					parentOffset = {
						x = 18;
						y = 16;
					};
					childOffset = {
						x = 22;
						y = -16;
					};
				},
				{
					triggerName = "выкл. интерфейс0";
					color = STRATEGY_BLUE;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 51;
					parentOffsetY_ = 16;
					childOffsetX_ = 50;
					childOffsetY_ = -16;
					parentOffset = {
						x = 51;
						y = 16;
					};
					childOffset = {
						x = 50;
						y = -16;
					};
				},
				{
					triggerName = "выкл. интерфейс1";
					color = STRATEGY_YELLOW;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 76;
					parentOffsetY_ = 16;
					childOffsetX_ = 86;
					childOffsetY_ = -16;
					parentOffset = {
						x = 76;
						y = 16;
					};
					childOffset = {
						x = 86;
						y = -16;
					};
				},
				{
					triggerName = "на фрейм";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -30;
					parentOffsetY_ = 16;
					childOffsetX_ = -32;
					childOffsetY_ = -16;
					parentOffset = {
						x = -30;
						y = 16;
					};
					childOffset = {
						x = -32;
						y = -16;
					};
				},
				{
					triggerName = "задание1провалено";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -48;
					parentOffsetY_ = 16;
					childOffsetX_ = -49;
					childOffsetY_ = -16;
					parentOffset = {
						x = -48;
						y = 16;
					};
					childOffset = {
						x = -49;
						y = -16;
					};
				},
				{
					triggerName = "задание2провалено";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -60;
					parentOffsetY_ = 16;
					childOffsetX_ = -65;
					childOffsetY_ = -16;
					parentOffset = {
						x = -60;
						y = 16;
					};
					childOffset = {
						x = -65;
						y = -16;
					};
				},
				{
					triggerName = "выкл. интерфейс2";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -26;
					parentOffsetY_ = -16;
					childOffsetX_ = -25;
					childOffsetY_ = 16;
					parentOffset = {
						x = -26;
						y = -16;
					};
					childOffset = {
						x = -25;
						y = 16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 0;
			cellNumberY = -2;
			left_ = 0;
			top_ = -128;
			right_ = 256;
			bottom_ = -96;
			cellIndex = {
				x = 0;
				y = -2;
			};
			boundingRect = {
				left = 0;
				top = -128;
				right = 256;
				bottom = -96;
			};
		},
		{
			name = "терминал";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionMessage" {
				internalColor_ = 0;
				messageID = "Mission Tips.Mission 03.Tip 1";
				message = "";
				delay = 0;
				duration = 0;
				syncroBySound = true;
				delayTimer = {
					time = 0;
				};
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				3;
				{
					triggerName = "ЗАДАНИЕ";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -128;
					parentOffsetY_ = 13;
					childOffsetX_ = 126;
					childOffsetY_ = -16;
					parentOffset = {
						x = -128;
						y = 13;
					};
					childOffset = {
						x = 126;
						y = -16;
					};
				},
				{
					triggerName = "активировать кнопку летной лаборатории";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -107;
					parentOffsetY_ = 16;
					childOffsetX_ = 124;
					childOffsetY_ = -16;
					parentOffset = {
						x = -107;
						y = 16;
					};
					childOffset = {
						x = 124;
						y = -16;
					};
				},
				{
					triggerName = "1";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 42;
					parentOffsetY_ = -16;
					childOffsetX_ = 46;
					childOffsetY_ = 16;
					parentOffset = {
						x = 42;
						y = -16;
					};
					childOffset = {
						x = 46;
						y = 16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 14145535;
			cellNumberX = 2;
			cellNumberY = 1;
			left_ = 576;
			top_ = 64;
			right_ = 832;
			bottom_ = 96;
			cellIndex = {
				x = 2;
				y = 1;
			};
			boundingRect = {
				left = 576;
				top = 64;
				right = 832;
				bottom = 96;
			};
		},
		{
			name = "пауза0";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionDelay" {
				internalColor_ = 0;
				delay = 200;
				showTimer = false;
				scaleByDifficulty = true;
				timer = {
					time = 0;
				};
			};
			outcomingLinks = {
				4;
				{
					triggerName = "вороны2";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 23;
					parentOffsetY_ = 16;
					childOffsetX_ = 23;
					childOffsetY_ = -16;
					parentOffset = {
						x = 23;
						y = 16;
					};
					childOffset = {
						x = 23;
						y = -16;
					};
				},
				{
					triggerName = "дракон2";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = 13;
					childOffsetX_ = -127;
					childOffsetY_ = -16;
					parentOffset = {
						x = 128;
						y = 13;
					};
					childOffset = {
						x = -127;
						y = -16;
					};
				},
				{
					triggerName = "осы2";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = 4;
					childOffsetX_ = -128;
					childOffsetY_ = -13;
					parentOffset = {
						x = 128;
						y = 4;
					};
					childOffset = {
						x = -128;
						y = -13;
					};
				},
				{
					triggerName = "пауза00";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 125;
					parentOffsetY_ = -16;
					childOffsetX_ = -127;
					childOffsetY_ = 16;
					parentOffset = {
						x = 125;
						y = -16;
					};
					childOffset = {
						x = -127;
						y = 16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 1;
			cellNumberY = 8;
			left_ = 288;
			top_ = 512;
			right_ = 544;
			bottom_ = 544;
			cellIndex = {
				x = 1;
				y = 8;
			};
			boundingRect = {
				left = 288;
				top = 512;
				right = 544;
				bottom = 544;
			};
		},
		{
			name = "юниты погибли на хаосе";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					5;
					{
						type = NORMAL;
						condition = "struct ConditionUnitClassUnderAttack" {
							state_ = false;
							internalColor_ = 0;
							victimUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_IGNORE;
							damagePercent = 100;
							agressorUnitClass = UNIT_CLASS_IGNORE;
							playerType = AI_PLAYER_TYPE_ME;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionSquadSufficientUnits" {
							state_ = false;
							internalColor_ = 0;
							playerType = AI_PLAYER_TYPE_ME;
							chooseSquadID = CHOOSE_SQUAD_1;
							unitType = UNIT_ATTRIBUTE_STRAFER;
							compareOperator = COMPARE_GREATER_EQ;
							unitsNumber = 1;
							soldiers = 0;
							officers = 0;
							technics = 0;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionSquadSufficientUnits" {
							state_ = false;
							internalColor_ = 0;
							playerType = AI_PLAYER_TYPE_ME;
							chooseSquadID = CHOOSE_SQUAD_2;
							unitType = UNIT_ATTRIBUTE_STRAFER;
							compareOperator = COMPARE_GREATER_EQ;
							unitsNumber = 1;
							soldiers = 0;
							officers = 0;
							technics = 0;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionSquadSufficientUnits" {
							state_ = false;
							internalColor_ = 0;
							playerType = AI_PLAYER_TYPE_ME;
							chooseSquadID = CHOOSE_SQUAD_4;
							unitType = UNIT_ATTRIBUTE_STRAFER;
							compareOperator = COMPARE_GREATER_EQ;
							unitsNumber = 1;
							soldiers = 0;
							officers = 0;
							technics = 0;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionSquadSufficientUnits" {
							state_ = false;
							internalColor_ = 0;
							playerType = AI_PLAYER_TYPE_ME;
							chooseSquadID = CHOOSE_SQUAD_5;
							unitType = UNIT_ATTRIBUTE_STRAFER;
							compareOperator = COMPARE_GREATER_EQ;
							unitsNumber = 1;
							soldiers = 0;
							officers = 0;
							technics = 0;
						};
					}
				};
			};
			action = "struct ActionMessage" {
				internalColor_ = 0;
				messageID = "Mission Tips.Mission 03.Tip 2";
				message = "";
				delay = 0;
				duration = 0;
				syncroBySound = true;
				delayTimer = {
					time = 0;
				};
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 14145535;
			cellNumberX = 3;
			cellNumberY = 1;
			left_ = 864;
			top_ = 64;
			right_ = 1120;
			bottom_ = 96;
			cellIndex = {
				x = 3;
				y = 1;
			};
			boundingRect = {
				left = 864;
				top = 64;
				right = 1120;
				bottom = 96;
			};
		},
		{
			name = "летные готовы";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionMessage" {
				internalColor_ = 0;
				messageID = "Mission Tips.Mission 03.Tip 3";
				message = "";
				delay = 0;
				duration = 0;
				syncroBySound = true;
				delayTimer = {
					time = 0;
				};
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				1;
				{
					triggerName = "задание2";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -2;
					parentOffsetY_ = 16;
					childOffsetX_ = -4;
					childOffsetY_ = -16;
					parentOffset = {
						x = -2;
						y = 16;
					};
					childOffset = {
						x = -4;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 14145535;
			cellNumberX = 1;
			cellNumberY = 6;
			left_ = 288;
			top_ = 384;
			right_ = 544;
			bottom_ = 416;
			cellIndex = {
				x = 1;
				y = 6;
			};
			boundingRect = {
				left = 288;
				top = 384;
				right = 544;
				bottom = 416;
			};
		},
		{
			name = "задача1 выполнена";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_FLY_STATION1;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					}
				};
			};
			action = "struct ActionTask" {
				internalColor_ = 0;
				type = COMPLETED;
				taskID = "Mission Tasks.Mission 03.Task 1";
				duration = 5;
				syncroBySound = false;
				showTips = true;
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				1;
				{
					triggerName = "задание1 назначено";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = -1;
					childOffsetX_ = -128;
					childOffsetY_ = -1;
					parentOffset = {
						x = 128;
						y = -1;
					};
					childOffset = {
						x = -128;
						y = -1;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 14145535;
			cellNumberX = 1;
			cellNumberY = 5;
			left_ = 288;
			top_ = 320;
			right_ = 544;
			bottom_ = 352;
			cellIndex = {
				x = 1;
				y = 5;
			};
			boundingRect = {
				left = 288;
				top = 320;
				right = 544;
				bottom = 352;
			};
		},
		{
			name = "задание2";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_FLY_STATION1;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					}
				};
			};
			action = "struct ActionTask" {
				internalColor_ = 0;
				type = ASSIGNED;
				taskID = "Mission Tasks.Mission 03.Task 2";
				duration = 5;
				syncroBySound = false;
				showTips = true;
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				1;
				{
					triggerName = "пауза0";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -11;
					parentOffsetY_ = 16;
					childOffsetX_ = -12;
					childOffsetY_ = -16;
					parentOffset = {
						x = -11;
						y = 16;
					};
					childOffset = {
						x = -12;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 14145535;
			cellNumberX = 1;
			cellNumberY = 7;
			left_ = 288;
			top_ = 448;
			right_ = 544;
			bottom_ = 480;
			cellIndex = {
				x = 1;
				y = 7;
			};
			boundingRect = {
				left = 288;
				top = 448;
				right = 544;
				bottom = 480;
			};
		},
		{
			name = "задание2 выполнено";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = OR;
				conditions = {
					4;
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = false;
							internalColor_ = 0;
							type = AND;
							conditions = {
								4;
								{
									type = INVERTED;
									condition = "struct ConditionUnitClassUnderAttack" {
										state_ = false;
										internalColor_ = 0;
										victimUnitClass = UNIT_CLASS_STRUCTURE_ENVIRONMENT | UNIT_CLASS_IGNORE;
										damagePercent = 99;
										agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_IGNORE;
										playerType = AI_PLAYER_TYPE_WORLD;
									};
								},
								{
									type = INVERTED;
									condition = "struct ConditionObjectExists" {
										state_ = true;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_SCUM_SPOT2;
										counter = 1;
										playerType = AI_PLAYER_TYPE_WORLD;
										constructedAndConstructing = true;
									};
								},
								{
									type = INVERTED;
									condition = "struct ConditionObjectExists" {
										state_ = false;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_SCUM_SPOT;
										counter = 1;
										playerType = AI_PLAYER_TYPE_WORLD;
										constructedAndConstructing = true;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionUnitClassUnderAttack" {
										state_ = false;
										internalColor_ = 0;
										victimUnitClass = UNIT_CLASS_STRUCTURE_ENVIRONMENT | UNIT_CLASS_IGNORE;
										damagePercent = 95;
										agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_IGNORE;
										playerType = AI_PLAYER_TYPE_WORLD;
									};
								}
							};
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = false;
							internalColor_ = 0;
							type = AND;
							conditions = {
								4;
								{
									type = INVERTED;
									condition = "struct ConditionUnitClassUnderAttack" {
										state_ = false;
										internalColor_ = 0;
										victimUnitClass = UNIT_CLASS_STRUCTURE_ENVIRONMENT | UNIT_CLASS_IGNORE;
										damagePercent = 99;
										agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_IGNORE;
										playerType = AI_PLAYER_TYPE_WORLD;
									};
								},
								{
									type = INVERTED;
									condition = "struct ConditionObjectExists" {
										state_ = true;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_SCUM_SPOT;
										counter = 1;
										playerType = AI_PLAYER_TYPE_WORLD;
										constructedAndConstructing = true;
									};
								},
								{
									type = INVERTED;
									condition = "struct ConditionObjectExists" {
										state_ = false;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_SCUM_SPOT3;
										counter = 1;
										playerType = AI_PLAYER_TYPE_WORLD;
										constructedAndConstructing = true;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionUnitClassUnderAttack" {
										state_ = false;
										internalColor_ = 0;
										victimUnitClass = UNIT_CLASS_STRUCTURE_ENVIRONMENT | UNIT_CLASS_IGNORE;
										damagePercent = 95;
										agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_IGNORE;
										playerType = AI_PLAYER_TYPE_WORLD;
									};
								}
							};
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = false;
							internalColor_ = 0;
							type = AND;
							conditions = {
								4;
								{
									type = INVERTED;
									condition = "struct ConditionUnitClassUnderAttack" {
										state_ = false;
										internalColor_ = 0;
										victimUnitClass = UNIT_CLASS_STRUCTURE_ENVIRONMENT | UNIT_CLASS_IGNORE;
										damagePercent = 99;
										agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_IGNORE;
										playerType = AI_PLAYER_TYPE_WORLD;
									};
								},
								{
									type = INVERTED;
									condition = "struct ConditionObjectExists" {
										state_ = true;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_SCUM_SPOT3;
										counter = 1;
										playerType = AI_PLAYER_TYPE_WORLD;
										constructedAndConstructing = true;
									};
								},
								{
									type = INVERTED;
									condition = "struct ConditionObjectExists" {
										state_ = false;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_SCUM_SPOT2;
										counter = 1;
										playerType = AI_PLAYER_TYPE_WORLD;
										constructedAndConstructing = true;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionUnitClassUnderAttack" {
										state_ = false;
										internalColor_ = 0;
										victimUnitClass = UNIT_CLASS_STRUCTURE_ENVIRONMENT | UNIT_CLASS_IGNORE;
										damagePercent = 95;
										agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_IGNORE;
										playerType = AI_PLAYER_TYPE_WORLD;
									};
								}
							};
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = false;
							internalColor_ = 0;
							type = AND;
							conditions = {
								3;
								{
									type = INVERTED;
									condition = "struct ConditionObjectExists" {
										state_ = true;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_SCUM_SPOT2;
										counter = 1;
										playerType = AI_PLAYER_TYPE_WORLD;
										constructedAndConstructing = true;
									};
								},
								{
									type = INVERTED;
									condition = "struct ConditionObjectExists" {
										state_ = false;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_SCUM_SPOT3;
										counter = 1;
										playerType = AI_PLAYER_TYPE_WORLD;
										constructedAndConstructing = true;
									};
								},
								{
									type = INVERTED;
									condition = "struct ConditionObjectExists" {
										state_ = false;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_SCUM_SPOT;
										counter = 1;
										playerType = AI_PLAYER_TYPE_WORLD;
										constructedAndConstructing = true;
									};
								}
							};
						};
					}
				};
			};
			action = "struct ActionTask" {
				internalColor_ = 0;
				type = COMPLETED;
				taskID = "Mission Tasks.Mission 03.Task 2";
				duration = 5;
				syncroBySound = false;
				showTips = true;
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				1;
				{
					triggerName = "1110";
					color = STRATEGY_YELLOW;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 25;
					parentOffsetY_ = 16;
					childOffsetX_ = 25;
					childOffsetY_ = -16;
					parentOffset = {
						x = 25;
						y = 16;
					};
					childOffset = {
						x = 25;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 13027071;
			cellNumberX = 1;
			cellNumberY = 10;
			left_ = 288;
			top_ = 640;
			right_ = 544;
			bottom_ = 672;
			cellIndex = {
				x = 1;
				y = 10;
			};
			boundingRect = {
				left = 288;
				top = 640;
				right = 544;
				bottom = 672;
			};
		},
		{
			name = "на скамспот";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					4;
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_SCUM_SPOT3;
							counter = 1;
							playerType = AI_PLAYER_TYPE_WORLD;
							constructedAndConstructing = true;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_SCUM_SPOT2;
							counter = 1;
							playerType = AI_PLAYER_TYPE_WORLD;
							constructedAndConstructing = true;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionUnitClassUnderAttack" {
							state_ = false;
							internalColor_ = 0;
							victimUnitClass = UNIT_CLASS_STRUCTURE_ENVIRONMENT | UNIT_CLASS_IGNORE;
							damagePercent = 95;
							agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_MISSILE | UNIT_CLASS_IGNORE;
							playerType = AI_PLAYER_TYPE_WORLD;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionUnitClassUnderAttack" {
							state_ = true;
							internalColor_ = 0;
							victimUnitClass = UNIT_CLASS_STRUCTURE_ENVIRONMENT | UNIT_CLASS_IGNORE;
							damagePercent = 99;
							agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_AIR | UNIT_CLASS_MISSILE | UNIT_CLASS_IGNORE;
							playerType = AI_PLAYER_TYPE_WORLD;
						};
					}
				};
			};
			action = "struct ActionSetCamera" {
				internalColor_ = 0;
				cameraSplineName = "на скамспот";
				stepTime = 4.;
				cycles = 1;
				smoothTransition = false;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12632256;
			cellNumberX = 0;
			cellNumberY = 9;
			left_ = 0;
			top_ = 576;
			right_ = 256;
			bottom_ = 608;
			cellIndex = {
				x = 0;
				y = 9;
			};
			boundingRect = {
				left = 0;
				top = 576;
				right = 256;
				bottom = 608;
			};
		},
		{
			name = "на скамспот2";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					4;
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_SCUM_SPOT;
							counter = 1;
							playerType = AI_PLAYER_TYPE_WORLD;
							constructedAndConstructing = true;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_SCUM_SPOT3;
							counter = 1;
							playerType = AI_PLAYER_TYPE_WORLD;
							constructedAndConstructing = true;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionUnitClassUnderAttack" {
							state_ = true;
							internalColor_ = 0;
							victimUnitClass = UNIT_CLASS_STRUCTURE_ENVIRONMENT | UNIT_CLASS_IGNORE;
							damagePercent = 95;
							agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_AIR | UNIT_CLASS_MISSILE | UNIT_CLASS_IGNORE;
							playerType = AI_PLAYER_TYPE_WORLD;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionUnitClassUnderAttack" {
							state_ = false;
							internalColor_ = 0;
							victimUnitClass = UNIT_CLASS_STRUCTURE_ENVIRONMENT | UNIT_CLASS_IGNORE;
							damagePercent = 99;
							agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_AIR | UNIT_CLASS_MISSILE | UNIT_CLASS_IGNORE;
							playerType = AI_PLAYER_TYPE_WORLD;
						};
					}
				};
			};
			action = "struct ActionSetCamera" {
				internalColor_ = 0;
				cameraSplineName = "на скамспот2";
				stepTime = 4.;
				cycles = 1;
				smoothTransition = false;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12632256;
			cellNumberX = 0;
			cellNumberY = 8;
			left_ = 0;
			top_ = 512;
			right_ = 256;
			bottom_ = 544;
			cellIndex = {
				x = 0;
				y = 8;
			};
			boundingRect = {
				left = 0;
				top = 512;
				right = 256;
				bottom = 544;
			};
		},
		{
			name = "на скамспот3";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					4;
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_SCUM_SPOT2;
							counter = 1;
							playerType = AI_PLAYER_TYPE_WORLD;
							constructedAndConstructing = true;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_SCUM_SPOT;
							counter = 1;
							playerType = AI_PLAYER_TYPE_WORLD;
							constructedAndConstructing = true;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionUnitClassUnderAttack" {
							state_ = false;
							internalColor_ = 0;
							victimUnitClass = UNIT_CLASS_STRUCTURE_ENVIRONMENT | UNIT_CLASS_IGNORE;
							damagePercent = 95;
							agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_AIR | UNIT_CLASS_MISSILE | UNIT_CLASS_IGNORE;
							playerType = AI_PLAYER_TYPE_WORLD;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionUnitClassUnderAttack" {
							state_ = false;
							internalColor_ = 0;
							victimUnitClass = UNIT_CLASS_STRUCTURE_ENVIRONMENT | UNIT_CLASS_IGNORE;
							damagePercent = 99;
							agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_AIR | UNIT_CLASS_MISSILE | UNIT_CLASS_IGNORE;
							playerType = AI_PLAYER_TYPE_WORLD;
						};
					}
				};
			};
			action = "struct ActionSetCamera" {
				internalColor_ = 0;
				cameraSplineName = "на скамспот3";
				stepTime = 4.;
				cycles = 1;
				smoothTransition = false;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12632256;
			cellNumberX = 0;
			cellNumberY = 7;
			left_ = 0;
			top_ = 448;
			right_ = 256;
			bottom_ = 480;
			cellIndex = {
				x = 0;
				y = 7;
			};
			boundingRect = {
				left = 0;
				top = 448;
				right = 256;
				bottom = 480;
			};
		},
		{
			name = "вороны2";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionObjectNearObjectByLabel" {
							state_ = true;
							internalColor_ = 0;
							label = "скам спот2";
							object = UNIT_ATTRIBUTE_SCUM_SPOT2;
							objectConstructed = false;
							playerType = AI_PLAYER_TYPE_WORLD;
							distance = 150.;
						};
					}
				};
			};
			action = "struct ActionActivateObjectByLabel" {
				internalColor_ = 0;
				label = "вороны 2";
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 1;
			cellNumberY = 9;
			left_ = 288;
			top_ = 576;
			right_ = 544;
			bottom_ = 608;
			cellIndex = {
				x = 1;
				y = 9;
			};
			boundingRect = {
				left = 288;
				top = 576;
				right = 544;
				bottom = 608;
			};
		},
		{
			name = "дракон2";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionObjectNearObjectByLabel" {
							state_ = true;
							internalColor_ = 0;
							label = "скам спот";
							object = UNIT_ATTRIBUTE_SCUM_SPOT;
							objectConstructed = false;
							playerType = AI_PLAYER_TYPE_WORLD;
							distance = 150.;
						};
					}
				};
			};
			action = "struct ActionActivateObjectByLabel" {
				internalColor_ = 0;
				label = "дракон 2";
			};
			outcomingLinks = {
				1;
				{
					triggerName = "деактивировать дракон 1";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -1;
					parentOffsetY_ = 16;
					childOffsetX_ = -1;
					childOffsetY_ = -16;
					parentOffset = {
						x = -1;
						y = 16;
					};
					childOffset = {
						x = -1;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 2;
			cellNumberY = 9;
			left_ = 576;
			top_ = 576;
			right_ = 832;
			bottom_ = 608;
			cellIndex = {
				x = 2;
				y = 9;
			};
			boundingRect = {
				left = 576;
				top = 576;
				right = 832;
				bottom = 608;
			};
		},
		{
			name = "осы2";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionObjectNearObjectByLabel" {
							state_ = true;
							internalColor_ = 0;
							label = "скам спот3";
							object = UNIT_ATTRIBUTE_SCUM_SPOT3;
							objectConstructed = false;
							playerType = AI_PLAYER_TYPE_WORLD;
							distance = 150.;
						};
					}
				};
			};
			action = "struct ActionActivateObjectByLabel" {
				internalColor_ = 0;
				label = "осы 2";
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 3;
			cellNumberY = 9;
			left_ = 864;
			top_ = 576;
			right_ = 1120;
			bottom_ = 608;
			cellIndex = {
				x = 3;
				y = 9;
			};
			boundingRect = {
				left = 864;
				top = 576;
				right = 1120;
				bottom = 608;
			};
		},
		{
			name = "пауза2";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = OR;
				conditions = {
					5;
					{
						type = NORMAL;
						condition = "struct ConditionSquadSufficientUnits" {
							state_ = false;
							internalColor_ = 0;
							playerType = AI_PLAYER_TYPE_ME;
							chooseSquadID = CHOOSE_SQUAD_5;
							unitType = UNIT_ATTRIBUTE_STRAFER;
							compareOperator = COMPARE_GREATER_EQ;
							unitsNumber = 1;
							soldiers = 0;
							officers = 0;
							technics = 0;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionSquadSufficientUnits" {
							state_ = false;
							internalColor_ = 0;
							playerType = AI_PLAYER_TYPE_ME;
							chooseSquadID = CHOOSE_SQUAD_1;
							unitType = UNIT_ATTRIBUTE_STRAFER;
							compareOperator = COMPARE_GREATER_EQ;
							unitsNumber = 1;
							soldiers = 0;
							officers = 0;
							technics = 0;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionSquadSufficientUnits" {
							state_ = false;
							internalColor_ = 0;
							playerType = AI_PLAYER_TYPE_ME;
							chooseSquadID = CHOOSE_SQUAD_2;
							unitType = UNIT_ATTRIBUTE_STRAFER;
							compareOperator = COMPARE_GREATER_EQ;
							unitsNumber = 1;
							soldiers = 0;
							officers = 0;
							technics = 0;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionSquadSufficientUnits" {
							state_ = false;
							internalColor_ = 0;
							playerType = AI_PLAYER_TYPE_ME;
							chooseSquadID = CHOOSE_SQUAD_4;
							unitType = UNIT_ATTRIBUTE_STRAFER;
							compareOperator = COMPARE_GREATER_EQ;
							unitsNumber = 1;
							soldiers = 0;
							officers = 0;
							technics = 0;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionSquadSufficientUnits" {
							state_ = false;
							internalColor_ = 0;
							playerType = AI_PLAYER_TYPE_ME;
							chooseSquadID = CHOOSE_SQUAD_3;
							unitType = UNIT_ATTRIBUTE_STRAFER;
							compareOperator = COMPARE_GREATER_EQ;
							unitsNumber = 1;
							soldiers = 0;
							officers = 0;
							technics = 0;
						};
					}
				};
			};
			action = "struct Action" {
				internalColor_ = 0;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 3;
			cellNumberY = 0;
			left_ = 864;
			top_ = 0;
			right_ = 1120;
			bottom_ = 32;
			cellIndex = {
				x = 3;
				y = 0;
			};
			boundingRect = {
				left = 864;
				top = 0;
				right = 1120;
				bottom = 32;
			};
		},
		{
			name = "деактивировать ворон0";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = INVERTED;
						condition = "struct ConditionObjectNearObjectByLabel" {
							state_ = true;
							internalColor_ = 0;
							label = "скам спот2";
							object = UNIT_ATTRIBUTE_SCUM_SPOT2;
							objectConstructed = false;
							playerType = AI_PLAYER_TYPE_WORLD;
							distance = 100.;
						};
					}
				};
			};
			action = "struct ActionDeactivateObjectByLabel" {
				internalColor_ = 0;
				label = "вороны 2";
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = -1;
			cellNumberY = 5;
			left_ = -288;
			top_ = 320;
			right_ = -32;
			bottom_ = 352;
			cellIndex = {
				x = -1;
				y = 5;
			};
			boundingRect = {
				left = -288;
				top = 320;
				right = -32;
				bottom = 352;
			};
		},
		{
			name = "деактивировать ос0";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = INVERTED;
						condition = "struct ConditionObjectNearObjectByLabel" {
							state_ = true;
							internalColor_ = 0;
							label = "скам спот3";
							object = UNIT_ATTRIBUTE_SCUM_SPOT3;
							objectConstructed = false;
							playerType = AI_PLAYER_TYPE_WORLD;
							distance = 100.;
						};
					}
				};
			};
			action = "struct ActionDeactivateObjectByLabel" {
				internalColor_ = 0;
				label = "осы 2";
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = -1;
			cellNumberY = 7;
			left_ = -288;
			top_ = 448;
			right_ = -32;
			bottom_ = 480;
			cellIndex = {
				x = -1;
				y = 7;
			};
			boundingRect = {
				left = -288;
				top = 448;
				right = -32;
				bottom = 480;
			};
		},
		{
			name = "пауза00";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionDelay" {
				internalColor_ = 0;
				delay = 120;
				showTimer = false;
				scaleByDifficulty = true;
				timer = {
					time = 0;
				};
			};
			outcomingLinks = {
				2;
				{
					triggerName = "дракон3";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = -9;
					childOffsetX_ = -128;
					childOffsetY_ = -8;
					parentOffset = {
						x = 128;
						y = -9;
					};
					childOffset = {
						x = -128;
						y = -8;
					};
				},
				{
					triggerName = "дракон4";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = 6;
					childOffsetX_ = -128;
					childOffsetY_ = -15;
					parentOffset = {
						x = 128;
						y = 6;
					};
					childOffset = {
						x = -128;
						y = -15;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 2;
			cellNumberY = 7;
			left_ = 576;
			top_ = 448;
			right_ = 832;
			bottom_ = 480;
			cellIndex = {
				x = 2;
				y = 7;
			};
			boundingRect = {
				left = 576;
				top = 448;
				right = 832;
				bottom = 480;
			};
		},
		{
			name = "дракон3";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = OR;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_SCUM_SPOT2;
							counter = 1;
							playerType = AI_PLAYER_TYPE_WORLD;
							constructedAndConstructing = true;
						};
					}
				};
			};
			action = "struct ActionActivateObjectByLabel" {
				internalColor_ = 0;
				label = "_дракон3";
			};
			outcomingLinks = {
				2;
				{
					triggerName = "деактивировать споты";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = -5;
					childOffsetX_ = -128;
					childOffsetY_ = -5;
					parentOffset = {
						x = 128;
						y = -5;
					};
					childOffset = {
						x = -128;
						y = -5;
					};
				},
				{
					triggerName = "деактивировать дракона3";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 127;
					parentOffsetY_ = -16;
					childOffsetX_ = -128;
					childOffsetY_ = 9;
					parentOffset = {
						x = 127;
						y = -16;
					};
					childOffset = {
						x = -128;
						y = 9;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 3;
			cellNumberY = 7;
			left_ = 864;
			top_ = 448;
			right_ = 1120;
			bottom_ = 480;
			cellIndex = {
				x = 3;
				y = 7;
			};
			boundingRect = {
				left = 864;
				top = 448;
				right = 1120;
				bottom = 480;
			};
		},
		{
			name = "дракон4";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = OR;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_SCUM_SPOT3;
							counter = 1;
							playerType = AI_PLAYER_TYPE_WORLD;
							constructedAndConstructing = true;
						};
					}
				};
			};
			action = "struct ActionActivateObjectByLabel" {
				internalColor_ = 0;
				label = "_дракон 4";
			};
			outcomingLinks = {
				2;
				{
					triggerName = "деактивировать споты";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = 1;
					childOffsetX_ = -100;
					childOffsetY_ = 16;
					parentOffset = {
						x = 128;
						y = 1;
					};
					childOffset = {
						x = -100;
						y = 16;
					};
				},
				{
					triggerName = "деактивировать дракона4";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = 10;
					childOffsetX_ = -128;
					childOffsetY_ = 8;
					parentOffset = {
						x = 128;
						y = 10;
					};
					childOffset = {
						x = -128;
						y = 8;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 3;
			cellNumberY = 8;
			left_ = 864;
			top_ = 512;
			right_ = 1120;
			bottom_ = 544;
			cellIndex = {
				x = 3;
				y = 8;
			};
			boundingRect = {
				left = 864;
				top = 512;
				right = 1120;
				bottom = 544;
			};
		},
		{
			name = "1";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct Action" {
				internalColor_ = 0;
			};
			outcomingLinks = {
				2;
				{
					triggerName = "пауза2";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = -11;
					childOffsetX_ = -128;
					childOffsetY_ = -11;
					parentOffset = {
						x = 128;
						y = -11;
					};
					childOffset = {
						x = -128;
						y = -11;
					};
				},
				{
					triggerName = "юниты погибли на хаосе";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = 5;
					childOffsetX_ = -127;
					childOffsetY_ = -16;
					parentOffset = {
						x = 128;
						y = 5;
					};
					childOffset = {
						x = -127;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 2;
			cellNumberY = 0;
			left_ = 576;
			top_ = 0;
			right_ = 832;
			bottom_ = 32;
			cellIndex = {
				x = 2;
				y = 0;
			};
			boundingRect = {
				left = 576;
				top = 0;
				right = 832;
				bottom = 32;
			};
		},
		{
			name = "UserCamera";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = 0;
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = -1;
			cellNumberY = 10;
			left_ = -288;
			top_ = 640;
			right_ = -32;
			bottom_ = 672;
			cellIndex = {
				x = -1;
				y = 10;
			};
			boundingRect = {
				left = -288;
				top = 640;
				right = -32;
				bottom = 672;
			};
		},
		{
			name = "вкл. поле";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionSwitchFieldOn" {
				internalColor_ = 0;
				onlyIfAi = false;
				duration = 50;
				energyReserve = 0.;
				allCores = true;
				onlyIfCoreDamaged = false;
				timer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 2;
			cellNumberY = -1;
			left_ = 576;
			top_ = -64;
			right_ = 832;
			bottom_ = -32;
			cellIndex = {
				x = 2;
				y = -1;
			};
			boundingRect = {
				left = 576;
				top = -64;
				right = 832;
				bottom = -32;
			};
		},
		{
			name = "вкл. интерфейс";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionSetInterface" {
				internalColor_ = 0;
				enableInterface = true;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "ЗАДАНИЕ";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 95;
					parentOffsetY_ = 16;
					childOffsetX_ = 96;
					childOffsetY_ = -16;
					parentOffset = {
						x = 95;
						y = 16;
					};
					childOffset = {
						x = 96;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 1;
			cellNumberY = 1;
			left_ = 288;
			top_ = 64;
			right_ = 544;
			bottom_ = 96;
			cellIndex = {
				x = 1;
				y = 1;
			};
			boundingRect = {
				left = 288;
				top = 64;
				right = 544;
				bottom = 96;
			};
		},
		{
			name = "выкл. интерфейс";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					4;
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_SCUM_SPOT2;
							counter = 1;
							playerType = AI_PLAYER_TYPE_WORLD;
							constructedAndConstructing = true;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_SCUM_SPOT;
							counter = 1;
							playerType = AI_PLAYER_TYPE_WORLD;
							constructedAndConstructing = true;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionUnitClassUnderAttack" {
							state_ = false;
							internalColor_ = 0;
							victimUnitClass = UNIT_CLASS_STRUCTURE_ENVIRONMENT | UNIT_CLASS_IGNORE;
							damagePercent = 95;
							agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_AIR | UNIT_CLASS_MISSILE | UNIT_CLASS_IGNORE;
							playerType = AI_PLAYER_TYPE_WORLD;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionUnitClassUnderAttack" {
							state_ = false;
							internalColor_ = 0;
							victimUnitClass = UNIT_CLASS_STRUCTURE_ENVIRONMENT | UNIT_CLASS_IGNORE;
							damagePercent = 99;
							agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_AIR | UNIT_CLASS_MISSILE | UNIT_CLASS_IGNORE;
							playerType = AI_PLAYER_TYPE_WORLD;
						};
					}
				};
			};
			action = "struct ActionSetInterface" {
				internalColor_ = 0;
				enableInterface = false;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 0;
			cellNumberY = 4;
			left_ = 0;
			top_ = 256;
			right_ = 256;
			bottom_ = 288;
			cellIndex = {
				x = 0;
				y = 4;
			};
			boundingRect = {
				left = 0;
				top = 256;
				right = 256;
				bottom = 288;
			};
		},
		{
			name = "уничтожить скам-споты";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_SCUM_SPOT;
							counter = 1;
							playerType = AI_PLAYER_TYPE_WORLD;
							constructedAndConstructing = false;
						};
					}
				};
			};
			action = "struct ActionKillObject" {
				internalColor_ = 0;
				object = UNIT_ATTRIBUTE_SCUM_SPOT;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 0;
			cellNumberY = 12;
			left_ = 0;
			top_ = 768;
			right_ = 256;
			bottom_ = 800;
			cellIndex = {
				x = 0;
				y = 12;
			};
			boundingRect = {
				left = 0;
				top = 768;
				right = 256;
				bottom = 800;
			};
		},
		{
			name = "уничтожить скам-споты0";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_SCUM_SPOT2;
							counter = 1;
							playerType = AI_PLAYER_TYPE_WORLD;
							constructedAndConstructing = false;
						};
					}
				};
			};
			action = "struct ActionKillObject" {
				internalColor_ = 0;
				object = UNIT_ATTRIBUTE_SCUM_SPOT2;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 0;
			cellNumberY = 13;
			left_ = 0;
			top_ = 832;
			right_ = 256;
			bottom_ = 864;
			cellIndex = {
				x = 0;
				y = 13;
			};
			boundingRect = {
				left = 0;
				top = 832;
				right = 256;
				bottom = 864;
			};
		},
		{
			name = "уничтожить скам-споты1";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_SCUM_SPOT3;
							counter = 1;
							playerType = AI_PLAYER_TYPE_WORLD;
							constructedAndConstructing = false;
						};
					}
				};
			};
			action = "struct ActionKillObject" {
				internalColor_ = 0;
				object = UNIT_ATTRIBUTE_SCUM_SPOT3;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 0;
			cellNumberY = 14;
			left_ = 0;
			top_ = 896;
			right_ = 256;
			bottom_ = 928;
			cellIndex = {
				x = 0;
				y = 14;
			};
			boundingRect = {
				left = 0;
				top = 896;
				right = 256;
				bottom = 928;
			};
		},
		{
			name = "уничтожить скам-споты2";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_SCUM_SPOT4;
							counter = 1;
							playerType = AI_PLAYER_TYPE_WORLD;
							constructedAndConstructing = false;
						};
					}
				};
			};
			action = "struct ActionKillObject" {
				internalColor_ = 0;
				object = UNIT_ATTRIBUTE_SCUM_SPOT4;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 0;
			cellNumberY = 15;
			left_ = 0;
			top_ = 960;
			right_ = 256;
			bottom_ = 992;
			cellIndex = {
				x = 0;
				y = 15;
			};
			boundingRect = {
				left = 0;
				top = 960;
				right = 256;
				bottom = 992;
			};
		},
		{
			name = "на скамспот111111";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionSetCamera" {
				internalColor_ = 0;
				cameraSplineName = "катсцена-н";
				stepTime = 3.;
				cycles = 1;
				smoothTransition = true;
			};
			outcomingLinks = {
				2;
				{
					triggerName = "скамспот22222";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 49;
					parentOffsetY_ = 16;
					childOffsetX_ = 49;
					childOffsetY_ = -16;
					parentOffset = {
						x = 49;
						y = 16;
					};
					childOffset = {
						x = 49;
						y = -16;
					};
				},
				{
					triggerName = "10";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 126;
					parentOffsetY_ = 16;
					childOffsetX_ = -128;
					childOffsetY_ = -16;
					parentOffset = {
						x = 126;
						y = 16;
					};
					childOffset = {
						x = -128;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12632256;
			cellNumberX = 1;
			cellNumberY = -4;
			left_ = 288;
			top_ = -256;
			right_ = 544;
			bottom_ = -224;
			cellIndex = {
				x = 1;
				y = -4;
			};
			boundingRect = {
				left = 288;
				top = -256;
				right = 544;
				bottom = -224;
			};
		},
		{
			name = "скамспот22222";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = INVERTED;
						condition = "struct ConditionCutSceneWasSkipped" {
							state_ = false;
							internalColor_ = 0;
							timeMax = 15;
						};
					}
				};
			};
			action = "struct ActionSetCamera" {
				internalColor_ = 0;
				cameraSplineName = "скамспот22222";
				stepTime = 3.;
				cycles = 1;
				smoothTransition = false;
			};
			outcomingLinks = {
				2;
				{
					triggerName = "скамспот3";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 24;
					parentOffsetY_ = 16;
					childOffsetX_ = 21;
					childOffsetY_ = -16;
					parentOffset = {
						x = 24;
						y = 16;
					};
					childOffset = {
						x = 21;
						y = -16;
					};
				},
				{
					triggerName = "10";
					color = STRATEGY_BLUE;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = 0;
					childOffsetX_ = -128;
					childOffsetY_ = -1;
					parentOffset = {
						x = 128;
						y = 0;
					};
					childOffset = {
						x = -128;
						y = -1;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12632256;
			cellNumberX = 1;
			cellNumberY = -3;
			left_ = 288;
			top_ = -192;
			right_ = 544;
			bottom_ = -160;
			cellIndex = {
				x = 1;
				y = -3;
			};
			boundingRect = {
				left = 288;
				top = -192;
				right = 544;
				bottom = -160;
			};
		},
		{
			name = "скамспот3";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = INVERTED;
						condition = "struct ConditionCutSceneWasSkipped" {
							state_ = false;
							internalColor_ = 0;
							timeMax = 15;
						};
					}
				};
			};
			action = "struct ActionSetCamera" {
				internalColor_ = 0;
				cameraSplineName = "скамспот3";
				stepTime = 3.;
				cycles = 1;
				smoothTransition = false;
			};
			outcomingLinks = {
				2;
				{
					triggerName = "на фрейм1";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 52;
					parentOffsetY_ = 16;
					childOffsetX_ = 50;
					childOffsetY_ = -16;
					parentOffset = {
						x = 52;
						y = 16;
					};
					childOffset = {
						x = 50;
						y = -16;
					};
				},
				{
					triggerName = "10";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = -10;
					childOffsetX_ = -118;
					childOffsetY_ = 16;
					parentOffset = {
						x = 128;
						y = -10;
					};
					childOffset = {
						x = -118;
						y = 16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12632256;
			cellNumberX = 1;
			cellNumberY = -2;
			left_ = 288;
			top_ = -128;
			right_ = 544;
			bottom_ = -96;
			cellIndex = {
				x = 1;
				y = -2;
			};
			boundingRect = {
				left = 288;
				top = -128;
				right = 544;
				bottom = -96;
			};
		},
		{
			name = "на фрейм1";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = INVERTED;
						condition = "struct ConditionCutSceneWasSkipped" {
							state_ = false;
							internalColor_ = 0;
							timeMax = 15;
						};
					}
				};
			};
			action = "struct ActionSetCamera" {
				internalColor_ = 0;
				cameraSplineName = "на фрейм-н";
				stepTime = 4.;
				cycles = 1;
				smoothTransition = false;
			};
			outcomingLinks = {
				2;
				{
					triggerName = "вкл. интерфейс";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 57;
					parentOffsetY_ = 16;
					childOffsetX_ = 66;
					childOffsetY_ = -16;
					parentOffset = {
						x = 57;
						y = 16;
					};
					childOffset = {
						x = 66;
						y = -16;
					};
				},
				{
					triggerName = "2";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = -9;
					childOffsetX_ = -128;
					childOffsetY_ = 9;
					parentOffset = {
						x = 128;
						y = -9;
					};
					childOffset = {
						x = -128;
						y = 9;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12632256;
			cellNumberX = 1;
			cellNumberY = -1;
			left_ = 288;
			top_ = -64;
			right_ = 544;
			bottom_ = -32;
			cellIndex = {
				x = 1;
				y = -1;
			};
			boundingRect = {
				left = 288;
				top = -64;
				right = 544;
				bottom = -32;
			};
		},
		{
			name = "выкл. интерфейс0";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					4;
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_SCUM_SPOT;
							counter = 1;
							playerType = AI_PLAYER_TYPE_WORLD;
							constructedAndConstructing = true;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_SCUM_SPOT3;
							counter = 1;
							playerType = AI_PLAYER_TYPE_WORLD;
							constructedAndConstructing = true;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionUnitClassUnderAttack" {
							state_ = true;
							internalColor_ = 0;
							victimUnitClass = UNIT_CLASS_STRUCTURE_ENVIRONMENT | UNIT_CLASS_IGNORE;
							damagePercent = 95;
							agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_AIR | UNIT_CLASS_MISSILE | UNIT_CLASS_IGNORE;
							playerType = AI_PLAYER_TYPE_WORLD;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionUnitClassUnderAttack" {
							state_ = false;
							internalColor_ = 0;
							victimUnitClass = UNIT_CLASS_STRUCTURE_ENVIRONMENT | UNIT_CLASS_IGNORE;
							damagePercent = 99;
							agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_AIR | UNIT_CLASS_MISSILE | UNIT_CLASS_IGNORE;
							playerType = AI_PLAYER_TYPE_WORLD;
						};
					}
				};
			};
			action = "struct ActionSetInterface" {
				internalColor_ = 0;
				enableInterface = false;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 0;
			cellNumberY = 5;
			left_ = 0;
			top_ = 320;
			right_ = 256;
			bottom_ = 352;
			cellIndex = {
				x = 0;
				y = 5;
			};
			boundingRect = {
				left = 0;
				top = 320;
				right = 256;
				bottom = 352;
			};
		},
		{
			name = "выкл. интерфейс1";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					4;
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_SCUM_SPOT3;
							counter = 1;
							playerType = AI_PLAYER_TYPE_WORLD;
							constructedAndConstructing = true;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_SCUM_SPOT2;
							counter = 1;
							playerType = AI_PLAYER_TYPE_WORLD;
							constructedAndConstructing = true;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionUnitClassUnderAttack" {
							state_ = false;
							internalColor_ = 0;
							victimUnitClass = UNIT_CLASS_STRUCTURE_ENVIRONMENT | UNIT_CLASS_IGNORE;
							damagePercent = 95;
							agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_AIR | UNIT_CLASS_MISSILE | UNIT_CLASS_IGNORE;
							playerType = AI_PLAYER_TYPE_WORLD;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionUnitClassUnderAttack" {
							state_ = true;
							internalColor_ = 0;
							victimUnitClass = UNIT_CLASS_STRUCTURE_ENVIRONMENT | UNIT_CLASS_IGNORE;
							damagePercent = 99;
							agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_AIR | UNIT_CLASS_MISSILE | UNIT_CLASS_IGNORE;
							playerType = AI_PLAYER_TYPE_WORLD;
						};
					}
				};
			};
			action = "struct ActionSetInterface" {
				internalColor_ = 0;
				enableInterface = false;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 0;
			cellNumberY = 6;
			left_ = 0;
			top_ = 384;
			right_ = 256;
			bottom_ = 416;
			cellIndex = {
				x = 0;
				y = 6;
			};
			boundingRect = {
				left = 0;
				top = 384;
				right = 256;
				bottom = 416;
			};
		},
		{
			name = "победа0";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionVictory" {
				internalColor_ = 0;
			};
			outcomingLinks = {
				4;
				{
					triggerName = "уничтожить скам-споты";
					color = STRATEGY_BLUE;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -128;
					parentOffsetY_ = 12;
					childOffsetX_ = 118;
					childOffsetY_ = -16;
					parentOffset = {
						x = -128;
						y = 12;
					};
					childOffset = {
						x = 118;
						y = -16;
					};
				},
				{
					triggerName = "уничтожить скам-споты0";
					color = STRATEGY_BLUE;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -98;
					parentOffsetY_ = 16;
					childOffsetX_ = 120;
					childOffsetY_ = -16;
					parentOffset = {
						x = -98;
						y = 16;
					};
					childOffset = {
						x = 120;
						y = -16;
					};
				},
				{
					triggerName = "уничтожить скам-споты1";
					color = STRATEGY_BLUE;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -91;
					parentOffsetY_ = 16;
					childOffsetX_ = 117;
					childOffsetY_ = -16;
					parentOffset = {
						x = -91;
						y = 16;
					};
					childOffset = {
						x = 117;
						y = -16;
					};
				},
				{
					triggerName = "уничтожить скам-споты2";
					color = STRATEGY_BLUE;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -78;
					parentOffsetY_ = 16;
					childOffsetX_ = 115;
					childOffsetY_ = -16;
					parentOffset = {
						x = -78;
						y = 16;
					};
					childOffset = {
						x = 115;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 1;
			cellNumberY = 12;
			left_ = 288;
			top_ = 768;
			right_ = 544;
			bottom_ = 800;
			cellIndex = {
				x = 1;
				y = 12;
			};
			boundingRect = {
				left = 288;
				top = 768;
				right = 544;
				bottom = 800;
			};
		},
		{
			name = "на фрейм";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionKillObject" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_FRAME;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
						};
					}
				};
			};
			action = "struct ActionSetCameraAtObject" {
				internalColor_ = 0;
				object = UNIT_ATTRIBUTE_FRAME;
				playerType = AI_PLAYER_TYPE_ME;
				transitionTime = 0;
				setFollow = false;
				turnTime = 0;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12632256;
			cellNumberX = 0;
			cellNumberY = -1;
			left_ = 0;
			top_ = -64;
			right_ = 256;
			bottom_ = -32;
			cellIndex = {
				x = 0;
				y = -1;
			};
			boundingRect = {
				left = 0;
				top = -64;
				right = 256;
				bottom = -32;
			};
		},
		{
			name = "задание1провалено";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					2;
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_FLY_STATION1;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = true;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionKillObject" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_FRAME;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
						};
					}
				};
			};
			action = "struct ActionTask" {
				internalColor_ = 0;
				type = FAILED;
				taskID = "Mission Tasks.Mission 03.Task 1";
				duration = 5;
				syncroBySound = false;
				showTips = true;
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				1;
				{
					triggerName = "поражение при гибели фрейма";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -9;
					parentOffsetY_ = 16;
					childOffsetX_ = -9;
					childOffsetY_ = -16;
					parentOffset = {
						x = -9;
						y = 16;
					};
					childOffset = {
						x = -9;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 0;
			cellNumberY = 0;
			left_ = 0;
			top_ = 0;
			right_ = 256;
			bottom_ = 32;
			cellIndex = {
				x = 0;
				y = 0;
			};
			boundingRect = {
				left = 0;
				top = 0;
				right = 256;
				bottom = 32;
			};
		},
		{
			name = "задание2провалено";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionKillObject" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_FRAME;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
						};
					}
				};
			};
			action = "struct ActionTask" {
				internalColor_ = 0;
				type = FAILED;
				taskID = "Mission Tasks.Mission 03.Task 2";
				duration = 5;
				syncroBySound = false;
				showTips = true;
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				1;
				{
					triggerName = "поражение при гибели фрейма";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -69;
					parentOffsetY_ = 16;
					childOffsetX_ = -70;
					childOffsetY_ = -16;
					parentOffset = {
						x = -69;
						y = 16;
					};
					childOffset = {
						x = -70;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 0;
			cellNumberY = 1;
			left_ = 0;
			top_ = 64;
			right_ = 256;
			bottom_ = 96;
			cellIndex = {
				x = 0;
				y = 1;
			};
			boundingRect = {
				left = 0;
				top = 64;
				right = 256;
				bottom = 96;
			};
		},
		{
			name = "выкл. интерфейс2";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionKillObject" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_FRAME;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
						};
					}
				};
			};
			action = "struct ActionSetInterface" {
				internalColor_ = 0;
				enableInterface = false;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 0;
			cellNumberY = -3;
			left_ = 0;
			top_ = -192;
			right_ = 256;
			bottom_ = -160;
			cellIndex = {
				x = 0;
				y = -3;
			};
			boundingRect = {
				left = 0;
				top = -192;
				right = 256;
				bottom = -160;
			};
		},
		{
			name = "деактивировать споты";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					3;
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_SCUM_SPOT3;
							counter = 1;
							playerType = AI_PLAYER_TYPE_WORLD;
							constructedAndConstructing = true;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_SCUM_SPOT;
							counter = 1;
							playerType = AI_PLAYER_TYPE_WORLD;
							constructedAndConstructing = true;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_SCUM_SPOT2;
							counter = 1;
							playerType = AI_PLAYER_TYPE_WORLD;
							constructedAndConstructing = true;
						};
					}
				};
			};
			action = "struct ActionDeactivateAllSpots" {
				internalColor_ = 0;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 4;
			cellNumberY = 7;
			left_ = 1152;
			top_ = 448;
			right_ = 1408;
			bottom_ = 480;
			cellIndex = {
				x = 4;
				y = 7;
			};
			boundingRect = {
				left = 1152;
				top = 448;
				right = 1408;
				bottom = 480;
			};
		},
		{
			name = "11";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct Action" {
				internalColor_ = 0;
			};
			outcomingLinks = {
				2;
				{
					triggerName = "на фрейм0";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 38;
					parentOffsetY_ = 16;
					childOffsetX_ = 36;
					childOffsetY_ = -16;
					parentOffset = {
						x = 38;
						y = 16;
					};
					childOffset = {
						x = 36;
						y = -16;
					};
				},
				{
					triggerName = "2";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 110;
					parentOffsetY_ = 16;
					childOffsetX_ = -123;
					childOffsetY_ = -16;
					parentOffset = {
						x = 110;
						y = 16;
					};
					childOffset = {
						x = -123;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 2;
			cellNumberY = -5;
			left_ = 576;
			top_ = -320;
			right_ = 832;
			bottom_ = -288;
			cellIndex = {
				x = 2;
				y = -5;
			};
			boundingRect = {
				left = 576;
				top = -320;
				right = 832;
				bottom = -288;
			};
		},
		{
			name = "на фрейм0";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionSkipCutScene" {
							state_ = false;
							internalColor_ = 0;
						};
					}
				};
			};
			action = "struct ActionSetCamera" {
				internalColor_ = 0;
				cameraSplineName = "на фрейм";
				stepTime = 1.;
				cycles = 1;
				smoothTransition = false;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "вкл. интерфейс";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 4;
					parentOffsetY_ = 16;
					childOffsetX_ = 126;
					childOffsetY_ = -16;
					parentOffset = {
						x = 4;
						y = 16;
					};
					childOffset = {
						x = 126;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12632256;
			cellNumberX = 2;
			cellNumberY = -4;
			left_ = 576;
			top_ = -256;
			right_ = 832;
			bottom_ = -224;
			cellIndex = {
				x = 2;
				y = -4;
			};
			boundingRect = {
				left = 576;
				top = -256;
				right = 832;
				bottom = -224;
			};
		},
		{
			name = "2";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionDelay" {
				internalColor_ = 0;
				delay = 1;
				showTimer = false;
				scaleByDifficulty = false;
				timer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 3;
			cellNumberY = -3;
			left_ = 864;
			top_ = -192;
			right_ = 1120;
			bottom_ = -160;
			cellIndex = {
				x = 3;
				y = -3;
			};
			boundingRect = {
				left = 864;
				top = -192;
				right = 1120;
				bottom = -160;
			};
		},
		{
			name = "10";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = OR;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionSkipCutScene" {
							state_ = false;
							internalColor_ = 0;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionCutSceneWasSkipped" {
							state_ = false;
							internalColor_ = 0;
							timeMax = 15;
						};
					}
				};
			};
			action = "struct Action" {
				internalColor_ = 0;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 2;
			cellNumberY = -3;
			left_ = 576;
			top_ = -192;
			right_ = 832;
			bottom_ = -160;
			cellIndex = {
				x = 2;
				y = -3;
			};
			boundingRect = {
				left = 576;
				top = -192;
				right = 832;
				bottom = -160;
			};
		},
		{
			name = "деактивировать дракона3";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_SCUM_SPOT2;
							counter = 1;
							playerType = AI_PLAYER_TYPE_WORLD;
							constructedAndConstructing = true;
						};
					}
				};
			};
			action = "struct ActionDeactivateObjectByLabel" {
				internalColor_ = 0;
				label = "_дракон3";
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 4;
			cellNumberY = 6;
			left_ = 1152;
			top_ = 384;
			right_ = 1408;
			bottom_ = 416;
			cellIndex = {
				x = 4;
				y = 6;
			};
			boundingRect = {
				left = 1152;
				top = 384;
				right = 1408;
				bottom = 416;
			};
		},
		{
			name = "деактивировать дракона4";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_SCUM_SPOT3;
							counter = 1;
							playerType = AI_PLAYER_TYPE_WORLD;
							constructedAndConstructing = true;
						};
					}
				};
			};
			action = "struct ActionDeactivateObjectByLabel" {
				internalColor_ = 0;
				label = "_дракон 4";
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 4;
			cellNumberY = 8;
			left_ = 1152;
			top_ = 512;
			right_ = 1408;
			bottom_ = 544;
			cellIndex = {
				x = 4;
				y = 8;
			};
			boundingRect = {
				left = 1152;
				top = 512;
				right = 1408;
				bottom = 544;
			};
		},
		{
			name = "деактивировать дракон 1";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_SCUM_SPOT;
							counter = 1;
							playerType = AI_PLAYER_TYPE_WORLD;
							constructedAndConstructing = false;
						};
					}
				};
			};
			action = "struct ActionDeactivateObjectByLabel" {
				internalColor_ = 0;
				label = "дракон 2";
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 2;
			cellNumberY = 10;
			left_ = 576;
			top_ = 640;
			right_ = 832;
			bottom_ = 672;
			cellIndex = {
				x = 2;
				y = 10;
			};
			boundingRect = {
				left = 576;
				top = 640;
				right = 832;
				bottom = 672;
			};
		},
		{
			name = "1110";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionDelay" {
				internalColor_ = 0;
				delay = 5;
				showTimer = false;
				scaleByDifficulty = false;
				timer = {
					time = 0;
				};
			};
			outcomingLinks = {
				1;
				{
					triggerName = "победа0";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -18;
					parentOffsetY_ = 16;
					childOffsetX_ = -17;
					childOffsetY_ = -16;
					parentOffset = {
						x = -18;
						y = 16;
					};
					childOffset = {
						x = -17;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 1;
			cellNumberY = 11;
			left_ = 288;
			top_ = 704;
			right_ = 544;
			bottom_ = 736;
			cellIndex = {
				x = 1;
				y = 11;
			};
			boundingRect = {
				left = 288;
				top = 704;
				right = 544;
				bottom = 736;
			};
		},
		{
			name = "задание1 назначено";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_FLY_STATION1;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					}
				};
			};
			action = "struct ActionTask" {
				internalColor_ = 0;
				type = ASSIGNED;
				taskID = "Mission Tasks.Mission 03.Task 1";
				duration = 5;
				syncroBySound = false;
				showTips = true;
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				1;
				{
					triggerName = "задача1 выполнена";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -128;
					parentOffsetY_ = -12;
					childOffsetX_ = 128;
					childOffsetY_ = -13;
					parentOffset = {
						x = -128;
						y = -12;
					};
					childOffset = {
						x = 128;
						y = -13;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 2;
			cellNumberY = 5;
			left_ = 576;
			top_ = 320;
			right_ = 832;
			bottom_ = 352;
			cellIndex = {
				x = 2;
				y = 5;
			};
			boundingRect = {
				left = 576;
				top = 320;
				right = 832;
				bottom = 352;
			};
		},
		{
			name = "пауза";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_FLY_STATION1;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					}
				};
			};
			action = "struct ActionDelay" {
				internalColor_ = 0;
				delay = 5;
				showTimer = false;
				scaleByDifficulty = false;
				timer = {
					time = 0;
				};
			};
			outcomingLinks = {
				1;
				{
					triggerName = "летные готовы";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -128;
					parentOffsetY_ = -2;
					childOffsetX_ = 128;
					childOffsetY_ = -3;
					parentOffset = {
						x = -128;
						y = -2;
					};
					childOffset = {
						x = 128;
						y = -3;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 2;
			cellNumberY = 6;
			left_ = 576;
			top_ = 384;
			right_ = 832;
			bottom_ = 416;
			cellIndex = {
				x = 2;
				y = 6;
			};
			boundingRect = {
				left = 576;
				top = 384;
				right = 832;
				bottom = 416;
			};
		}
	};
	left_ = -71;
	top_ = -519;
	right_ = 1162;
	bottom_ = 572;
	boundingRect = {
		left = -71;
		top = -519;
		right = 1162;
		bottom = 572;
	};
	viewRect = {
		left = -71;
		top = -519;
		right = 1162;
		bottom = 572;
	};
};
