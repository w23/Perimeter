TriggerChain = {
	name = "строительство";
	triggers = {
		41;
		{
			name = "START";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = 0;
			outcomingLinks = {
				6;
				{
					triggerName = "поражение";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -55;
					parentOffsetY_ = 16;
					childOffsetX_ = 104;
					childOffsetY_ = -16;
					parentOffset = {
						x = -55;
						y = 16;
					};
					childOffset = {
						x = 104;
						y = -16;
					};
				},
				{
					triggerName = "победа";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -109;
					parentOffsetY_ = 16;
					childOffsetX_ = 97;
					childOffsetY_ = -16;
					parentOffset = {
						x = -109;
						y = 16;
					};
					childOffset = {
						x = 97;
						y = -16;
					};
				},
				{
					triggerName = "Camera";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -127;
					parentOffsetY_ = 16;
					childOffsetX_ = 122;
					childOffsetY_ = -16;
					parentOffset = {
						x = -127;
						y = 16;
					};
					childOffset = {
						x = 122;
						y = -16;
					};
				},
				{
					triggerName = "старт2";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = 3;
					childOffsetX_ = -128;
					childOffsetY_ = -8;
					parentOffset = {
						x = 128;
						y = 3;
					};
					childOffset = {
						x = -128;
						y = -8;
					};
				},
				{
					triggerName = "Install Frame";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffsetX_ = -3;
					parentOffsetY_ = 16;
					childOffsetX_ = -10;
					childOffsetY_ = -16;
					parentOffset = {
						x = -3;
						y = 16;
					};
					childOffset = {
						x = -10;
						y = -16;
					};
				},
				{
					triggerName = "вкл. поле";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffsetX_ = 15;
					parentOffsetY_ = 16;
					childOffsetX_ = 15;
					childOffsetY_ = -16;
					parentOffset = {
						x = 15;
						y = 16;
					};
					childOffset = {
						x = 15;
						y = -16;
					};
				}
			};
			state_ = CHECKING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 1;
			cellNumberY = -5;
			left_ = 288;
			top_ = -320;
			right_ = 544;
			bottom_ = -288;
			cellIndex = {
				x = 1;
				y = -5;
			};
			boundingRect = {
				left = 288;
				top = -320;
				right = 544;
				bottom = -288;
			};
		},
		{
			name = "Install Frame";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = INVERTED;
						condition = "struct ConditionFrameState" {
							state_ = true;
							internalColor_ = 0;
							state = AI_FRAME_STATE_INSTALLED;
							playerType = AI_PLAYER_TYPE_ME;
							spiralChargingPercent = 100;
						};
					}
				};
			};
			action = "struct ActionInstallFrame" {
				internalColor_ = 12517305;
				onlyIfAi = true;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 8454016;
			cellNumberX = 1;
			cellNumberY = -3;
			left_ = 288;
			top_ = -192;
			right_ = 544;
			bottom_ = -160;
			cellIndex = {
				x = 1;
				y = -3;
			};
			boundingRect = {
				left = 288;
				top = -192;
				right = 544;
				bottom = -160;
			};
		},
		{
			name = "Place Core";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					2;
					{
						type = INVERTED;
						condition = "struct ConditionPlayerState" {
							state_ = false;
							internalColor_ = 0;
							playerState = PLAYER_STATE_UNABLE_TO_PLACE_CORE;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = false;
							internalColor_ = 0;
							type = OR;
							conditions = {
								3;
								{
									type = INVERTED;
									condition = "struct ConditionObjectExists" {
										state_ = true;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_CORE;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ME;
										constructedAndConstructing = true;
									};
								},
								{
									type = INVERTED;
									condition = "struct ConditionOutOfEnergyCapacity" {
										state_ = true;
										internalColor_ = 0;
										chargingPercent = 50.;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionPlayerState" {
										state_ = false;
										internalColor_ = 0;
										playerState = PLAYER_STATE_UNABLE_TO_PLACE_BUILDING;
									};
								}
							};
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 12189692;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_CORE;
				placementStrategy = PLACEMENT_STRATEGY_CORE;
				energyReserve = 0.;
				buildDurationMax = 300;
				priority = 1;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 65535;
			cellNumberX = 2;
			cellNumberY = 0;
			left_ = 576;
			top_ = 0;
			right_ = 832;
			bottom_ = 32;
			cellIndex = {
				x = 2;
				y = 0;
			};
			boundingRect = {
				left = 576;
				top = 0;
				right = 832;
				bottom = 32;
			};
		},
		{
			name = "Усилитель";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					3;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_CORE;
							counter = 3;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = true;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionOutOfEnergyCapacity" {
							state_ = true;
							internalColor_ = 0;
							chargingPercent = 90.;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelLowerReserve" {
							state_ = false;
							internalColor_ = 0;
							energyReserve = 11000.;
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 12189692;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_COLLECTOR;
				placementStrategy = PLACEMENT_STRATEGY_PLANT;
				energyReserve = 0.;
				buildDurationMax = 1000;
				priority = 1;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "остановить стр. усилителя";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 0;
					parentOffsetY_ = 16;
					childOffsetX_ = 0;
					childOffsetY_ = -16;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 65535;
			cellNumberX = 0;
			cellNumberY = 0;
			left_ = 0;
			top_ = 0;
			right_ = 256;
			bottom_ = 32;
			cellIndex = {
				x = 0;
				y = 0;
			};
			boundingRect = {
				left = 0;
				top = 0;
				right = 256;
				bottom = 32;
			};
		},
		{
			name = "Laser1";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelUpperReserve" {
							state_ = true;
							internalColor_ = 0;
							energyReserve = 4000.;
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 12189692;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_LASER_STATION1;
				placementStrategy = PLACEMENT_STRATEGY_STATION;
				energyReserve = 50.;
				buildDurationMax = 500;
				priority = 3;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "остановить стр. лазерной лаб";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -20;
					parentOffsetY_ = 16;
					childOffsetX_ = -23;
					childOffsetY_ = -16;
					parentOffset = {
						x = -20;
						y = 16;
					};
					childOffset = {
						x = -23;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 65535;
			cellNumberX = 4;
			cellNumberY = 3;
			left_ = 1152;
			top_ = 192;
			right_ = 1408;
			bottom_ = 224;
			cellIndex = {
				x = 4;
				y = 3;
			};
			boundingRect = {
				left = 1152;
				top = 192;
				right = 1408;
				bottom = 224;
			};
		},
		{
			name = "Rocket1";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_LASER_CANNON;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelUpperReserve" {
							state_ = true;
							internalColor_ = 0;
							energyReserve = 4000.;
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 12189692;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_ROCKET_STATION1;
				placementStrategy = PLACEMENT_STRATEGY_STATION;
				energyReserve = 50.;
				buildDurationMax = 500;
				priority = 3;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "остановить стр. ракетной лаб";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 82;
					parentOffsetY_ = 16;
					childOffsetX_ = 81;
					childOffsetY_ = -16;
					parentOffset = {
						x = 82;
						y = 16;
					};
					childOffset = {
						x = 81;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 65535;
			cellNumberX = 3;
			cellNumberY = 3;
			left_ = 864;
			top_ = 192;
			right_ = 1120;
			bottom_ = 224;
			cellIndex = {
				x = 3;
				y = 3;
			};
			boundingRect = {
				left = 864;
				top = 192;
				right = 1120;
				bottom = 224;
			};
		},
		{
			name = "Bomb1";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					3;
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = OR;
							conditions = {
								2;
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = true;
										internalColor_ = 13565951;
										object = UNIT_ATTRIBUTE_TECHNIC_PLANT;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ME;
										constructedAndConstructing = false;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionBuildingNearBuilding" {
										state_ = false;
										internalColor_ = 0;
										distance = 500.;
										playerType1 = AI_PLAYER_TYPE_ME;
										playerType2 = AI_PLAYER_TYPE_ENEMY;
									};
								}
							};
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelUpperReserve" {
							state_ = true;
							internalColor_ = 0;
							energyReserve = 4000.;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_CORRIDOR_OMEGA;
							counter = 1;
							playerType = AI_PLAYER_TYPE_WORLD;
							constructedAndConstructing = true;
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 12189692;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_BOMB_STATION1;
				placementStrategy = PLACEMENT_STRATEGY_STATION;
				energyReserve = 50.;
				buildDurationMax = 500;
				priority = 3;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "остановить стр. бомбовой 1";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 30;
					parentOffsetY_ = 16;
					childOffsetX_ = 20;
					childOffsetY_ = -16;
					parentOffset = {
						x = 30;
						y = 16;
					};
					childOffset = {
						x = 20;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 65535;
			cellNumberX = 5;
			cellNumberY = 3;
			left_ = 1440;
			top_ = 192;
			right_ = 1696;
			bottom_ = 224;
			cellIndex = {
				x = 5;
				y = 3;
			};
			boundingRect = {
				left = 1440;
				top = 192;
				right = 1696;
				bottom = 224;
			};
		},
		{
			name = "Rocket2";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelUpperReserve" {
							state_ = true;
							internalColor_ = 0;
							energyReserve = 4000.;
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 12189692;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_ROCKET_STATION2;
				placementStrategy = PLACEMENT_STRATEGY_STATION;
				energyReserve = 50.;
				buildDurationMax = 500;
				priority = 3;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "остановить стр. ракетной 2 ";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 0;
					parentOffsetY_ = 16;
					childOffsetX_ = 0;
					childOffsetY_ = -16;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 65535;
			cellNumberX = 3;
			cellNumberY = 5;
			left_ = 864;
			top_ = 320;
			right_ = 1120;
			bottom_ = 352;
			cellIndex = {
				x = 3;
				y = 5;
			};
			boundingRect = {
				left = 864;
				top = 320;
				right = 1120;
				bottom = 352;
			};
		},
		{
			name = "Bomb2";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					3;
					{
						type = NORMAL;
						condition = "struct ConditionOutOfEnergyCapacity" {
							state_ = true;
							internalColor_ = 12189692;
							chargingPercent = 51.;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = OR;
							conditions = {
								4;
								{
									type = NORMAL;
									condition = "struct ConditionBuildingNearBuilding" {
										state_ = true;
										internalColor_ = 0;
										distance = 500.;
										playerType1 = AI_PLAYER_TYPE_ME;
										playerType2 = AI_PLAYER_TYPE_ENEMY;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionSwitcher" {
										state_ = true;
										internalColor_ = 0;
										type = AND;
										conditions = {
											3;
											{
												type = NORMAL;
												condition = "struct ConditionObjectExists" {
													state_ = true;
													internalColor_ = 0;
													object = UNIT_ATTRIBUTE_SOLDIER_PLANT;
													counter = 1;
													playerType = AI_PLAYER_TYPE_ME;
													constructedAndConstructing = true;
												};
											},
											{
												type = NORMAL;
												condition = "struct ConditionObjectExists" {
													state_ = true;
													internalColor_ = 0;
													object = UNIT_ATTRIBUTE_TECHNIC_PLANT;
													counter = 1;
													playerType = AI_PLAYER_TYPE_ME;
													constructedAndConstructing = true;
												};
											},
											{
												type = NORMAL;
												condition = "struct ConditionSwitcher" {
													state_ = true;
													internalColor_ = 0;
													type = OR;
													conditions = {
														2;
														{
															type = NORMAL;
															condition = "struct ConditionObjectExists" {
																state_ = true;
																internalColor_ = 0;
																object = UNIT_ATTRIBUTE_ROCKET_STATION2;
																counter = 1;
																playerType = AI_PLAYER_TYPE_ME;
																constructedAndConstructing = false;
															};
														},
														{
															type = NORMAL;
															condition = "struct ConditionObjectExists" {
																state_ = true;
																internalColor_ = 0;
																object = UNIT_ATTRIBUTE_ROCKET_STATION3;
																counter = 1;
																playerType = AI_PLAYER_TYPE_ME;
																constructedAndConstructing = true;
															};
														}
													};
												};
											}
										};
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionSwitcher" {
										state_ = false;
										internalColor_ = 0;
										type = AND;
										conditions = {
											4;
											{
												type = NORMAL;
												condition = "struct ConditionObjectExists" {
													state_ = true;
													internalColor_ = 0;
													object = UNIT_ATTRIBUTE_SOLDIER_PLANT;
													counter = 1;
													playerType = AI_PLAYER_TYPE_ME;
													constructedAndConstructing = true;
												};
											},
											{
												type = NORMAL;
												condition = "struct ConditionObjectExists" {
													state_ = true;
													internalColor_ = 0;
													object = UNIT_ATTRIBUTE_OFFICER_PLANT;
													counter = 1;
													playerType = AI_PLAYER_TYPE_ME;
													constructedAndConstructing = true;
												};
											},
											{
												type = NORMAL;
												condition = "struct ConditionObjectExists" {
													state_ = true;
													internalColor_ = 0;
													object = UNIT_ATTRIBUTE_TECHNIC_PLANT;
													counter = 1;
													playerType = AI_PLAYER_TYPE_ME;
													constructedAndConstructing = true;
												};
											},
											{
												type = NORMAL;
												condition = "struct ConditionObjectExists" {
													state_ = false;
													internalColor_ = 0;
													object = UNIT_ATTRIBUTE_FLY_STATION2;
													counter = 1;
													playerType = AI_PLAYER_TYPE_ME;
													constructedAndConstructing = true;
												};
											}
										};
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionSwitcher" {
										state_ = false;
										internalColor_ = 0;
										type = AND;
										conditions = {
											4;
											{
												type = NORMAL;
												condition = "struct ConditionObjectExists" {
													state_ = false;
													internalColor_ = 0;
													object = UNIT_ATTRIBUTE_EXODUS_STATION3;
													counter = 1;
													playerType = AI_PLAYER_TYPE_ME;
													constructedAndConstructing = true;
												};
											},
											{
												type = NORMAL;
												condition = "struct ConditionObjectExists" {
													state_ = false;
													internalColor_ = 0;
													object = UNIT_ATTRIBUTE_SOLDIER_PLANT;
													counter = 1;
													playerType = AI_PLAYER_TYPE_ME;
													constructedAndConstructing = true;
												};
											},
											{
												type = NORMAL;
												condition = "struct ConditionObjectExists" {
													state_ = false;
													internalColor_ = 0;
													object = UNIT_ATTRIBUTE_OFFICER_PLANT;
													counter = 1;
													playerType = AI_PLAYER_TYPE_ME;
													constructedAndConstructing = true;
												};
											},
											{
												type = NORMAL;
												condition = "struct ConditionObjectExists" {
													state_ = false;
													internalColor_ = 0;
													object = UNIT_ATTRIBUTE_TECHNIC_PLANT;
													counter = 1;
													playerType = AI_PLAYER_TYPE_ME;
													constructedAndConstructing = true;
												};
											}
										};
									};
								}
							};
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_CORRIDOR_OMEGA;
							counter = 1;
							playerType = AI_PLAYER_TYPE_WORLD;
							constructedAndConstructing = true;
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 12189692;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_BOMB_STATION2;
				placementStrategy = PLACEMENT_STRATEGY_STATION;
				energyReserve = 50.;
				buildDurationMax = 500;
				priority = 3;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "остановить стр.бомбовой 2";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 0;
					parentOffsetY_ = 16;
					childOffsetX_ = 0;
					childOffsetY_ = -16;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 65535;
			cellNumberX = 5;
			cellNumberY = 5;
			left_ = 1440;
			top_ = 320;
			right_ = 1696;
			bottom_ = 352;
			cellIndex = {
				x = 5;
				y = 5;
			};
			boundingRect = {
				left = 1440;
				top = 320;
				right = 1696;
				bottom = 352;
			};
		},
		{
			name = "Bomb3";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					3;
					{
						type = NORMAL;
						condition = "struct ConditionOutOfEnergyCapacity" {
							state_ = true;
							internalColor_ = 12189692;
							chargingPercent = 51.;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionBuildingNearBuilding" {
							state_ = true;
							internalColor_ = 0;
							distance = 500.;
							playerType1 = AI_PLAYER_TYPE_ME;
							playerType2 = AI_PLAYER_TYPE_ENEMY;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_CORRIDOR_OMEGA;
							counter = 1;
							playerType = AI_PLAYER_TYPE_WORLD;
							constructedAndConstructing = true;
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 12189692;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_BOMB_STATION3;
				placementStrategy = PLACEMENT_STRATEGY_STATION;
				energyReserve = 50.;
				buildDurationMax = 500;
				priority = 3;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "остановить стр. бомбовой 3";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 0;
					parentOffsetY_ = 16;
					childOffsetX_ = 0;
					childOffsetY_ = -16;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 65535;
			cellNumberX = 5;
			cellNumberY = 7;
			left_ = 1440;
			top_ = 448;
			right_ = 1696;
			bottom_ = 480;
			cellIndex = {
				x = 5;
				y = 7;
			};
			boundingRect = {
				left = 1440;
				top = 448;
				right = 1696;
				bottom = 480;
			};
		},
		{
			name = "лазерная пушка";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionNumberOfBuildingByCoresCapacity" {
							state_ = true;
							internalColor_ = 12189692;
							building = UNIT_ATTRIBUTE_LASER_CANNON;
							factor = 1.;
							compareOp = COMPARE_LESS;
							building2 = UNIT_ATTRIBUTE_CORE;
							playerType = AI_PLAYER_TYPE_ME;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_CORRIDOR_OMEGA;
							counter = 1;
							playerType = AI_PLAYER_TYPE_WORLD;
							constructedAndConstructing = true;
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 12189692;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_LASER_CANNON;
				placementStrategy = PLACEMENT_STRATEGY_GUN;
				energyReserve = 50.;
				buildDurationMax = 500;
				priority = 1;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "остановить стр. лазерной пушки";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 0;
					parentOffsetY_ = 16;
					childOffsetX_ = 0;
					childOffsetY_ = -16;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 65535;
			cellNumberX = 4;
			cellNumberY = 9;
			left_ = 1152;
			top_ = 576;
			right_ = 1408;
			bottom_ = 608;
			cellIndex = {
				x = 4;
				y = 9;
			};
			boundingRect = {
				left = 1152;
				top = 576;
				right = 1408;
				bottom = 608;
			};
		},
		{
			name = "ракетница";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionNumberOfBuildingByCoresCapacity" {
							state_ = false;
							internalColor_ = 8454143;
							building = UNIT_ATTRIBUTE_ROCKET_LAUNCHER;
							factor = 2.;
							compareOp = COMPARE_LESS;
							building2 = UNIT_ATTRIBUTE_CORE;
							playerType = AI_PLAYER_TYPE_ME;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_CORRIDOR_OMEGA;
							counter = 1;
							playerType = AI_PLAYER_TYPE_WORLD;
							constructedAndConstructing = true;
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 12189692;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_ROCKET_LAUNCHER;
				placementStrategy = PLACEMENT_STRATEGY_GUN;
				energyReserve = 50.;
				buildDurationMax = 500;
				priority = 1;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "остановить стр. ракетной пушки";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 0;
					parentOffsetY_ = 16;
					childOffsetX_ = 0;
					childOffsetY_ = -16;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 65535;
			cellNumberX = 3;
			cellNumberY = 9;
			left_ = 864;
			top_ = 576;
			right_ = 1120;
			bottom_ = 608;
			cellIndex = {
				x = 3;
				y = 9;
			};
			boundingRect = {
				left = 864;
				top = 576;
				right = 1120;
				bottom = 608;
			};
		},
		{
			name = "подземная пушка";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionNumberOfBuildingByCoresCapacity" {
							state_ = true;
							internalColor_ = 0;
							building = UNIT_ATTRIBUTE_GUN_SUBCHASER;
							factor = 2.;
							compareOp = COMPARE_LESS;
							building2 = UNIT_ATTRIBUTE_CORE;
							playerType = AI_PLAYER_TYPE_ME;
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 12189692;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_GUN_SUBCHASER;
				placementStrategy = PLACEMENT_STRATEGY_GUN;
				energyReserve = 50.;
				buildDurationMax = 300;
				priority = 2;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "остановить стр. подземной пушки";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 0;
					parentOffsetY_ = 16;
					childOffsetX_ = 0;
					childOffsetY_ = -16;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 65535;
			cellNumberX = 1;
			cellNumberY = 8;
			left_ = 288;
			top_ = 512;
			right_ = 544;
			bottom_ = 544;
			cellIndex = {
				x = 1;
				y = 8;
			};
			boundingRect = {
				left = 288;
				top = 512;
				right = 544;
				bottom = 544;
			};
		},
		{
			name = "гаубица";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					3;
					{
						type = NORMAL;
						condition = "struct ConditionBuildingNearBuilding" {
							state_ = true;
							internalColor_ = 0;
							distance = 500.;
							playerType1 = AI_PLAYER_TYPE_ME;
							playerType2 = AI_PLAYER_TYPE_ENEMY;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_CORRIDOR_OMEGA;
							counter = 1;
							playerType = AI_PLAYER_TYPE_WORLD;
							constructedAndConstructing = true;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelUpperReserve" {
							state_ = true;
							internalColor_ = 0;
							energyReserve = 5000.;
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 12189692;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_GUN_HOWITZER;
				placementStrategy = PLACEMENT_STRATEGY_GUN_TO_ENEMY_BUILDING;
				energyReserve = 50.;
				buildDurationMax = 500;
				priority = 1;
			};
			outcomingLinks = {
				2;
				{
					triggerName = "остановить стр. гаубицы";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 0;
					parentOffsetY_ = 16;
					childOffsetX_ = 0;
					childOffsetY_ = -16;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				},
				{
					triggerName = "выключить Г";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 126;
					parentOffsetY_ = 16;
					childOffsetX_ = -128;
					childOffsetY_ = -14;
					parentOffset = {
						x = 126;
						y = 16;
					};
					childOffset = {
						x = -128;
						y = -14;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 65535;
			cellNumberX = 5;
			cellNumberY = 9;
			left_ = 1440;
			top_ = 576;
			right_ = 1696;
			bottom_ = 608;
			cellIndex = {
				x = 5;
				y = 9;
			};
			boundingRect = {
				left = 1440;
				top = 576;
				right = 1696;
				bottom = 608;
			};
		},
		{
			name = "вкл. поле";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionUnitClassUnderAttack" {
							state_ = false;
							internalColor_ = 0;
							victimUnitClass = UNIT_CLASS_STRUCTURE_CORE | UNIT_CLASS_IGNORE;
							damagePercent = 20;
							agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_AIR_FILTH | UNIT_CLASS_IGNORE;
							playerType = AI_PLAYER_TYPE_ME;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelUpperReserve" {
							state_ = false;
							internalColor_ = 0;
							energyReserve = 3000.;
						};
					}
				};
			};
			action = "struct ActionSwitchFieldOn" {
				internalColor_ = 0;
				onlyIfAi = true;
				duration = 20;
				energyReserve = 0.;
				allCores = false;
				onlyIfCoreDamaged = true;
				timer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 255;
			cellNumberX = 1;
			cellNumberY = 0;
			left_ = 288;
			top_ = 0;
			right_ = 544;
			bottom_ = 32;
			cellIndex = {
				x = 1;
				y = 0;
			};
			boundingRect = {
				left = 288;
				top = 0;
				right = 544;
				bottom = 32;
			};
		},
		{
			name = "победа";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = OR;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionKillObject" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_FRAME;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ENEMY;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionCaptureBuilding" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_FRAME;
							playerType = AI_PLAYER_TYPE_ME;
						};
					}
				};
			};
			action = "struct ActionVictory" {
				internalColor_ = 0;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 8421504;
			cellNumberX = 0;
			cellNumberY = -2;
			left_ = 0;
			top_ = -128;
			right_ = 256;
			bottom_ = -96;
			cellIndex = {
				x = 0;
				y = -2;
			};
			boundingRect = {
				left = 0;
				top = -128;
				right = 256;
				bottom = -96;
			};
		},
		{
			name = "поражение";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = OR;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionKillObject" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_FRAME;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionCaptureBuilding" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_COLLECTOR;
							playerType = AI_PLAYER_TYPE_ENEMY;
						};
					}
				};
			};
			action = "struct ActionDefeat" {
				internalColor_ = 0;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 8421504;
			cellNumberX = 0;
			cellNumberY = -1;
			left_ = 0;
			top_ = -64;
			right_ = 256;
			bottom_ = -32;
			cellIndex = {
				x = 0;
				y = -1;
			};
			boundingRect = {
				left = 0;
				top = -64;
				right = 256;
				bottom = -32;
			};
		},
		{
			name = "захват строений";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionBuildingNearBuilding" {
							state_ = false;
							internalColor_ = 0;
							distance = 500.;
							playerType1 = AI_PLAYER_TYPE_ME;
							playerType2 = AI_PLAYER_TYPE_WORLD;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_CORRIDOR_OMEGA;
							counter = 1;
							playerType = AI_PLAYER_TYPE_WORLD;
							constructedAndConstructing = true;
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_CORE;
				placementStrategy = PLACEMENT_STRATEGY_CORE_CATCHING;
				energyReserve = 50.;
				buildDurationMax = 300;
				priority = 0;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 16744703;
			cellNumberX = 2;
			cellNumberY = 2;
			left_ = 576;
			top_ = 128;
			right_ = 832;
			bottom_ = 160;
			cellIndex = {
				x = 2;
				y = 2;
			};
			boundingRect = {
				left = 576;
				top = 128;
				right = 832;
				bottom = 160;
			};
		},
		{
			name = "остановить стр. лазерной лаб";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = INVERTED;
						condition = "struct ConditionOutOfEnergyCapacity" {
							state_ = false;
							internalColor_ = 9945343;
							chargingPercent = 30.;
						};
					}
				};
			};
			action = "struct ActionHoldBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_LASER_STATION1;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 33023;
			cellNumberX = 4;
			cellNumberY = 4;
			left_ = 1152;
			top_ = 256;
			right_ = 1408;
			bottom_ = 288;
			cellIndex = {
				x = 4;
				y = 4;
			};
			boundingRect = {
				left = 1152;
				top = 256;
				right = 1408;
				bottom = 288;
			};
		},
		{
			name = "остановить стр. ракетной лаб";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = INVERTED;
						condition = "struct ConditionOutOfEnergyCapacity" {
							state_ = true;
							internalColor_ = 9945343;
							chargingPercent = 30.;
						};
					}
				};
			};
			action = "struct ActionHoldBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_ROCKET_STATION1;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 33023;
			cellNumberX = 3;
			cellNumberY = 4;
			left_ = 864;
			top_ = 256;
			right_ = 1120;
			bottom_ = 288;
			cellIndex = {
				x = 3;
				y = 4;
			};
			boundingRect = {
				left = 864;
				top = 256;
				right = 1120;
				bottom = 288;
			};
		},
		{
			name = "остановить стр. бомбовой 1";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = INVERTED;
						condition = "struct ConditionOutOfEnergyCapacity" {
							state_ = true;
							internalColor_ = 9945343;
							chargingPercent = 30.;
						};
					}
				};
			};
			action = "struct ActionHoldBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_BOMB_STATION1;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 33023;
			cellNumberX = 5;
			cellNumberY = 4;
			left_ = 1440;
			top_ = 256;
			right_ = 1696;
			bottom_ = 288;
			cellIndex = {
				x = 5;
				y = 4;
			};
			boundingRect = {
				left = 1440;
				top = 256;
				right = 1696;
				bottom = 288;
			};
		},
		{
			name = "остановить стр. усилителя";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = INVERTED;
						condition = "struct ConditionOutOfEnergyCapacity" {
							state_ = true;
							internalColor_ = 9945343;
							chargingPercent = 30.;
						};
					}
				};
			};
			action = "struct ActionHoldBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_COLLECTOR;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 33023;
			cellNumberX = 0;
			cellNumberY = 1;
			left_ = 0;
			top_ = 64;
			right_ = 256;
			bottom_ = 96;
			cellIndex = {
				x = 0;
				y = 1;
			};
			boundingRect = {
				left = 0;
				top = 64;
				right = 256;
				bottom = 96;
			};
		},
		{
			name = "остановить стр. подземной 1";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = INVERTED;
						condition = "struct ConditionOutOfEnergyCapacity" {
							state_ = false;
							internalColor_ = 9945343;
							chargingPercent = 30.;
						};
					}
				};
			};
			action = "struct ActionHoldBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_SUBTERRA_STATION1;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 33023;
			cellNumberX = 1;
			cellNumberY = 5;
			left_ = 288;
			top_ = 320;
			right_ = 544;
			bottom_ = 352;
			cellIndex = {
				x = 1;
				y = 5;
			};
			boundingRect = {
				left = 288;
				top = 320;
				right = 544;
				bottom = 352;
			};
		},
		{
			name = "остановить стр. лазерной пушки";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelLowerReserve" {
							state_ = false;
							internalColor_ = 9945343;
							energyReserve = 1000.;
						};
					}
				};
			};
			action = "struct ActionHoldBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_LASER_CANNON;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 33023;
			cellNumberX = 4;
			cellNumberY = 10;
			left_ = 1152;
			top_ = 640;
			right_ = 1408;
			bottom_ = 672;
			cellIndex = {
				x = 4;
				y = 10;
			};
			boundingRect = {
				left = 1152;
				top = 640;
				right = 1408;
				bottom = 672;
			};
		},
		{
			name = "остановить стр. ракетной пушки";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelLowerReserve" {
							state_ = false;
							internalColor_ = 9945343;
							energyReserve = 1000.;
						};
					}
				};
			};
			action = "struct ActionHoldBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_ANY;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 33023;
			cellNumberX = 3;
			cellNumberY = 10;
			left_ = 864;
			top_ = 640;
			right_ = 1120;
			bottom_ = 672;
			cellIndex = {
				x = 3;
				y = 10;
			};
			boundingRect = {
				left = 864;
				top = 640;
				right = 1120;
				bottom = 672;
			};
		},
		{
			name = "остановить стр. гаубицы";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelLowerReserve" {
							state_ = false;
							internalColor_ = 0;
							energyReserve = 1000.;
						};
					}
				};
			};
			action = "struct ActionHoldBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_ANY;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 33023;
			cellNumberX = 5;
			cellNumberY = 10;
			left_ = 1440;
			top_ = 640;
			right_ = 1696;
			bottom_ = 672;
			cellIndex = {
				x = 5;
				y = 10;
			};
			boundingRect = {
				left = 1440;
				top = 640;
				right = 1696;
				bottom = 672;
			};
		},
		{
			name = "остановить стр. подземной пушки";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelLowerReserve" {
							state_ = false;
							internalColor_ = 0;
							energyReserve = 500.;
						};
					}
				};
			};
			action = "struct ActionHoldBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_GUN_SUBCHASER;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 33023;
			cellNumberX = 1;
			cellNumberY = 9;
			left_ = 288;
			top_ = 576;
			right_ = 544;
			bottom_ = 608;
			cellIndex = {
				x = 1;
				y = 9;
			};
			boundingRect = {
				left = 288;
				top = 576;
				right = 544;
				bottom = 608;
			};
		},
		{
			name = "остановить стр. ракетной 2 ";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = INVERTED;
						condition = "struct ConditionOutOfEnergyCapacity" {
							state_ = false;
							internalColor_ = 9945343;
							chargingPercent = 30.;
						};
					}
				};
			};
			action = "struct ActionHoldBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_ROCKET_STATION2;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 33023;
			cellNumberX = 3;
			cellNumberY = 6;
			left_ = 864;
			top_ = 384;
			right_ = 1120;
			bottom_ = 416;
			cellIndex = {
				x = 3;
				y = 6;
			};
			boundingRect = {
				left = 864;
				top = 384;
				right = 1120;
				bottom = 416;
			};
		},
		{
			name = "остановить стр.бомбовой 2";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = INVERTED;
						condition = "struct ConditionOutOfEnergyCapacity" {
							state_ = true;
							internalColor_ = 9945343;
							chargingPercent = 30.;
						};
					}
				};
			};
			action = "struct ActionHoldBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_BOMB_STATION2;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 33023;
			cellNumberX = 5;
			cellNumberY = 6;
			left_ = 1440;
			top_ = 384;
			right_ = 1696;
			bottom_ = 416;
			cellIndex = {
				x = 5;
				y = 6;
			};
			boundingRect = {
				left = 1440;
				top = 384;
				right = 1696;
				bottom = 416;
			};
		},
		{
			name = "остановить стр. бомбовой 3";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = INVERTED;
						condition = "struct ConditionOutOfEnergyCapacity" {
							state_ = true;
							internalColor_ = 9945343;
							chargingPercent = 30.;
						};
					}
				};
			};
			action = "struct ActionHoldBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_BOMB_STATION3;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 33023;
			cellNumberX = 5;
			cellNumberY = 8;
			left_ = 1440;
			top_ = 512;
			right_ = 1696;
			bottom_ = 544;
			cellIndex = {
				x = 5;
				y = 8;
			};
			boundingRect = {
				left = 1440;
				top = 512;
				right = 1696;
				bottom = 544;
			};
		},
		{
			name = "продавать любое строение";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionSellBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_ANY;
				sellFactor = AI_SELL_IF_DAMAGE_GREATER;
				damagePercent = 98.;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 255;
			cellNumberX = 3;
			cellNumberY = -2;
			left_ = 864;
			top_ = -128;
			right_ = 1120;
			bottom_ = -96;
			cellIndex = {
				x = 3;
				y = -2;
			};
			boundingRect = {
				left = 864;
				top = -128;
				right = 1120;
				bottom = -96;
			};
		},
		{
			name = "Camera";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionSetCamera" {
				internalColor_ = 0;
				cameraSplineName = "Camera1";
				stepTime = -1.32704e-003;
				cycles = -1163005939;
				smoothTransition = true;
			};
			outcomingLinks = {
				0;
			};
			state_ = CHECKING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 0;
			cellNumberY = -4;
			left_ = 0;
			top_ = -256;
			right_ = 256;
			bottom_ = -224;
			cellIndex = {
				x = 0;
				y = -4;
			};
			boundingRect = {
				left = 0;
				top = -256;
				right = 256;
				bottom = -224;
			};
		},
		{
			name = "выключить Г";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelLowerReserve" {
							state_ = false;
							internalColor_ = 0;
							energyReserve = 1000.;
						};
					}
				};
			};
			action = "struct ActionSwitchGuns" {
				internalColor_ = 0;
				onlyIfAi = true;
				mode = OFF;
				gunID = UNIT_ATTRIBUTE_GUN_HOWITZER;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "включить Г";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -27;
					parentOffsetY_ = 16;
					childOffsetX_ = -29;
					childOffsetY_ = -16;
					parentOffset = {
						x = -27;
						y = 16;
					};
					childOffset = {
						x = -29;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 6;
			cellNumberY = 10;
			left_ = 1728;
			top_ = 640;
			right_ = 1984;
			bottom_ = 672;
			cellIndex = {
				x = 6;
				y = 10;
			};
			boundingRect = {
				left = 1728;
				top = 640;
				right = 1984;
				bottom = 672;
			};
		},
		{
			name = "включить Г";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelUpperReserve" {
							state_ = false;
							internalColor_ = 0;
							energyReserve = 2000.;
						};
					}
				};
			};
			action = "struct ActionSwitchGuns" {
				internalColor_ = 0;
				onlyIfAi = true;
				mode = OFF;
				gunID = UNIT_ATTRIBUTE_GUN_HOWITZER;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "выключить Г";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 19;
					parentOffsetY_ = -16;
					childOffsetX_ = 18;
					childOffsetY_ = 16;
					parentOffset = {
						x = 19;
						y = -16;
					};
					childOffset = {
						x = 18;
						y = 16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 6;
			cellNumberY = 11;
			left_ = 1728;
			top_ = 704;
			right_ = 1984;
			bottom_ = 736;
			cellIndex = {
				x = 6;
				y = 11;
			};
			boundingRect = {
				left = 1728;
				top = 704;
				right = 1984;
				bottom = 736;
			};
		},
		{
			name = "поле=захват";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionBuildingNearBuilding" {
							state_ = true;
							internalColor_ = 0;
							distance = 90.;
							playerType1 = AI_PLAYER_TYPE_ME;
							playerType2 = AI_PLAYER_TYPE_ENEMY;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelUpperReserve" {
							state_ = true;
							internalColor_ = 0;
							energyReserve = 500.;
						};
					}
				};
			};
			action = "struct ActionSwitchFieldOn" {
				internalColor_ = 0;
				onlyIfAi = true;
				duration = 5;
				energyReserve = 0.;
				allCores = true;
				onlyIfCoreDamaged = true;
				timer = {
					time = 0;
				};
			};
			outcomingLinks = {
				1;
				{
					triggerName = "пауза перед полем";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 73;
					parentOffsetY_ = -16;
					childOffsetX_ = 78;
					childOffsetY_ = 16;
					parentOffset = {
						x = 73;
						y = -16;
					};
					childOffset = {
						x = 78;
						y = 16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 255;
			cellNumberX = 0;
			cellNumberY = 7;
			left_ = 0;
			top_ = 448;
			right_ = 256;
			bottom_ = 480;
			cellIndex = {
				x = 0;
				y = 7;
			};
			boundingRect = {
				left = 0;
				top = 448;
				right = 256;
				bottom = 480;
			};
		},
		{
			name = "пауза перед полем";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionBuildingNearBuilding" {
							state_ = true;
							internalColor_ = 0;
							distance = 90.;
							playerType1 = AI_PLAYER_TYPE_ME;
							playerType2 = AI_PLAYER_TYPE_ENEMY;
						};
					}
				};
			};
			action = "struct ActionDelay" {
				internalColor_ = 0;
				delay = 15;
				showTimer = false;
				scaleByDifficulty = true;
				timer = {
					time = 300;
				};
			};
			outcomingLinks = {
				1;
				{
					triggerName = "поле=захват";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 43;
					parentOffsetY_ = 16;
					childOffsetX_ = 41;
					childOffsetY_ = -16;
					parentOffset = {
						x = 43;
						y = 16;
					};
					childOffset = {
						x = 41;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 0;
			cellNumberY = 6;
			left_ = 0;
			top_ = 384;
			right_ = 256;
			bottom_ = 416;
			cellIndex = {
				x = 0;
				y = 6;
			};
			boundingRect = {
				left = 0;
				top = 384;
				right = 256;
				bottom = 416;
			};
		},
		{
			name = "!!!ядро к врагу ";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionBuildingNearBuilding" {
							state_ = true;
							internalColor_ = 0;
							distance = 500.;
							playerType1 = AI_PLAYER_TYPE_ME;
							playerType2 = AI_PLAYER_TYPE_ENEMY;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_CORRIDOR_OMEGA;
							counter = 1;
							playerType = AI_PLAYER_TYPE_WORLD;
							constructedAndConstructing = true;
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_CORE;
				placementStrategy = PLACEMENT_STRATEGY_CORE_OFFENSIVE;
				energyReserve = 50.;
				buildDurationMax = 300;
				priority = 0;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 3;
			cellNumberY = -4;
			left_ = 864;
			top_ = -256;
			right_ = 1120;
			bottom_ = -224;
			cellIndex = {
				x = 3;
				y = -4;
			};
			boundingRect = {
				left = 864;
				top = -256;
				right = 1120;
				bottom = -224;
			};
		},
		{
			name = "старт2";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct Action" {
				internalColor_ = 0;
			};
			outcomingLinks = {
				18;
				{
					triggerName = "продавать любое строение";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffsetX_ = -128;
					parentOffsetY_ = 16;
					childOffsetX_ = 128;
					childOffsetY_ = -15;
					parentOffset = {
						x = -128;
						y = 16;
					};
					childOffset = {
						x = 128;
						y = -15;
					};
				},
				{
					triggerName = "Rocket1";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffsetX_ = -101;
					parentOffsetY_ = 16;
					childOffsetX_ = 110;
					childOffsetY_ = -16;
					parentOffset = {
						x = -101;
						y = 16;
					};
					childOffset = {
						x = 110;
						y = -16;
					};
				},
				{
					triggerName = "Laser1";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffsetX_ = -39;
					parentOffsetY_ = 16;
					childOffsetX_ = -42;
					childOffsetY_ = -16;
					parentOffset = {
						x = -39;
						y = 16;
					};
					childOffset = {
						x = -42;
						y = -16;
					};
				},
				{
					triggerName = "Bomb1";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffsetX_ = 101;
					parentOffsetY_ = 16;
					childOffsetX_ = -121;
					childOffsetY_ = -16;
					parentOffset = {
						x = 101;
						y = 16;
					};
					childOffset = {
						x = -121;
						y = -16;
					};
				},
				{
					triggerName = "Rocket2";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffsetX_ = -88;
					parentOffsetY_ = 16;
					childOffsetX_ = 104;
					childOffsetY_ = -16;
					parentOffset = {
						x = -88;
						y = 16;
					};
					childOffset = {
						x = 104;
						y = -16;
					};
				},
				{
					triggerName = "ракетница";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffsetX_ = -73;
					parentOffsetY_ = 16;
					childOffsetX_ = 93;
					childOffsetY_ = -16;
					parentOffset = {
						x = -73;
						y = 16;
					};
					childOffset = {
						x = 93;
						y = -16;
					};
				},
				{
					triggerName = "лазерная пушка";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffsetX_ = -71;
					parentOffsetY_ = 16;
					childOffsetX_ = -73;
					childOffsetY_ = -16;
					parentOffset = {
						x = -71;
						y = 16;
					};
					childOffset = {
						x = -73;
						y = -16;
					};
				},
				{
					triggerName = "Bomb2";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffsetX_ = 87;
					parentOffsetY_ = 16;
					childOffsetX_ = -117;
					childOffsetY_ = -16;
					parentOffset = {
						x = 87;
						y = 16;
					};
					childOffset = {
						x = -117;
						y = -16;
					};
				},
				{
					triggerName = "Bomb3";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffsetX_ = 79;
					parentOffsetY_ = 16;
					childOffsetX_ = -115;
					childOffsetY_ = -16;
					parentOffset = {
						x = 79;
						y = 16;
					};
					childOffset = {
						x = -115;
						y = -16;
					};
				},
				{
					triggerName = "гаубица";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffsetX_ = 66;
					parentOffsetY_ = 16;
					childOffsetX_ = -117;
					childOffsetY_ = -16;
					parentOffset = {
						x = 66;
						y = 16;
					};
					childOffset = {
						x = -117;
						y = -16;
					};
				},
				{
					triggerName = "Place Core";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffsetX_ = -128;
					parentOffsetY_ = 2;
					childOffsetX_ = 124;
					childOffsetY_ = -16;
					parentOffset = {
						x = -128;
						y = 2;
					};
					childOffset = {
						x = 124;
						y = -16;
					};
				},
				{
					triggerName = "!!!ядро к врагу ";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffsetX_ = -128;
					parentOffsetY_ = 0;
					childOffsetX_ = 128;
					childOffsetY_ = 11;
					parentOffset = {
						x = -128;
						y = 0;
					};
					childOffset = {
						x = 128;
						y = 11;
					};
				},
				{
					triggerName = "захват строений";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffsetX_ = -128;
					parentOffsetY_ = 11;
					childOffsetX_ = 114;
					childOffsetY_ = -16;
					parentOffset = {
						x = -128;
						y = 11;
					};
					childOffset = {
						x = 114;
						y = -16;
					};
				},
				{
					triggerName = "подземная пушка";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffsetX_ = -128;
					parentOffsetY_ = 16;
					childOffsetX_ = 118;
					childOffsetY_ = -16;
					parentOffset = {
						x = -128;
						y = 16;
					};
					childOffset = {
						x = 118;
						y = -16;
					};
				},
				{
					triggerName = "Усилитель";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffsetX_ = -128;
					parentOffsetY_ = -3;
					childOffsetX_ = 128;
					childOffsetY_ = -11;
					parentOffset = {
						x = -128;
						y = -3;
					};
					childOffset = {
						x = 128;
						y = -11;
					};
				},
				{
					triggerName = "пауза перед полем";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -128;
					parentOffsetY_ = 6;
					childOffsetX_ = 118;
					childOffsetY_ = -16;
					parentOffset = {
						x = -128;
						y = 6;
					};
					childOffset = {
						x = 118;
						y = -16;
					};
				},
				{
					triggerName = "Усилитель0";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffsetX_ = -128;
					parentOffsetY_ = 1;
					childOffsetX_ = 128;
					childOffsetY_ = -9;
					parentOffset = {
						x = -128;
						y = 1;
					};
					childOffset = {
						x = 128;
						y = -9;
					};
				},
				{
					triggerName = "подземная лаборатория0";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffsetX_ = -128;
					parentOffsetY_ = 2;
					childOffsetX_ = 128;
					childOffsetY_ = -12;
					parentOffset = {
						x = -128;
						y = 2;
					};
					childOffset = {
						x = 128;
						y = -12;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 4;
			cellNumberY = -3;
			left_ = 1152;
			top_ = -192;
			right_ = 1408;
			bottom_ = -160;
			cellIndex = {
				x = 4;
				y = -3;
			};
			boundingRect = {
				left = 1152;
				top = -192;
				right = 1408;
				bottom = -160;
			};
		},
		{
			name = "Усилитель0";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					3;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_CORE;
							counter = 3;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = true;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionOutOfEnergyCapacity" {
							state_ = true;
							internalColor_ = 0;
							chargingPercent = 90.;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelUpperReserve" {
							state_ = false;
							internalColor_ = 0;
							energyReserve = 30001.;
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 12189692;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_COLLECTOR;
				placementStrategy = PLACEMENT_STRATEGY_PLANT;
				energyReserve = 0.;
				buildDurationMax = 1000;
				priority = 3;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "остановить стр. усилителя";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 104;
					parentOffsetY_ = 16;
					childOffsetX_ = -128;
					childOffsetY_ = -6;
					parentOffset = {
						x = 104;
						y = 16;
					};
					childOffset = {
						x = -128;
						y = -6;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 65535;
			cellNumberX = -1;
			cellNumberY = 0;
			left_ = -288;
			top_ = 0;
			right_ = -32;
			bottom_ = 32;
			cellIndex = {
				x = -1;
				y = 0;
			};
			boundingRect = {
				left = -288;
				top = 0;
				right = -32;
				bottom = 32;
			};
		},
		{
			name = "подземная лаборатория0";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = false;
							internalColor_ = 0;
							type = OR;
							conditions = {
								2;
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = false;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_SUBTERRA_STATION1;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ENEMY;
										constructedAndConstructing = true;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = false;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_SUBTERRA_STATION2;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ENEMY;
										constructedAndConstructing = true;
									};
								}
							};
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 12189692;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_SUBTERRA_STATION1;
				placementStrategy = PLACEMENT_STRATEGY_STATION;
				energyReserve = 50.;
				buildDurationMax = 500;
				priority = 1;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "остановить стр. подземной 1";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 126;
					parentOffsetY_ = 16;
					childOffsetX_ = -126;
					childOffsetY_ = -16;
					parentOffset = {
						x = 126;
						y = 16;
					};
					childOffset = {
						x = -126;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 65535;
			cellNumberX = 0;
			cellNumberY = 4;
			left_ = 0;
			top_ = 256;
			right_ = 256;
			bottom_ = 288;
			cellIndex = {
				x = 0;
				y = 4;
			};
			boundingRect = {
				left = 0;
				top = 256;
				right = 256;
				bottom = 288;
			};
		},
		{
			name = "UserCamera";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = 0;
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = -1;
			cellNumberY = 1;
			left_ = -288;
			top_ = 64;
			right_ = -32;
			bottom_ = 96;
			cellIndex = {
				x = -1;
				y = 1;
			};
			boundingRect = {
				left = -288;
				top = 64;
				right = -32;
				bottom = 96;
			};
		}
	};
	left_ = 1134;
	top_ = 3;
	right_ = 2314;
	bottom_ = 1048;
	boundingRect = {
		left = 1134;
		top = 3;
		right = 2314;
		bottom = 1048;
	};
	viewRect = {
		left = 1134;
		top = 3;
		right = 2314;
		bottom = 1048;
	};
};
