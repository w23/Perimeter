TriggerChain = {
	name = "";
	triggers = {
		39;
		{
			name = "START";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = AND;
							conditions = {
								0;
							};
						};
					}
				};
			};
			action = 0;
			outcomingLinks = {
				4;
				{
					triggerName = "ЗАДАНИЕ";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 53;
					parentOffsetY_ = 16;
					childOffsetX_ = 52;
					childOffsetY_ = -16;
					parentOffset = {
						x = 53;
						y = 16;
					};
					childOffset = {
						x = 52;
						y = -16;
					};
				},
				{
					triggerName = "старт";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = 7;
					childOffsetX_ = -128;
					childOffsetY_ = 5;
					parentOffset = {
						x = 128;
						y = 7;
					};
					childOffset = {
						x = -128;
						y = 5;
					};
				},
				{
					triggerName = "11";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 83;
					parentOffsetY_ = 16;
					childOffsetX_ = 72;
					childOffsetY_ = -16;
					parentOffset = {
						x = 83;
						y = 16;
					};
					childOffset = {
						x = 72;
						y = -16;
					};
				},
				{
					triggerName = "задание3выполнено";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -117;
					parentOffsetY_ = 16;
					childOffsetX_ = -118;
					childOffsetY_ = -16;
					parentOffset = {
						x = -117;
						y = 16;
					};
					childOffset = {
						x = -118;
						y = -16;
					};
				}
			};
			state_ = CHECKING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 0;
			cellNumberY = -4;
			left_ = 0;
			top_ = -256;
			right_ = 256;
			bottom_ = -224;
			cellIndex = {
				x = 0;
				y = -4;
			};
			boundingRect = {
				left = 0;
				top = -256;
				right = 256;
				bottom = -224;
			};
		},
		{
			name = "победа";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionTeleportation" {
							state_ = true;
							internalColor_ = 0;
							teleportationType = TELEPORTATION_TYPE_ALPHA;
							playerType = AI_PLAYER_TYPE_ME;
						};
					}
				};
			};
			action = "struct ActionVictory" {
				internalColor_ = 0;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "конец";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = 1;
					childOffsetX_ = -128;
					childOffsetY_ = 1;
					parentOffset = {
						x = 128;
						y = 1;
					};
					childOffset = {
						x = -128;
						y = 1;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 16744576;
			cellNumberX = 2;
			cellNumberY = -4;
			left_ = 576;
			top_ = -256;
			right_ = 832;
			bottom_ = -224;
			cellIndex = {
				x = 2;
				y = -4;
			};
			boundingRect = {
				left = 576;
				top = -256;
				right = 832;
				bottom = -224;
			};
		},
		{
			name = "время";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = OR;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionObjectNearObjectByLabel" {
							state_ = false;
							internalColor_ = 0;
							label = "телепорт";
							object = UNIT_ATTRIBUTE_STATIC_BOMB;
							objectConstructed = true;
							playerType = AI_PLAYER_TYPE_ME;
							distance = 150.;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectNearObjectByLabel" {
							state_ = false;
							internalColor_ = 0;
							label = "телепорт";
							object = UNIT_ATTRIBUTE_STATIC_BOMB;
							objectConstructed = true;
							playerType = AI_PLAYER_TYPE_WORLD;
							distance = 150.;
						};
					}
				};
			};
			action = "struct ActionDelay" {
				internalColor_ = 0;
				delay = 300;
				showTimer = true;
				scaleByDifficulty = false;
				timer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 1;
			cellNumberY = -1;
			left_ = 288;
			top_ = -64;
			right_ = 544;
			bottom_ = -32;
			cellIndex = {
				x = 1;
				y = -1;
			};
			boundingRect = {
				left = 288;
				top = -64;
				right = 544;
				bottom = -32;
			};
		},
		{
			name = "тряска камеры";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = OR;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionObjectNearObjectByLabel" {
							state_ = false;
							internalColor_ = 0;
							label = "телепорт";
							object = UNIT_ATTRIBUTE_STATIC_BOMB;
							objectConstructed = true;
							playerType = AI_PLAYER_TYPE_ME;
							distance = 150.;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectNearObjectByLabel" {
							state_ = false;
							internalColor_ = 0;
							label = "телепорт";
							object = UNIT_ATTRIBUTE_STATIC_BOMB;
							objectConstructed = true;
							playerType = AI_PLAYER_TYPE_WORLD;
							distance = 150.;
						};
					}
				};
			};
			action = "struct ActionOscillateCamera" {
				internalColor_ = 0;
				duration = 10;
				factor = 1.;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "пауза";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 0;
					parentOffsetY_ = 16;
					childOffsetX_ = 0;
					childOffsetY_ = -16;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = -1;
			cellNumberY = 4;
			left_ = -288;
			top_ = 256;
			right_ = -32;
			bottom_ = 288;
			cellIndex = {
				x = -1;
				y = 4;
			};
			boundingRect = {
				left = -288;
				top = 256;
				right = -32;
				bottom = 288;
			};
		},
		{
			name = "взрыв омеги";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionKillObject" {
				internalColor_ = 0;
				object = UNIT_ATTRIBUTE_CORRIDOR_OMEGA;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "уничтожить ядра";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = -1;
					childOffsetX_ = -128;
					childOffsetY_ = -1;
					parentOffset = {
						x = 128;
						y = -1;
					};
					childOffset = {
						x = -128;
						y = -1;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 2;
			cellNumberY = -1;
			left_ = 576;
			top_ = -64;
			right_ = 832;
			bottom_ = -32;
			cellIndex = {
				x = 2;
				y = -1;
			};
			boundingRect = {
				left = 576;
				top = -64;
				right = 832;
				bottom = -32;
			};
		},
		{
			name = "пауза";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = AND;
							conditions = {
								0;
							};
						};
					}
				};
			};
			action = "struct ActionDelay" {
				internalColor_ = 0;
				delay = 50;
				showTimer = false;
				scaleByDifficulty = false;
				timer = {
					time = 0;
				};
			};
			outcomingLinks = {
				1;
				{
					triggerName = "тряска камеры";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 0;
					parentOffsetY_ = -16;
					childOffsetX_ = 0;
					childOffsetY_ = 16;
					parentOffset = {
						x = 0;
						y = -16;
					};
					childOffset = {
						x = 0;
						y = 16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = -1;
			cellNumberY = 5;
			left_ = -288;
			top_ = 320;
			right_ = -32;
			bottom_ = 352;
			cellIndex = {
				x = -1;
				y = 5;
			};
			boundingRect = {
				left = -288;
				top = 320;
				right = -32;
				bottom = 352;
			};
		},
		{
			name = "ПОРАЖЕНИЕ";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = OR;
				conditions = {
					0;
				};
			};
			action = "struct ActionDefeat" {
				internalColor_ = 0;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 1;
			cellNumberY = 5;
			left_ = 288;
			top_ = 320;
			right_ = 544;
			bottom_ = 352;
			cellIndex = {
				x = 1;
				y = 5;
			};
			boundingRect = {
				left = 288;
				top = 320;
				right = 544;
				bottom = 352;
			};
		},
		{
			name = "ЗАДАНИЕ";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = AND;
							conditions = {
								0;
							};
						};
					}
				};
			};
			action = "struct ActionTask" {
				internalColor_ = 0;
				type = ASSIGNED;
				taskID = "Mission Tasks.Mission 21.Task 1";
				duration = 10;
				syncroBySound = false;
				showTips = true;
				durationTimer = {
					time = 10000;
				};
			};
			outcomingLinks = {
				4;
				{
					triggerName = "время";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 72;
					parentOffsetY_ = 16;
					childOffsetX_ = -72;
					childOffsetY_ = -16;
					parentOffset = {
						x = 72;
						y = 16;
					};
					childOffset = {
						x = -72;
						y = -16;
					};
				},
				{
					triggerName = "тряска камеры";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -15;
					parentOffsetY_ = 16;
					childOffsetX_ = 15;
					childOffsetY_ = -16;
					parentOffset = {
						x = -15;
						y = 16;
					};
					childOffset = {
						x = 15;
						y = -16;
					};
				},
				{
					triggerName = "задание2";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 30;
					parentOffsetY_ = 16;
					childOffsetX_ = 31;
					childOffsetY_ = -16;
					parentOffset = {
						x = 30;
						y = 16;
					};
					childOffset = {
						x = 31;
						y = -16;
					};
				},
				{
					triggerName = "задание1 выполнено";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -128;
					parentOffsetY_ = 0;
					childOffsetX_ = 128;
					childOffsetY_ = -1;
					parentOffset = {
						x = -128;
						y = 0;
					};
					childOffset = {
						x = 128;
						y = -1;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 14277119;
			cellNumberX = 0;
			cellNumberY = -2;
			left_ = 0;
			top_ = -128;
			right_ = 256;
			bottom_ = -96;
			cellIndex = {
				x = 0;
				y = -2;
			};
			boundingRect = {
				left = 0;
				top = -128;
				right = 256;
				bottom = -96;
			};
		},
		{
			name = "уничтожить ядра";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = AND;
							conditions = {
								0;
							};
						};
					}
				};
			};
			action = "struct ActionKillObject" {
				internalColor_ = 0;
				object = UNIT_ATTRIBUTE_CORE;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "уничтожить фрейм";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 17;
					parentOffsetY_ = 16;
					childOffsetX_ = 15;
					childOffsetY_ = -16;
					parentOffset = {
						x = 17;
						y = 16;
					};
					childOffset = {
						x = 15;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 3;
			cellNumberY = -1;
			left_ = 864;
			top_ = -64;
			right_ = 1120;
			bottom_ = -32;
			cellIndex = {
				x = 3;
				y = -1;
			};
			boundingRect = {
				left = 864;
				top = -64;
				right = 1120;
				bottom = -32;
			};
		},
		{
			name = "старт";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = AND;
							conditions = {
								0;
							};
						};
					}
				};
			};
			action = 0;
			outcomingLinks = {
				9;
				{
					triggerName = "телепортация";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 62;
					parentOffsetY_ = -16;
					childOffsetX_ = 63;
					childOffsetY_ = 16;
					parentOffset = {
						x = 62;
						y = -16;
					};
					childOffset = {
						x = 63;
						y = 16;
					};
				},
				{
					triggerName = "на фрейм";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 38;
					parentOffsetY_ = -16;
					childOffsetX_ = 32;
					childOffsetY_ = 16;
					parentOffset = {
						x = 38;
						y = -16;
					};
					childOffset = {
						x = 32;
						y = 16;
					};
				},
				{
					triggerName = "взрыв";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = 0;
					childOffsetX_ = -128;
					childOffsetY_ = 3;
					parentOffset = {
						x = 128;
						y = 0;
					};
					childOffset = {
						x = -128;
						y = 3;
					};
				},
				{
					triggerName = "пауза0";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 108;
					parentOffsetY_ = 16;
					childOffsetX_ = -128;
					childOffsetY_ = -15;
					parentOffset = {
						x = 108;
						y = 16;
					};
					childOffset = {
						x = -128;
						y = -15;
					};
				},
				{
					triggerName = "выкл. интерфейс";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 51;
					parentOffsetY_ = -16;
					childOffsetX_ = 54;
					childOffsetY_ = 16;
					parentOffset = {
						x = 51;
						y = -16;
					};
					childOffset = {
						x = 54;
						y = 16;
					};
				},
				{
					triggerName = "задание3провалено";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = 2;
					childOffsetX_ = -128;
					childOffsetY_ = -15;
					parentOffset = {
						x = 128;
						y = 2;
					};
					childOffset = {
						x = -128;
						y = -15;
					};
				},
				{
					triggerName = "на взрыв фрейма";
					color = STRATEGY_BLUE;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 44;
					parentOffsetY_ = 16;
					childOffsetX_ = 42;
					childOffsetY_ = -16;
					parentOffset = {
						x = 44;
						y = 16;
					};
					childOffset = {
						x = 42;
						y = -16;
					};
				},
				{
					triggerName = "выкл. интерфейс0";
					color = STRATEGY_BLUE;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 24;
					parentOffsetY_ = 16;
					childOffsetX_ = 18;
					childOffsetY_ = -16;
					parentOffset = {
						x = 24;
						y = 16;
					};
					childOffset = {
						x = 18;
						y = -16;
					};
				},
				{
					triggerName = "задание1провалено";
					color = STRATEGY_BLUE;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 10;
					parentOffsetY_ = 16;
					childOffsetX_ = -2;
					childOffsetY_ = -16;
					parentOffset = {
						x = 10;
						y = 16;
					};
					childOffset = {
						x = -2;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 1;
			cellNumberY = -4;
			left_ = 288;
			top_ = -256;
			right_ = 544;
			bottom_ = -224;
			cellIndex = {
				x = 1;
				y = -4;
			};
			boundingRect = {
				left = 288;
				top = -256;
				right = 544;
				bottom = -224;
			};
		},
		{
			name = "уничтожить бомбу";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionKillObject" {
				internalColor_ = 0;
				object = UNIT_ATTRIBUTE_STATIC_BOMB;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "взрыв омеги";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -8;
					parentOffsetY_ = 16;
					childOffsetX_ = -7;
					childOffsetY_ = -16;
					parentOffset = {
						x = -8;
						y = 16;
					};
					childOffset = {
						x = -7;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 2;
			cellNumberY = -2;
			left_ = 576;
			top_ = -128;
			right_ = 832;
			bottom_ = -96;
			cellIndex = {
				x = 2;
				y = -2;
			};
			boundingRect = {
				left = 576;
				top = -128;
				right = 832;
				bottom = -96;
			};
		},
		{
			name = "взрыв";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = false;
							internalColor_ = 0;
							type = AND;
							conditions = {
								4;
								{
									type = INVERTED;
									condition = "struct ConditionTeleportation" {
										state_ = false;
										internalColor_ = 0;
										teleportationType = TELEPORTATION_TYPE_ALPHA;
										playerType = AI_PLAYER_TYPE_ME;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionTimeMatched" {
										state_ = false;
										internalColor_ = 0;
										time = 1;
									};
								},
								{
									type = INVERTED;
									condition = "struct ConditionFrameState" {
										state_ = false;
										internalColor_ = 0;
										state = AI_FRAME_STATE_TELEPORTATION_STARTED;
										playerType = AI_PLAYER_TYPE_ME;
										spiralChargingPercent = 100;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionSwitcher" {
										state_ = true;
										internalColor_ = 0;
										type = OR;
										conditions = {
											2;
											{
												type = NORMAL;
												condition = "struct ConditionObjectNearObjectByLabel" {
													state_ = false;
													internalColor_ = 0;
													label = "телепорт";
													object = UNIT_ATTRIBUTE_STATIC_BOMB;
													objectConstructed = true;
													playerType = AI_PLAYER_TYPE_ME;
													distance = 150.;
												};
											},
											{
												type = NORMAL;
												condition = "struct ConditionObjectNearObjectByLabel" {
													state_ = true;
													internalColor_ = 0;
													label = "телепорт";
													object = UNIT_ATTRIBUTE_STATIC_BOMB;
													objectConstructed = true;
													playerType = AI_PLAYER_TYPE_WORLD;
													distance = 150.;
												};
											}
										};
									};
								}
							};
						};
					}
				};
			};
			action = "struct ActionSetCamera" {
				internalColor_ = 0;
				cameraSplineName = "взрыв2";
				stepTime = 4.;
				cycles = 0;
				smoothTransition = false;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12632256;
			cellNumberX = 2;
			cellNumberY = -3;
			left_ = 576;
			top_ = -192;
			right_ = 832;
			bottom_ = -160;
			cellIndex = {
				x = 2;
				y = -3;
			};
			boundingRect = {
				left = 576;
				top = -192;
				right = 832;
				bottom = -160;
			};
		},
		{
			name = "на фрейм";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionFrameState" {
							state_ = false;
							internalColor_ = 0;
							state = AI_FRAME_STATE_TELEPORTATION_STARTED;
							playerType = AI_PLAYER_TYPE_ME;
							spiralChargingPercent = 100;
						};
					}
				};
			};
			action = "struct ActionSetCameraAtObject" {
				internalColor_ = 0;
				object = UNIT_ATTRIBUTE_FRAME;
				playerType = AI_PLAYER_TYPE_ME;
				transitionTime = 0;
				setFollow = true;
				turnTime = 0;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "победа";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = 9;
					childOffsetX_ = -122;
					childOffsetY_ = -16;
					parentOffset = {
						x = 128;
						y = 9;
					};
					childOffset = {
						x = -122;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12632256;
			cellNumberX = 1;
			cellNumberY = -5;
			left_ = 288;
			top_ = -320;
			right_ = 544;
			bottom_ = -288;
			cellIndex = {
				x = 1;
				y = -5;
			};
			boundingRect = {
				left = 288;
				top = -320;
				right = 544;
				bottom = -288;
			};
		},
		{
			name = "телепортация";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					4;
					{
						type = NORMAL;
						condition = "struct ConditionFrameState" {
							state_ = false;
							internalColor_ = 0;
							state = AI_FRAME_STATE_TELEPORTATION_ENABLED;
							playerType = AI_PLAYER_TYPE_ME;
							spiralChargingPercent = 100;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionTimeMatched" {
							state_ = true;
							internalColor_ = 0;
							time = 300;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionTimeMatched" {
							state_ = false;
							internalColor_ = 0;
							time = 1;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = OR;
							conditions = {
								2;
								{
									type = NORMAL;
									condition = "struct ConditionObjectNearObjectByLabel" {
										state_ = true;
										internalColor_ = 0;
										label = "телепорт";
										object = UNIT_ATTRIBUTE_STATIC_BOMB;
										objectConstructed = true;
										playerType = AI_PLAYER_TYPE_ME;
										distance = 150.;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionObjectNearObjectByLabel" {
										state_ = false;
										internalColor_ = 0;
										label = "телепорт";
										object = UNIT_ATTRIBUTE_STATIC_BOMB;
										objectConstructed = true;
										playerType = AI_PLAYER_TYPE_WORLD;
										distance = 150.;
									};
								}
							};
						};
					}
				};
			};
			action = "struct ActionTeleportationOut" {
				internalColor_ = 0;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 2;
			cellNumberY = -6;
			left_ = 576;
			top_ = -384;
			right_ = 832;
			bottom_ = -352;
			cellIndex = {
				x = 2;
				y = -6;
			};
			boundingRect = {
				left = 576;
				top = -384;
				right = 832;
				bottom = -352;
			};
		},
		{
			name = "Camera";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = AND;
							conditions = {
								0;
							};
						};
					}
				};
			};
			action = "struct ActionSetCamera" {
				internalColor_ = 0;
				cameraSplineName = "Camera0";
				stepTime = 7.8125e-003;
				cycles = 989855744;
				smoothTransition = false;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "на омегу";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 28;
					parentOffsetY_ = 16;
					childOffsetX_ = 29;
					childOffsetY_ = -16;
					parentOffset = {
						x = 28;
						y = 16;
					};
					childOffset = {
						x = 29;
						y = -16;
					};
				}
			};
			state_ = CHECKING;
			executionCounter_ = 0;
			internalColor_ = 12632256;
			cellNumberX = 0;
			cellNumberY = 0;
			left_ = 0;
			top_ = 0;
			right_ = 256;
			bottom_ = 32;
			cellIndex = {
				x = 0;
				y = 0;
			};
			boundingRect = {
				left = 0;
				top = 0;
				right = 256;
				bottom = 32;
			};
		},
		{
			name = "поражение2";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionDefeat" {
				internalColor_ = 0;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 3;
			cellNumberY = -2;
			left_ = 864;
			top_ = -128;
			right_ = 1120;
			bottom_ = -96;
			cellIndex = {
				x = 3;
				y = -2;
			};
			boundingRect = {
				left = 864;
				top = -128;
				right = 1120;
				bottom = -96;
			};
		},
		{
			name = "на фрейм вначале";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = INVERTED;
						condition = "struct ConditionCutSceneWasSkipped" {
							state_ = false;
							internalColor_ = 0;
							timeMax = 15;
						};
					}
				};
			};
			action = "struct ActionSetCameraAtObject" {
				internalColor_ = 0;
				object = UNIT_ATTRIBUTE_FRAME;
				playerType = AI_PLAYER_TYPE_ME;
				transitionTime = 3;
				setFollow = false;
				turnTime = 0;
			};
			outcomingLinks = {
				2;
				{
					triggerName = "вкл. интерфейс";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 30;
					parentOffsetY_ = 16;
					childOffsetX_ = 26;
					childOffsetY_ = -16;
					parentOffset = {
						x = 30;
						y = 16;
					};
					childOffset = {
						x = 26;
						y = -16;
					};
				},
				{
					triggerName = "2";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 101;
					parentOffsetY_ = 16;
					childOffsetX_ = -96;
					childOffsetY_ = -16;
					parentOffset = {
						x = 101;
						y = 16;
					};
					childOffset = {
						x = -96;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12632256;
			cellNumberX = 0;
			cellNumberY = 2;
			left_ = 0;
			top_ = 128;
			right_ = 256;
			bottom_ = 160;
			cellIndex = {
				x = 0;
				y = 2;
			};
			boundingRect = {
				left = 0;
				top = 128;
				right = 256;
				bottom = 160;
			};
		},
		{
			name = "на омегу";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionSetCameraAtObject" {
				internalColor_ = 0;
				object = UNIT_ATTRIBUTE_CORRIDOR_OMEGA;
				playerType = AI_PLAYER_TYPE_ME;
				transitionTime = 0;
				setFollow = false;
				turnTime = 3;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "на фрейм вначале";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 28;
					parentOffsetY_ = 16;
					childOffsetX_ = 28;
					childOffsetY_ = -16;
					parentOffset = {
						x = 28;
						y = 16;
					};
					childOffset = {
						x = 28;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12632256;
			cellNumberX = 0;
			cellNumberY = 1;
			left_ = 0;
			top_ = 64;
			right_ = 256;
			bottom_ = 96;
			cellIndex = {
				x = 0;
				y = 1;
			};
			boundingRect = {
				left = 0;
				top = 64;
				right = 256;
				bottom = 96;
			};
		},
		{
			name = "задание2";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionFrameState" {
							state_ = true;
							internalColor_ = 0;
							state = AI_FRAME_STATE_SPIRAL_CHARGING;
							playerType = AI_PLAYER_TYPE_ME;
							spiralChargingPercent = 100;
						};
					}
				};
			};
			action = "struct ActionTask" {
				internalColor_ = 0;
				type = ASSIGNED;
				taskID = "Mission Tasks.Mission 21.Task 2";
				duration = 5;
				syncroBySound = false;
				showTips = true;
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				1;
				{
					triggerName = "терминал";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -128;
					parentOffsetY_ = 14;
					childOffsetX_ = 119;
					childOffsetY_ = -16;
					parentOffset = {
						x = -128;
						y = 14;
					};
					childOffset = {
						x = 119;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12698111;
			cellNumberX = 0;
			cellNumberY = -1;
			left_ = 0;
			top_ = -64;
			right_ = 256;
			bottom_ = -32;
			cellIndex = {
				x = 0;
				y = -1;
			};
			boundingRect = {
				left = 0;
				top = -64;
				right = 256;
				bottom = -32;
			};
		},
		{
			name = "задание2 удалено";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionTask" {
				internalColor_ = 0;
				type = TO_DELETE;
				taskID = "Mission Tasks.Mission 21.Task 2";
				duration = 0;
				syncroBySound = false;
				showTips = false;
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				1;
				{
					triggerName = "задание3";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = -11;
					childOffsetX_ = -128;
					childOffsetY_ = -7;
					parentOffset = {
						x = 128;
						y = -11;
					};
					childOffset = {
						x = -128;
						y = -7;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12698111;
			cellNumberX = -2;
			cellNumberY = 1;
			left_ = -576;
			top_ = 64;
			right_ = -320;
			bottom_ = 96;
			cellIndex = {
				x = -2;
				y = 1;
			};
			boundingRect = {
				left = -576;
				top = 64;
				right = -320;
				bottom = 96;
			};
		},
		{
			name = "задание1 выполнено";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = OR;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionObjectNearObjectByLabel" {
							state_ = false;
							internalColor_ = 0;
							label = "телепорт";
							object = UNIT_ATTRIBUTE_STATIC_BOMB;
							objectConstructed = true;
							playerType = AI_PLAYER_TYPE_ME;
							distance = 150.;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectNearObjectByLabel" {
							state_ = false;
							internalColor_ = 0;
							label = "телепорт";
							object = UNIT_ATTRIBUTE_STATIC_BOMB;
							objectConstructed = true;
							playerType = AI_PLAYER_TYPE_WORLD;
							distance = 150.;
						};
					}
				};
			};
			action = "struct ActionTask" {
				internalColor_ = 0;
				type = COMPLETED;
				taskID = "Mission Tasks.Mission 21.Task 1";
				duration = 5;
				syncroBySound = false;
				showTips = true;
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				2;
				{
					triggerName = "терминал";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 23;
					parentOffsetY_ = 16;
					childOffsetX_ = 16;
					childOffsetY_ = -16;
					parentOffset = {
						x = 23;
						y = 16;
					};
					childOffset = {
						x = 16;
						y = -16;
					};
				},
				{
					triggerName = "деактивировать споты";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 36;
					parentOffsetY_ = -16;
					childOffsetX_ = 36;
					childOffsetY_ = 16;
					parentOffset = {
						x = 36;
						y = -16;
					};
					childOffset = {
						x = 36;
						y = 16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12698111;
			cellNumberX = -1;
			cellNumberY = -2;
			left_ = -288;
			top_ = -128;
			right_ = -32;
			bottom_ = -96;
			cellIndex = {
				x = -1;
				y = -2;
			};
			boundingRect = {
				left = -288;
				top = -128;
				right = -32;
				bottom = -96;
			};
		},
		{
			name = "терминал";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionMessage" {
				internalColor_ = 0;
				messageID = "Mission Tips.Mission 21.Tip 1";
				message = "";
				delay = 0;
				duration = 20;
				syncroBySound = true;
				delayTimer = {
					time = 0;
				};
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				1;
				{
					triggerName = "задание2 удалено";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -128;
					parentOffsetY_ = 11;
					childOffsetX_ = 118;
					childOffsetY_ = -16;
					parentOffset = {
						x = -128;
						y = 11;
					};
					childOffset = {
						x = 118;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12698111;
			cellNumberX = -1;
			cellNumberY = 0;
			left_ = -288;
			top_ = 0;
			right_ = -32;
			bottom_ = 32;
			cellIndex = {
				x = -1;
				y = 0;
			};
			boundingRect = {
				left = -288;
				top = 0;
				right = -32;
				bottom = 32;
			};
		},
		{
			name = "задание3";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionTask" {
				internalColor_ = 0;
				type = ASSIGNED;
				taskID = "Mission Tasks.Mission 21.Task 3";
				duration = 10;
				syncroBySound = false;
				showTips = true;
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				1;
				{
					triggerName = "телепортация";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = -5;
					childOffsetX_ = 94;
					childOffsetY_ = 16;
					parentOffset = {
						x = 128;
						y = -5;
					};
					childOffset = {
						x = 94;
						y = 16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12698111;
			cellNumberX = -1;
			cellNumberY = 1;
			left_ = -288;
			top_ = 64;
			right_ = -32;
			bottom_ = 96;
			cellIndex = {
				x = -1;
				y = 1;
			};
			boundingRect = {
				left = -288;
				top = 64;
				right = -32;
				bottom = 96;
			};
		},
		{
			name = "задание3выполнено";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = OR;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionFrameState" {
							state_ = false;
							internalColor_ = 0;
							state = AI_FRAME_STATE_TELEPORTATION_STARTED;
							playerType = AI_PLAYER_TYPE_ME;
							spiralChargingPercent = 100;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionTeleportation" {
							state_ = false;
							internalColor_ = 0;
							teleportationType = TELEPORTATION_TYPE_ALPHA;
							playerType = AI_PLAYER_TYPE_ME;
						};
					}
				};
			};
			action = "struct ActionTask" {
				internalColor_ = 0;
				type = COMPLETED;
				taskID = "Mission Tasks.Mission 21.Task 3";
				duration = 5;
				syncroBySound = false;
				showTips = true;
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				1;
				{
					triggerName = "победа";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = -5;
					childOffsetX_ = -105;
					childOffsetY_ = 16;
					parentOffset = {
						x = 128;
						y = -5;
					};
					childOffset = {
						x = -105;
						y = 16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12698111;
			cellNumberX = 0;
			cellNumberY = -3;
			left_ = 0;
			top_ = -192;
			right_ = 256;
			bottom_ = -160;
			cellIndex = {
				x = 0;
				y = -3;
			};
			boundingRect = {
				left = 0;
				top = -192;
				right = 256;
				bottom = -160;
			};
		},
		{
			name = "деактивировать споты";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionDeactivateAllSpots" {
				internalColor_ = 0;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = -1;
			cellNumberY = -3;
			left_ = -288;
			top_ = -192;
			right_ = -32;
			bottom_ = -160;
			cellIndex = {
				x = -1;
				y = -3;
			};
			boundingRect = {
				left = -288;
				top = -192;
				right = -32;
				bottom = -160;
			};
		},
		{
			name = "пауза0";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionTimeMatched" {
							state_ = false;
							internalColor_ = 0;
							time = 1;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = OR;
							conditions = {
								2;
								{
									type = NORMAL;
									condition = "struct ConditionObjectNearObjectByLabel" {
										state_ = false;
										internalColor_ = 0;
										label = "телепорт";
										object = UNIT_ATTRIBUTE_STATIC_BOMB;
										objectConstructed = true;
										playerType = AI_PLAYER_TYPE_ME;
										distance = 150.;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionObjectNearObjectByLabel" {
										state_ = true;
										internalColor_ = 0;
										label = "телепорт";
										object = UNIT_ATTRIBUTE_STATIC_BOMB;
										objectConstructed = true;
										playerType = AI_PLAYER_TYPE_WORLD;
										distance = 150.;
									};
								}
							};
						};
					}
				};
			};
			action = "struct Action" {
				internalColor_ = 0;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "уничтожить бомбу";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -60;
					parentOffsetY_ = -16;
					childOffsetX_ = -51;
					childOffsetY_ = 16;
					parentOffset = {
						x = -60;
						y = -16;
					};
					childOffset = {
						x = -51;
						y = 16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 2;
			cellNumberY = 0;
			left_ = 576;
			top_ = 0;
			right_ = 832;
			bottom_ = 32;
			cellIndex = {
				x = 2;
				y = 0;
			};
			boundingRect = {
				left = 576;
				top = 0;
				right = 832;
				bottom = 32;
			};
		},
		{
			name = "UserCamera";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionSetCamera" {
				internalColor_ = 0;
				cameraSplineName = "";
				stepTime = -3.68178e+028;
				cycles = -387178263;
				smoothTransition = true;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = -1;
			cellNumberY = 6;
			left_ = -288;
			top_ = 384;
			right_ = -32;
			bottom_ = 416;
			cellIndex = {
				x = -1;
				y = 6;
			};
			boundingRect = {
				left = -288;
				top = 384;
				right = -32;
				bottom = 416;
			};
		},
		{
			name = "уничтожить фрейм";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionKillObject" {
				internalColor_ = 0;
				object = UNIT_ATTRIBUTE_FRAME;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 3;
			cellNumberY = 0;
			left_ = 864;
			top_ = 0;
			right_ = 1120;
			bottom_ = 32;
			cellIndex = {
				x = 3;
				y = 0;
			};
			boundingRect = {
				left = 864;
				top = 0;
				right = 1120;
				bottom = 32;
			};
		},
		{
			name = "вкл. интерфейс";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionSetInterface" {
				internalColor_ = 0;
				enableInterface = true;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 0;
			cellNumberY = 3;
			left_ = 0;
			top_ = 192;
			right_ = 256;
			bottom_ = 224;
			cellIndex = {
				x = 0;
				y = 3;
			};
			boundingRect = {
				left = 0;
				top = 192;
				right = 256;
				bottom = 224;
			};
		},
		{
			name = "выкл. интерфейс";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionFrameState" {
							state_ = false;
							internalColor_ = 0;
							state = AI_FRAME_STATE_TELEPORTATION_STARTED;
							playerType = AI_PLAYER_TYPE_ME;
							spiralChargingPercent = 100;
						};
					}
				};
			};
			action = "struct ActionSetInterface" {
				internalColor_ = 0;
				enableInterface = false;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 1;
			cellNumberY = -6;
			left_ = 288;
			top_ = -384;
			right_ = 544;
			bottom_ = -352;
			cellIndex = {
				x = 1;
				y = -6;
			};
			boundingRect = {
				left = 288;
				top = -384;
				right = 544;
				bottom = -352;
			};
		},
		{
			name = "задание3провалено";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = false;
							internalColor_ = 0;
							type = AND;
							conditions = {
								4;
								{
									type = INVERTED;
									condition = "struct ConditionTeleportation" {
										state_ = false;
										internalColor_ = 0;
										teleportationType = TELEPORTATION_TYPE_ALPHA;
										playerType = AI_PLAYER_TYPE_ME;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionTimeMatched" {
										state_ = false;
										internalColor_ = 0;
										time = 1;
									};
								},
								{
									type = INVERTED;
									condition = "struct ConditionFrameState" {
										state_ = false;
										internalColor_ = 0;
										state = AI_FRAME_STATE_TELEPORTATION_STARTED;
										playerType = AI_PLAYER_TYPE_ME;
										spiralChargingPercent = 100;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionSwitcher" {
										state_ = true;
										internalColor_ = 0;
										type = OR;
										conditions = {
											2;
											{
												type = NORMAL;
												condition = "struct ConditionObjectNearObjectByLabel" {
													state_ = false;
													internalColor_ = 0;
													label = "телепорт";
													object = UNIT_ATTRIBUTE_STATIC_BOMB;
													objectConstructed = true;
													playerType = AI_PLAYER_TYPE_ME;
													distance = 150.;
												};
											},
											{
												type = NORMAL;
												condition = "struct ConditionObjectNearObjectByLabel" {
													state_ = true;
													internalColor_ = 0;
													label = "телепорт";
													object = UNIT_ATTRIBUTE_STATIC_BOMB;
													objectConstructed = true;
													playerType = AI_PLAYER_TYPE_WORLD;
													distance = 150.;
												};
											}
										};
									};
								}
							};
						};
					}
				};
			};
			action = "struct ActionTask" {
				internalColor_ = 0;
				type = FAILED;
				taskID = "Mission Tasks.Mission 21.Task 3";
				duration = 5;
				syncroBySound = false;
				showTips = true;
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				1;
				{
					triggerName = "поражение2";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 3;
					parentOffsetY_ = 16;
					childOffsetX_ = 5;
					childOffsetY_ = -16;
					parentOffset = {
						x = 3;
						y = 16;
					};
					childOffset = {
						x = 5;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12698111;
			cellNumberX = 3;
			cellNumberY = -3;
			left_ = 864;
			top_ = -192;
			right_ = 1120;
			bottom_ = -160;
			cellIndex = {
				x = 3;
				y = -3;
			};
			boundingRect = {
				left = 864;
				top = -192;
				right = 1120;
				bottom = -160;
			};
		},
		{
			name = "на взрыв фрейма";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionKillObject" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_FRAME;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
						};
					}
				};
			};
			action = "struct ActionSetCameraAtObject" {
				internalColor_ = 0;
				object = UNIT_ATTRIBUTE_FRAME;
				playerType = AI_PLAYER_TYPE_ME;
				transitionTime = 0;
				setFollow = false;
				turnTime = 5;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12632256;
			cellNumberX = 1;
			cellNumberY = 1;
			left_ = 288;
			top_ = 64;
			right_ = 544;
			bottom_ = 96;
			cellIndex = {
				x = 1;
				y = 1;
			};
			boundingRect = {
				left = 288;
				top = 64;
				right = 544;
				bottom = 96;
			};
		},
		{
			name = "выкл. интерфейс0";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionKillObject" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_FRAME;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
						};
					}
				};
			};
			action = "struct ActionSetInterface" {
				internalColor_ = 0;
				enableInterface = false;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 1;
			cellNumberY = 2;
			left_ = 288;
			top_ = 128;
			right_ = 544;
			bottom_ = 160;
			cellIndex = {
				x = 1;
				y = 2;
			};
			boundingRect = {
				left = 288;
				top = 128;
				right = 544;
				bottom = 160;
			};
		},
		{
			name = "задание1провалено";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionKillObject" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_FRAME;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
						};
					}
				};
			};
			action = "struct ActionTask" {
				internalColor_ = 0;
				type = FAILED;
				taskID = "Mission Tasks.Mission 21.Task 1";
				duration = 5;
				syncroBySound = false;
				showTips = true;
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				1;
				{
					triggerName = "задание3провалено0";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 7;
					parentOffsetY_ = 16;
					childOffsetX_ = 3;
					childOffsetY_ = -16;
					parentOffset = {
						x = 7;
						y = 16;
					};
					childOffset = {
						x = 3;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12698111;
			cellNumberX = 1;
			cellNumberY = 3;
			left_ = 288;
			top_ = 192;
			right_ = 544;
			bottom_ = 224;
			cellIndex = {
				x = 1;
				y = 3;
			};
			boundingRect = {
				left = 288;
				top = 192;
				right = 544;
				bottom = 224;
			};
		},
		{
			name = "задание3провалено0";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionTask" {
				internalColor_ = 0;
				type = FAILED;
				taskID = "Mission Tasks.Mission 21.Task 3";
				duration = 5;
				syncroBySound = false;
				showTips = true;
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				1;
				{
					triggerName = "ПОРАЖЕНИЕ";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 2;
					parentOffsetY_ = 16;
					childOffsetX_ = 0;
					childOffsetY_ = -16;
					parentOffset = {
						x = 2;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12698111;
			cellNumberX = 1;
			cellNumberY = 4;
			left_ = 288;
			top_ = 256;
			right_ = 544;
			bottom_ = 288;
			cellIndex = {
				x = 1;
				y = 4;
			};
			boundingRect = {
				left = 288;
				top = 256;
				right = 544;
				bottom = 288;
			};
		},
		{
			name = "конец";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionSetCamera" {
				internalColor_ = 0;
				cameraSplineName = "взрыв2";
				stepTime = 4.;
				cycles = 1;
				smoothTransition = false;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12632256;
			cellNumberX = 3;
			cellNumberY = -4;
			left_ = 864;
			top_ = -256;
			right_ = 1120;
			bottom_ = -224;
			cellIndex = {
				x = 3;
				y = -4;
			};
			boundingRect = {
				left = 864;
				top = -256;
				right = 1120;
				bottom = -224;
			};
		},
		{
			name = "11";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct Action" {
				internalColor_ = 0;
			};
			outcomingLinks = {
				2;
				{
					triggerName = "на фрейм0";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 38;
					parentOffsetY_ = 16;
					childOffsetX_ = 36;
					childOffsetY_ = -16;
					parentOffset = {
						x = 38;
						y = 16;
					};
					childOffset = {
						x = 36;
						y = -16;
					};
				},
				{
					triggerName = "2";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 110;
					parentOffsetY_ = 16;
					childOffsetX_ = -123;
					childOffsetY_ = -16;
					parentOffset = {
						x = 110;
						y = 16;
					};
					childOffset = {
						x = -123;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 0;
			cellNumberY = 5;
			left_ = 0;
			top_ = 320;
			right_ = 256;
			bottom_ = 352;
			cellIndex = {
				x = 0;
				y = 5;
			};
			boundingRect = {
				left = 0;
				top = 320;
				right = 256;
				bottom = 352;
			};
		},
		{
			name = "на фрейм0";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionSkipCutScene" {
							state_ = false;
							internalColor_ = 0;
						};
					}
				};
			};
			action = "struct ActionSetCamera" {
				internalColor_ = 0;
				cameraSplineName = "на фрейм";
				stepTime = 1.;
				cycles = 1;
				smoothTransition = false;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "вкл. интерфейс";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 49;
					parentOffsetY_ = -16;
					childOffsetX_ = 55;
					childOffsetY_ = 16;
					parentOffset = {
						x = 49;
						y = -16;
					};
					childOffset = {
						x = 55;
						y = 16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12632256;
			cellNumberX = 0;
			cellNumberY = 7;
			left_ = 0;
			top_ = 448;
			right_ = 256;
			bottom_ = 480;
			cellIndex = {
				x = 0;
				y = 7;
			};
			boundingRect = {
				left = 0;
				top = 448;
				right = 256;
				bottom = 480;
			};
		},
		{
			name = "2";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionDelay" {
				internalColor_ = 0;
				delay = 1;
				showTimer = false;
				scaleByDifficulty = false;
				timer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 1;
			cellNumberY = 7;
			left_ = 288;
			top_ = 448;
			right_ = 544;
			bottom_ = 480;
			cellIndex = {
				x = 1;
				y = 7;
			};
			boundingRect = {
				left = 288;
				top = 448;
				right = 544;
				bottom = 480;
			};
		}
	};
	left_ = -43;
	top_ = -466;
	right_ = 994;
	bottom_ = 451;
	boundingRect = {
		left = -43;
		top = -466;
		right = 994;
		bottom = 451;
	};
	viewRect = {
		left = -43;
		top = -466;
		right = 994;
		bottom = 451;
	};
};
