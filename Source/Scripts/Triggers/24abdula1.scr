TriggerChain = {
	name = "24abdula1.scr";
	triggers = {
		20;
		{
			name = "START";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = AND;
							conditions = {
								0;
							};
						};
					}
				};
			};
			action = 0;
			outcomingLinks = {
				2;
				{
					triggerName = "Camera";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = 2;
					childOffsetX_ = -128;
					childOffsetY_ = 2;
					parentOffset = {
						x = 128;
						y = 2;
					};
					childOffset = {
						x = -128;
						y = 2;
					};
				},
				{
					triggerName = "Start";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = -9;
					childOffsetX_ = -128;
					childOffsetY_ = -6;
					parentOffset = {
						x = 128;
						y = -9;
					};
					childOffset = {
						x = -128;
						y = -6;
					};
				}
			};
			state_ = CHECKING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellIndex = {
				x = 0;
				y = 0;
			};
			boundingRect = {
				left = 0;
				top = 0;
				right = 256;
				bottom = 32;
			};
		},
		{
			name = "Camera";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = AND;
							conditions = {
								0;
							};
						};
					}
				};
			};
			action = "struct ActionSetCamera" {
				internalColor_ = 0;
				cameraSplineName = "Camera1";
				stepTime = 4.;
				cycles = 1;
				smoothTransition = false;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellIndex = {
				x = 1;
				y = 0;
			};
			boundingRect = {
				left = 288;
				top = 0;
				right = 544;
				bottom = 32;
			};
		},
		{
			name = "Start";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = AND;
							conditions = {
								0;
							};
						};
					}
				};
			};
			action = "struct Action" {
				internalColor_ = 0;
			};
			outcomingLinks = {
				6;
				{
					triggerName = "Place Core";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffsetX_ = -128;
					parentOffsetY_ = 14;
					childOffsetX_ = 128;
					childOffsetY_ = -15;
					parentOffset = {
						x = -128;
						y = 14;
					};
					childOffset = {
						x = 128;
						y = -15;
					};
				},
				{
					triggerName = "вкл. поле";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffsetX_ = -72;
					parentOffsetY_ = 16;
					childOffsetX_ = 72;
					childOffsetY_ = -16;
					parentOffset = {
						x = -72;
						y = 16;
					};
					childOffset = {
						x = 72;
						y = -16;
					};
				},
				{
					triggerName = "строить гаубицу";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffsetX_ = -46;
					parentOffsetY_ = 16;
					childOffsetX_ = 128;
					childOffsetY_ = -2;
					parentOffset = {
						x = -46;
						y = 16;
					};
					childOffset = {
						x = 128;
						y = -2;
					};
				},
				{
					triggerName = "сложный";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 113;
					parentOffsetY_ = 16;
					childOffsetX_ = -118;
					childOffsetY_ = -16;
					parentOffset = {
						x = 113;
						y = 16;
					};
					childOffset = {
						x = -118;
						y = -16;
					};
				},
				{
					triggerName = "нормал";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = -13;
					childOffsetX_ = -128;
					childOffsetY_ = -10;
					parentOffset = {
						x = 128;
						y = -13;
					};
					childOffset = {
						x = -128;
						y = -10;
					};
				},
				{
					triggerName = "легкий";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = -11;
					childOffsetX_ = -128;
					childOffsetY_ = -9;
					parentOffset = {
						x = 128;
						y = -11;
					};
					childOffset = {
						x = -128;
						y = -9;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellIndex = {
				x = 2;
				y = 0;
			};
			boundingRect = {
				left = 576;
				top = 0;
				right = 832;
				bottom = 32;
			};
		},
		{
			name = "Place Core";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = OR;
				conditions = {
					3;
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_CORE;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = true;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionOutOfEnergyCapacity" {
							state_ = true;
							internalColor_ = 0;
							chargingPercent = 50.;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionPlayerState" {
							state_ = false;
							internalColor_ = 0;
							playerState = PLAYER_STATE_UNABLE_TO_PLACE_BUILDING;
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_CORE;
				placementStrategy = PLACEMENT_STRATEGY_CORE;
				energyReserve = 0.;
				buildDurationMax = 300;
				priority = 1;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellIndex = {
				x = 0;
				y = 1;
			};
			boundingRect = {
				left = 0;
				top = 64;
				right = 256;
				bottom = 96;
			};
		},
		{
			name = "вкл. поле";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionUnitClassUnderAttack" {
							state_ = false;
							internalColor_ = 0;
							victimUnitClass = UNIT_CLASS_STRUCTURE | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_FRAME | UNIT_CLASS_IGNORE;
							damagePercent = 1;
							agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_AIR_FILTH | UNIT_CLASS_IGNORE;
							playerType = AI_PLAYER_TYPE_ME;
						};
					}
				};
			};
			action = "struct ActionSwitchFieldOn" {
				internalColor_ = 0;
				onlyIfAi = true;
				duration = 30;
				energyReserve = 0.;
				allCores = false;
				onlyIfCoreDamaged = true;
				timer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellIndex = {
				x = 1;
				y = 1;
			};
			boundingRect = {
				left = 288;
				top = 64;
				right = 544;
				bottom = 96;
			};
		},
		{
			name = "захват строений";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = AND;
							conditions = {
								0;
							};
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_CORE;
				placementStrategy = PLACEMENT_STRATEGY_CORE_CATCHING;
				energyReserve = 50.;
				buildDurationMax = 300;
				priority = 0;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellIndex = {
				x = 4;
				y = 1;
			};
			boundingRect = {
				left = 1152;
				top = 64;
				right = 1408;
				bottom = 96;
			};
		},
		{
			name = "строить гаубицу";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					2;
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_GUN_HOWITZER;
							counter = 3;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_BOMB_STATION3;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = true;
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_GUN_HOWITZER;
				placementStrategy = PLACEMENT_STRATEGY_CORE_OFFENSIVE;
				energyReserve = 50.;
				buildDurationMax = 300;
				priority = 0;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellIndex = {
				x = 0;
				y = 2;
			};
			boundingRect = {
				left = 0;
				top = 128;
				right = 256;
				bottom = 160;
			};
		},
		{
			name = "заказать техников";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = AND;
							conditions = {
								0;
							};
						};
					}
				};
			};
			action = "struct ActionSquadOrderUnits" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_1;
				soldiers = 25;
				officers = 50;
				technics = 15;
				energyReserve = 100.;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellIndex = {
				x = 3;
				y = 5;
			};
			boundingRect = {
				left = 864;
				top = 320;
				right = 1120;
				bottom = 352;
			};
		},
		{
			name = "снайпера";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = INVERTED;
						condition = "struct ConditionUnitClassIsGoingToBeAttacked" {
							state_ = false;
							internalColor_ = 0;
							victimUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_MISSILE | UNIT_CLASS_IGNORE;
							agressorUnitClass = UNIT_CLASS_IGNORE;
						};
					}
				};
			};
			action = "struct ActionSquadAttack" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_2;
				attackByType = UNIT_ATTRIBUTE_CONDUCTOR;
				unitsToAttack = {
					1;
					UNIT_ATTRIBUTE_CORE
				};
				unitClassToAttack = UNIT_CLASS_STRUCTURE | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_STRUCTURE_CORE | UNIT_CLASS_FRAME | UNIT_CLASS_IGNORE;
				offensive = true;
				unitsNumber = 3;
				soldiers = 0;
				officers = 0;
				technics = 0;
				attackTime = 30;
				remutateCounter = 1;
				holdProduction = false;
				squadFollowDistance = 0.;
				squadToFollowBy = CHOOSE_SQUAD_2;
				ignoreLastTarget = false;
				returnToBase = true;
				interruptable = false;
				attackTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellIndex = {
				x = 3;
				y = 4;
			};
			boundingRect = {
				left = 864;
				top = 256;
				right = 1120;
				bottom = 288;
			};
		},
		{
			name = "UserCamera";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = 0;
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellIndex = {
				x = 0;
				y = 3;
			};
			boundingRect = {
				left = 0;
				top = 192;
				right = 256;
				bottom = 224;
			};
		},
		{
			name = "сложный";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionDifficultyLevel" {
							state_ = false;
							internalColor_ = 0;
							difficulty = DIFFICULTY_HARD;
						};
					}
				};
			};
			action = "struct Action" {
				internalColor_ = 0;
			};
			outcomingLinks = {
				4;
				{
					triggerName = "снайпера";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffsetX_ = 48;
					parentOffsetY_ = 16;
					childOffsetX_ = 44;
					childOffsetY_ = -16;
					parentOffset = {
						x = 48;
						y = 16;
					};
					childOffset = {
						x = 44;
						y = -16;
					};
				},
				{
					triggerName = "заказать техников";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffsetX_ = 61;
					parentOffsetY_ = 16;
					childOffsetX_ = 59;
					childOffsetY_ = -16;
					parentOffset = {
						x = 61;
						y = 16;
					};
					childOffset = {
						x = 59;
						y = -16;
					};
				},
				{
					triggerName = "захват строений";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffsetX_ = 122;
					parentOffsetY_ = -16;
					childOffsetX_ = -128;
					childOffsetY_ = 6;
					parentOffset = {
						x = 122;
						y = -16;
					};
					childOffset = {
						x = -128;
						y = 6;
					};
				},
				{
					triggerName = "снайпера2";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffsetX_ = -2147483648;
					parentOffsetY_ = -2147483648;
					childOffsetX_ = -2147483648;
					childOffsetY_ = -2147483648;
					parentOffset = {
						x = 33;
						y = 16;
					};
					childOffset = {
						x = 25;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellIndex = {
				x = 3;
				y = 2;
			};
			boundingRect = {
				left = 864;
				top = 128;
				right = 1120;
				bottom = 160;
			};
		},
		{
			name = "нормал";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionDifficultyLevel" {
							state_ = false;
							internalColor_ = 0;
							difficulty = DIFFICULTY_NORMAL;
						};
					}
				};
			};
			action = "struct ActionDelay" {
				internalColor_ = 0;
				delay = 0;
				showTimer = false;
				scaleByDifficulty = false;
				timer = {
					time = 0;
				};
			};
			outcomingLinks = {
				4;
				{
					triggerName = "снайпера0";
					color = STRATEGY_GREEN;
					type = THICK;
					active_ = false;
					parentOffsetX_ = 5;
					parentOffsetY_ = 16;
					childOffsetX_ = 2;
					childOffsetY_ = -16;
					parentOffset = {
						x = 5;
						y = 16;
					};
					childOffset = {
						x = 2;
						y = -16;
					};
				},
				{
					triggerName = "заказать техников0";
					color = STRATEGY_GREEN;
					type = THICK;
					active_ = false;
					parentOffsetX_ = 17;
					parentOffsetY_ = 16;
					childOffsetX_ = 17;
					childOffsetY_ = -16;
					parentOffset = {
						x = 17;
						y = 16;
					};
					childOffset = {
						x = 17;
						y = -16;
					};
				},
				{
					triggerName = "захват строений";
					color = STRATEGY_GREEN;
					type = THICK;
					active_ = false;
					parentOffsetX_ = -14;
					parentOffsetY_ = -16;
					childOffsetX_ = -14;
					childOffsetY_ = 16;
					parentOffset = {
						x = -14;
						y = -16;
					};
					childOffset = {
						x = -14;
						y = 16;
					};
				},
				{
					triggerName = "снайпера00";
					color = STRATEGY_GREEN;
					type = THICK;
					active_ = false;
					parentOffsetX_ = -2147483648;
					parentOffsetY_ = -2147483648;
					childOffsetX_ = -2147483648;
					childOffsetY_ = -2147483648;
					parentOffset = {
						x = -10;
						y = 16;
					};
					childOffset = {
						x = -20;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellIndex = {
				x = 4;
				y = 2;
			};
			boundingRect = {
				left = 1152;
				top = 128;
				right = 1408;
				bottom = 160;
			};
		},
		{
			name = "снайпера0";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = INVERTED;
						condition = "struct ConditionUnitClassIsGoingToBeAttacked" {
							state_ = false;
							internalColor_ = 0;
							victimUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_MISSILE | UNIT_CLASS_IGNORE;
							agressorUnitClass = UNIT_CLASS_IGNORE;
						};
					}
				};
			};
			action = "struct ActionSquadAttack" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_2;
				attackByType = UNIT_ATTRIBUTE_CONDUCTOR;
				unitsToAttack = {
					1;
					UNIT_ATTRIBUTE_CORE
				};
				unitClassToAttack = UNIT_CLASS_STRUCTURE | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_FRAME | UNIT_CLASS_IGNORE;
				offensive = true;
				unitsNumber = 2;
				soldiers = 0;
				officers = 0;
				technics = 0;
				attackTime = 30;
				remutateCounter = 1;
				holdProduction = false;
				squadFollowDistance = 0.;
				squadToFollowBy = CHOOSE_SQUAD_2;
				ignoreLastTarget = false;
				returnToBase = true;
				interruptable = false;
				attackTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellIndex = {
				x = 4;
				y = 4;
			};
			boundingRect = {
				left = 1152;
				top = 256;
				right = 1408;
				bottom = 288;
			};
		},
		{
			name = "заказать техников0";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = AND;
							conditions = {
								0;
							};
						};
					}
				};
			};
			action = "struct ActionSquadOrderUnits" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_1;
				soldiers = 20;
				officers = 35;
				technics = 10;
				energyReserve = 100.;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellIndex = {
				x = 4;
				y = 5;
			};
			boundingRect = {
				left = 1152;
				top = 320;
				right = 1408;
				bottom = 352;
			};
		},
		{
			name = "снайпера1";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = INVERTED;
						condition = "struct ConditionUnitClassIsGoingToBeAttacked" {
							state_ = false;
							internalColor_ = 0;
							victimUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_MISSILE | UNIT_CLASS_IGNORE;
							agressorUnitClass = UNIT_CLASS_IGNORE;
						};
					}
				};
			};
			action = "struct ActionSquadAttack" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_1;
				attackByType = UNIT_ATTRIBUTE_CONDUCTOR;
				unitsToAttack = {
					1;
					UNIT_ATTRIBUTE_CORE
				};
				unitClassToAttack = UNIT_CLASS_STRUCTURE | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_FRAME | UNIT_CLASS_IGNORE;
				offensive = true;
				unitsNumber = 1;
				soldiers = 0;
				officers = 0;
				technics = 0;
				attackTime = 30;
				remutateCounter = 1;
				holdProduction = false;
				squadFollowDistance = 0.;
				squadToFollowBy = CHOOSE_SQUAD_1;
				ignoreLastTarget = false;
				returnToBase = true;
				interruptable = false;
				attackTimer = {
					time = 23700;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellIndex = {
				x = 5;
				y = 4;
			};
			boundingRect = {
				left = 1440;
				top = 256;
				right = 1696;
				bottom = 288;
			};
		},
		{
			name = "заказать техников1";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = AND;
							conditions = {
								0;
							};
						};
					}
				};
			};
			action = "struct ActionSquadOrderUnits" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_1;
				soldiers = 8;
				officers = 16;
				technics = 4;
				energyReserve = 100.;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellIndex = {
				x = 5;
				y = 5;
			};
			boundingRect = {
				left = 1440;
				top = 320;
				right = 1696;
				bottom = 352;
			};
		},
		{
			name = "легкий";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionDifficultyLevel" {
							state_ = true;
							internalColor_ = 0;
							difficulty = DIFFICULTY_EASY;
						};
					}
				};
			};
			action = "struct ActionDelay" {
				internalColor_ = 0;
				delay = 0;
				showTimer = false;
				scaleByDifficulty = false;
				timer = {
					time = 0;
				};
			};
			outcomingLinks = {
				4;
				{
					triggerName = "снайпера1";
					color = STRATEGY_BLUE;
					type = THICK;
					active_ = false;
					parentOffsetX_ = -81;
					parentOffsetY_ = 16;
					childOffsetX_ = -80;
					childOffsetY_ = -16;
					parentOffset = {
						x = -81;
						y = 16;
					};
					childOffset = {
						x = -80;
						y = -16;
					};
				},
				{
					triggerName = "заказать техников1";
					color = STRATEGY_BLUE;
					type = THICK;
					active_ = false;
					parentOffsetX_ = -91;
					parentOffsetY_ = 16;
					childOffsetX_ = -84;
					childOffsetY_ = -16;
					parentOffset = {
						x = -91;
						y = 16;
					};
					childOffset = {
						x = -84;
						y = -16;
					};
				},
				{
					triggerName = "захват строений";
					color = STRATEGY_BLUE;
					type = THICK;
					active_ = false;
					parentOffsetX_ = -108;
					parentOffsetY_ = -16;
					childOffsetX_ = 128;
					childOffsetY_ = 8;
					parentOffset = {
						x = -108;
						y = -16;
					};
					childOffset = {
						x = 128;
						y = 8;
					};
				},
				{
					triggerName = "снайпера10";
					color = STRATEGY_BLUE;
					type = THICK;
					active_ = false;
					parentOffsetX_ = -2147483648;
					parentOffsetY_ = -2147483648;
					childOffsetX_ = -2147483648;
					childOffsetY_ = -2147483648;
					parentOffset = {
						x = -59;
						y = 16;
					};
					childOffset = {
						x = -66;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellIndex = {
				x = 5;
				y = 2;
			};
			boundingRect = {
				left = 1440;
				top = 128;
				right = 1696;
				bottom = 160;
			};
		},
		{
			name = "снайпера10";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = INVERTED;
						condition = "struct ConditionUnitClassIsGoingToBeAttacked" {
							state_ = false;
							internalColor_ = 0;
							victimUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_MISSILE | UNIT_CLASS_IGNORE;
							agressorUnitClass = UNIT_CLASS_IGNORE;
						};
					}
				};
			};
			action = "struct ActionSquadAttack" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_1;
				attackByType = UNIT_ATTRIBUTE_CONDUCTOR;
				unitsToAttack = {
					1;
					UNIT_ATTRIBUTE_CORE
				};
				unitClassToAttack = UNIT_CLASS_STRUCTURE | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_FRAME | UNIT_CLASS_IGNORE;
				offensive = true;
				unitsNumber = 1;
				soldiers = 0;
				officers = 0;
				technics = 0;
				attackTime = 30;
				remutateCounter = 1;
				holdProduction = false;
				squadFollowDistance = 0.;
				squadToFollowBy = CHOOSE_SQUAD_1;
				ignoreLastTarget = false;
				returnToBase = true;
				interruptable = false;
				attackTimer = {
					time = 23700;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellIndex = {
				x = 5;
				y = 6;
			};
			boundingRect = {
				left = 1440;
				top = 384;
				right = 1696;
				bottom = 416;
			};
		},
		{
			name = "снайпера00";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = INVERTED;
						condition = "struct ConditionUnitClassIsGoingToBeAttacked" {
							state_ = false;
							internalColor_ = 0;
							victimUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_MISSILE | UNIT_CLASS_IGNORE;
							agressorUnitClass = UNIT_CLASS_IGNORE;
						};
					}
				};
			};
			action = "struct ActionSquadAttack" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_2;
				attackByType = UNIT_ATTRIBUTE_CONDUCTOR;
				unitsToAttack = {
					1;
					UNIT_ATTRIBUTE_CORE
				};
				unitClassToAttack = UNIT_CLASS_STRUCTURE | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_FRAME | UNIT_CLASS_IGNORE;
				offensive = true;
				unitsNumber = 2;
				soldiers = 0;
				officers = 0;
				technics = 0;
				attackTime = 30;
				remutateCounter = 1;
				holdProduction = false;
				squadFollowDistance = 0.;
				squadToFollowBy = CHOOSE_SQUAD_2;
				ignoreLastTarget = false;
				returnToBase = true;
				interruptable = false;
				attackTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellIndex = {
				x = 4;
				y = 6;
			};
			boundingRect = {
				left = 1152;
				top = 384;
				right = 1408;
				bottom = 416;
			};
		},
		{
			name = "снайпера2";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = INVERTED;
						condition = "struct ConditionUnitClassIsGoingToBeAttacked" {
							state_ = false;
							internalColor_ = 0;
							victimUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_MISSILE | UNIT_CLASS_IGNORE;
							agressorUnitClass = UNIT_CLASS_IGNORE;
						};
					}
				};
			};
			action = "struct ActionSquadAttack" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_2;
				attackByType = UNIT_ATTRIBUTE_CONDUCTOR;
				unitsToAttack = {
					1;
					UNIT_ATTRIBUTE_CORE
				};
				unitClassToAttack = UNIT_CLASS_STRUCTURE | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_STRUCTURE_CORE | UNIT_CLASS_FRAME | UNIT_CLASS_IGNORE;
				offensive = true;
				unitsNumber = 3;
				soldiers = 0;
				officers = 0;
				technics = 0;
				attackTime = 30;
				remutateCounter = 1;
				holdProduction = false;
				squadFollowDistance = 0.;
				squadToFollowBy = CHOOSE_SQUAD_2;
				ignoreLastTarget = false;
				returnToBase = true;
				interruptable = false;
				attackTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellIndex = {
				x = 3;
				y = 6;
			};
			boundingRect = {
				left = 864;
				top = 384;
				right = 1120;
				bottom = 416;
			};
		}
	};
	boundingRect = {
		left = 0;
		top = 0;
		right = 1696;
		bottom = 416;
	};
	viewRect = {
		left = 557;
		top = -277;
		right = 2272;
		bottom = 1143;
	};
};
