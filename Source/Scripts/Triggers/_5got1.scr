TriggerChain = {
	name = "";
	triggers = {
		5;
		{
			name = "START";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = AND;
							conditions = {
								0;
							};
						};
					}
				};
			};
			action = 0;
			outcomingLinks = {
				1;
				{
					triggerName = "омегу";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffsetX_ = 3;
					parentOffsetY_ = 16;
					childOffsetX_ = 3;
					childOffsetY_ = -16;
					parentOffset = {
						x = 3;
						y = 16;
					};
					childOffset = {
						x = 3;
						y = -16;
					};
				}
			};
			state_ = CHECKING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 0;
			cellNumberY = 0;
			left_ = 0;
			top_ = 0;
			right_ = 256;
			bottom_ = 32;
			cellIndex = {
				x = 0;
				y = 0;
			};
			boundingRect = {
				left = 0;
				top = 0;
				right = 256;
				bottom = 32;
			};
		},
		{
			name = "омегу";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelUpperReserve" {
							state_ = true;
							internalColor_ = 0;
							energyReserve = 3000.;
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_CORRIDOR_OMEGA;
				placementStrategy = PLACEMENT_STRATEGY_STATION;
				energyReserve = 50.;
				buildDurationMax = 6000;
				priority = 0;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "заморозить омегу";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -3;
					parentOffsetY_ = 16;
					childOffsetX_ = -4;
					childOffsetY_ = -16;
					parentOffset = {
						x = -3;
						y = 16;
					};
					childOffset = {
						x = -4;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 0;
			cellNumberY = 1;
			left_ = 0;
			top_ = 64;
			right_ = 256;
			bottom_ = 96;
			cellIndex = {
				x = 0;
				y = 1;
			};
			boundingRect = {
				left = 0;
				top = 64;
				right = 256;
				bottom = 96;
			};
		},
		{
			name = "заморозить омегу";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelLowerReserve" {
							state_ = false;
							internalColor_ = 0;
							energyReserve = 500.;
						};
					}
				};
			};
			action = "struct ActionHoldBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_CORRIDOR_OMEGA;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 0;
			cellNumberY = 2;
			left_ = 0;
			top_ = 128;
			right_ = 256;
			bottom_ = 160;
			cellIndex = {
				x = 0;
				y = 2;
			};
			boundingRect = {
				left = 0;
				top = 128;
				right = 256;
				bottom = 160;
			};
		},
		{
			name = "Camera";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionSetCamera" {
				internalColor_ = 0;
				cameraSplineName = "Camera1";
				stepTime = 4.76441e-044;
				cycles = 238;
				smoothTransition = true;
			};
			outcomingLinks = {
				0;
			};
			state_ = CHECKING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 0;
			cellNumberY = 3;
			left_ = 0;
			top_ = 192;
			right_ = 256;
			bottom_ = 224;
			cellIndex = {
				x = 0;
				y = 3;
			};
			boundingRect = {
				left = 0;
				top = 192;
				right = 256;
				bottom = 224;
			};
		},
		{
			name = "UserCamera";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = 0;
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = -2147483648;
			cellNumberY = -2147483648;
			left_ = -2147483648;
			top_ = -2147483648;
			right_ = -2147483648;
			bottom_ = -2147483648;
			cellIndex = {
				x = -2147483648;
				y = -2147483648;
			};
			boundingRect = {
				left = -2147483648;
				top = -2147483648;
				right = -2147483648;
				bottom = -2147483648;
			};
		}
	};
	left_ = -102;
	top_ = -175;
	right_ = 990;
	bottom_ = 567;
	boundingRect = {
		left = -102;
		top = -175;
		right = 990;
		bottom = 567;
	};
	viewRect = {
		left = -102;
		top = -175;
		right = 990;
		bottom = 567;
	};
};
