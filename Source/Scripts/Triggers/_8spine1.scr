TriggerChain = {
	name = "";
	triggers = {
		26;
		{
			name = "START";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = AND;
							conditions = {
								0;
							};
						};
					}
				};
			};
			action = 0;
			outcomingLinks = {
				17;
				{
					triggerName = "Place Core";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffsetX_ = 55;
					parentOffsetY_ = 16;
					childOffsetX_ = 56;
					childOffsetY_ = -16;
					parentOffset = {
						x = 55;
						y = 16;
					};
					childOffset = {
						x = 56;
						y = -16;
					};
				},
				{
					triggerName = "Technic Plant";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffsetX_ = 10;
					parentOffsetY_ = 16;
					childOffsetX_ = 12;
					childOffsetY_ = -16;
					parentOffset = {
						x = 10;
						y = 16;
					};
					childOffset = {
						x = 12;
						y = -16;
					};
				},
				{
					triggerName = "вкл. поле";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffsetX_ = -14;
					parentOffsetY_ = 16;
					childOffsetX_ = -14;
					childOffsetY_ = -16;
					parentOffset = {
						x = -14;
						y = 16;
					};
					childOffset = {
						x = -14;
						y = -16;
					};
				},
				{
					triggerName = "снайпер";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffsetX_ = -49;
					parentOffsetY_ = 16;
					childOffsetX_ = -60;
					childOffsetY_ = -16;
					parentOffset = {
						x = -49;
						y = 16;
					};
					childOffset = {
						x = -60;
						y = -16;
					};
				},
				{
					triggerName = "бомбовая лаборатория";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffsetX_ = -73;
					parentOffsetY_ = 16;
					childOffsetX_ = -89;
					childOffsetY_ = -16;
					parentOffset = {
						x = -73;
						y = 16;
					};
					childOffset = {
						x = -89;
						y = -16;
					};
				},
				{
					triggerName = "Soldier Plant";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = 14;
					childOffsetX_ = -123;
					childOffsetY_ = -16;
					parentOffset = {
						x = 128;
						y = 14;
					};
					childOffset = {
						x = -123;
						y = -16;
					};
				},
				{
					triggerName = "Laser1";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffsetX_ = 95;
					parentOffsetY_ = 16;
					childOffsetX_ = -121;
					childOffsetY_ = -16;
					parentOffset = {
						x = 95;
						y = 16;
					};
					childOffset = {
						x = -121;
						y = -16;
					};
				},
				{
					triggerName = "захват строений";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffsetX_ = 75;
					parentOffsetY_ = 16;
					childOffsetX_ = -128;
					childOffsetY_ = -16;
					parentOffset = {
						x = 75;
						y = 16;
					};
					childOffset = {
						x = -128;
						y = -16;
					};
				},
				{
					triggerName = "Install Frame";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = -10;
					childOffsetX_ = -128;
					childOffsetY_ = -4;
					parentOffset = {
						x = 128;
						y = -10;
					};
					childOffset = {
						x = -128;
						y = -4;
					};
				},
				{
					triggerName = "Officier Plant";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = -4;
					childOffsetX_ = -128;
					childOffsetY_ = -9;
					parentOffset = {
						x = 128;
						y = -4;
					};
					childOffset = {
						x = -128;
						y = -9;
					};
				},
				{
					triggerName = "лазерная пушка";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = 6;
					childOffsetX_ = -128;
					childOffsetY_ = -16;
					parentOffset = {
						x = 128;
						y = 6;
					};
					childOffset = {
						x = -128;
						y = -16;
					};
				},
				{
					triggerName = "телепортация";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = 10;
					childOffsetX_ = -128;
					childOffsetY_ = -9;
					parentOffset = {
						x = 128;
						y = 10;
					};
					childOffset = {
						x = -128;
						y = -9;
					};
				},
				{
					triggerName = "вкл. поле0";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffsetX_ = -128;
					parentOffsetY_ = 12;
					childOffsetX_ = 128;
					childOffsetY_ = -16;
					parentOffset = {
						x = -128;
						y = 12;
					};
					childOffset = {
						x = 128;
						y = -16;
					};
				},
				{
					triggerName = "вкл. поле1";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffsetX_ = -114;
					parentOffsetY_ = 16;
					childOffsetX_ = 127;
					childOffsetY_ = -16;
					parentOffset = {
						x = -114;
						y = 16;
					};
					childOffset = {
						x = 127;
						y = -16;
					};
				},
				{
					triggerName = "сложный";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 47;
					parentOffsetY_ = 16;
					childOffsetX_ = 41;
					childOffsetY_ = -16;
					parentOffset = {
						x = 47;
						y = 16;
					};
					childOffset = {
						x = 41;
						y = -16;
					};
				},
				{
					triggerName = "нормал";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 103;
					parentOffsetY_ = 16;
					childOffsetX_ = -86;
					childOffsetY_ = -16;
					parentOffset = {
						x = 103;
						y = 16;
					};
					childOffset = {
						x = -86;
						y = -16;
					};
				},
				{
					triggerName = "легкий";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 106;
					parentOffsetY_ = 16;
					childOffsetX_ = -124;
					childOffsetY_ = -16;
					parentOffset = {
						x = 106;
						y = 16;
					};
					childOffset = {
						x = -124;
						y = -16;
					};
				}
			};
			state_ = CHECKING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 0;
			cellNumberY = 0;
			left_ = 0;
			top_ = 0;
			right_ = 256;
			bottom_ = 32;
			cellIndex = {
				x = 0;
				y = 0;
			};
			boundingRect = {
				left = 0;
				top = 0;
				right = 256;
				bottom = 32;
			};
		},
		{
			name = "Camera";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = AND;
							conditions = {
								0;
							};
						};
					}
				};
			};
			action = "struct ActionSetCamera" {
				internalColor_ = 0;
				cameraSplineName = "Camera1";
				stepTime = 4.;
				cycles = 1;
				smoothTransition = false;
			};
			outcomingLinks = {
				0;
			};
			state_ = CHECKING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 1;
			cellNumberY = -2;
			left_ = 288;
			top_ = -128;
			right_ = 544;
			bottom_ = -96;
			cellIndex = {
				x = 1;
				y = -2;
			};
			boundingRect = {
				left = 288;
				top = -128;
				right = 544;
				bottom = -96;
			};
		},
		{
			name = "Install Frame";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = AND;
							conditions = {
								0;
							};
						};
					}
				};
			};
			action = "struct ActionInstallFrame" {
				internalColor_ = 0;
				onlyIfAi = true;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 1;
			cellNumberY = -1;
			left_ = 288;
			top_ = -64;
			right_ = 544;
			bottom_ = -32;
			cellIndex = {
				x = 1;
				y = -1;
			};
			boundingRect = {
				left = 288;
				top = -64;
				right = 544;
				bottom = -32;
			};
		},
		{
			name = "Place Core";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_CORE;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = true;
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_CORE;
				placementStrategy = PLACEMENT_STRATEGY_CORE;
				energyReserve = 0.;
				buildDurationMax = 300;
				priority = 1;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 0;
			cellNumberY = 1;
			left_ = 0;
			top_ = 64;
			right_ = 256;
			bottom_ = 96;
			cellIndex = {
				x = 0;
				y = 1;
			};
			boundingRect = {
				left = 0;
				top = 64;
				right = 256;
				bottom = 96;
			};
		},
		{
			name = "Soldier Plant";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					2;
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_SOLDIER_PLANT;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = true;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_SOLDIER_PLANT;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ENEMY;
							constructedAndConstructing = true;
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_SOLDIER_PLANT;
				placementStrategy = PLACEMENT_STRATEGY_STATION;
				energyReserve = 5000.;
				buildDurationMax = 300;
				priority = 3;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 1;
			cellNumberY = 1;
			left_ = 288;
			top_ = 64;
			right_ = 544;
			bottom_ = 96;
			cellIndex = {
				x = 1;
				y = 1;
			};
			boundingRect = {
				left = 288;
				top = 64;
				right = 544;
				bottom = 96;
			};
		},
		{
			name = "Officier Plant";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					2;
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_OFFICER_PLANT;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = true;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_OFFICER_PLANT;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ENEMY;
							constructedAndConstructing = true;
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_OFFICER_PLANT;
				placementStrategy = PLACEMENT_STRATEGY_STATION;
				energyReserve = 5000.;
				buildDurationMax = 300;
				priority = 3;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 2;
			cellNumberY = 1;
			left_ = 576;
			top_ = 64;
			right_ = 832;
			bottom_ = 96;
			cellIndex = {
				x = 2;
				y = 1;
			};
			boundingRect = {
				left = 576;
				top = 64;
				right = 832;
				bottom = 96;
			};
		},
		{
			name = "Technic Plant";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_TECHNIC_PLANT;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = true;
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_TECHNIC_PLANT;
				placementStrategy = PLACEMENT_STRATEGY_STATION;
				energyReserve = 5000.;
				buildDurationMax = 300;
				priority = 3;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 0;
			cellNumberY = 2;
			left_ = 0;
			top_ = 128;
			right_ = 256;
			bottom_ = 160;
			cellIndex = {
				x = 0;
				y = 2;
			};
			boundingRect = {
				left = 0;
				top = 128;
				right = 256;
				bottom = 160;
			};
		},
		{
			name = "Laser1";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					3;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_OFFICER_PLANT;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = true;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelUpperReserve" {
							state_ = true;
							internalColor_ = 0;
							energyReserve = 3000.;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = false;
							internalColor_ = 0;
							type = OR;
							conditions = {
								3;
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = false;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_SOLDIER_PLANT;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ENEMY;
										constructedAndConstructing = true;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = false;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_OFFICER_PLANT;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ENEMY;
										constructedAndConstructing = true;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = false;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_TECHNIC_PLANT;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ENEMY;
										constructedAndConstructing = true;
									};
								}
							};
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_LASER_STATION1;
				placementStrategy = PLACEMENT_STRATEGY_STATION;
				energyReserve = 5000.;
				buildDurationMax = 300;
				priority = 3;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 1;
			cellNumberY = 2;
			left_ = 288;
			top_ = 128;
			right_ = 544;
			bottom_ = 160;
			cellIndex = {
				x = 1;
				y = 2;
			};
			boundingRect = {
				left = 288;
				top = 128;
				right = 544;
				bottom = 160;
			};
		},
		{
			name = "лазерная пушка";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionNumberOfBuildingByCoresCapacity" {
							state_ = true;
							internalColor_ = 0;
							building = UNIT_ATTRIBUTE_LASER_CANNON;
							factor = 1.;
							compareOp = COMPARE_LESS;
							building2 = UNIT_ATTRIBUTE_CORE;
							playerType = AI_PLAYER_TYPE_ME;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = false;
							internalColor_ = 0;
							type = OR;
							conditions = {
								4;
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = false;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_SOLDIER;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ENEMY;
										constructedAndConstructing = true;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = false;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_SNIPER;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ENEMY;
										constructedAndConstructing = true;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = false;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_ROCKER;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ENEMY;
										constructedAndConstructing = true;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = false;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_MORTAR;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ENEMY;
										constructedAndConstructing = true;
									};
								}
							};
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_LASER_CANNON;
				placementStrategy = PLACEMENT_STRATEGY_GUN;
				energyReserve = 1000.;
				buildDurationMax = 300;
				priority = 3;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 2;
			cellNumberY = 2;
			left_ = 576;
			top_ = 128;
			right_ = 832;
			bottom_ = 160;
			cellIndex = {
				x = 2;
				y = 2;
			};
			boundingRect = {
				left = 576;
				top = 128;
				right = 832;
				bottom = 160;
			};
		},
		{
			name = "вкл. поле";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionUnitClassUnderAttack" {
							state_ = false;
							internalColor_ = 0;
							victimUnitClass = UNIT_CLASS_STRUCTURE | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_FRAME | UNIT_CLASS_IGNORE;
							damagePercent = 1;
							agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_AIR_FILTH | UNIT_CLASS_IGNORE;
							playerType = AI_PLAYER_TYPE_ME;
						};
					}
				};
			};
			action = "struct ActionSwitchFieldOn" {
				internalColor_ = 0;
				onlyIfAi = true;
				duration = 30;
				energyReserve = 0.;
				allCores = false;
				onlyIfCoreDamaged = false;
				timer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 0;
			cellNumberY = 3;
			left_ = 0;
			top_ = 192;
			right_ = 256;
			bottom_ = 224;
			cellIndex = {
				x = 0;
				y = 3;
			};
			boundingRect = {
				left = 0;
				top = 192;
				right = 256;
				bottom = 224;
			};
		},
		{
			name = "базовые юниты";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = OR;
				conditions = {
					0;
				};
			};
			action = "struct ActionSquadOrderUnits" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_1;
				soldiers = 0;
				officers = 100;
				technics = 100;
				energyReserve = 5000.;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 0;
			cellNumberY = 7;
			left_ = 0;
			top_ = 448;
			right_ = 256;
			bottom_ = 480;
			cellIndex = {
				x = 0;
				y = 7;
			};
			boundingRect = {
				left = 0;
				top = 448;
				right = 256;
				bottom = 480;
			};
		},
		{
			name = "снайпер";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionUnitClassIsGoingToBeAttacked" {
							state_ = false;
							internalColor_ = 0;
							victimUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_STRUCTURE_CORE | UNIT_CLASS_BUILDER | UNIT_CLASS_TRUCK | UNIT_CLASS_IGNORE;
							agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_IGNORE;
						};
					}
				};
			};
			action = "struct ActionSquadAttack" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_1;
				attackByType = UNIT_ATTRIBUTE_SNIPER;
				unitsToAttack = {
					0;
				};
				unitClassToAttack = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_IGNORE;
				offensive = true;
				unitsNumber = 1;
				soldiers = 0;
				officers = 0;
				technics = 0;
				attackTime = 30;
				remutateCounter = 2;
				holdProduction = false;
				squadFollowDistance = 0.;
				squadToFollowBy = CHOOSE_SQUAD_2;
				ignoreLastTarget = false;
				returnToBase = true;
				interruptable = false;
				attackTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 0;
			cellNumberY = 5;
			left_ = 0;
			top_ = 320;
			right_ = 256;
			bottom_ = 352;
			cellIndex = {
				x = 0;
				y = 5;
			};
			boundingRect = {
				left = 0;
				top = 320;
				right = 256;
				bottom = 352;
			};
		},
		{
			name = "захват строений";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_CORE;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = true;
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_CORE;
				placementStrategy = PLACEMENT_STRATEGY_CORE_CATCHING_CORRIDOR;
				energyReserve = 0.;
				buildDurationMax = 300;
				priority = 0;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 1;
			cellNumberY = 3;
			left_ = 288;
			top_ = 192;
			right_ = 544;
			bottom_ = 224;
			cellIndex = {
				x = 1;
				y = 3;
			};
			boundingRect = {
				left = 288;
				top = 192;
				right = 544;
				bottom = 224;
			};
		},
		{
			name = "телепортация";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_CORRIDOR_OMEGA;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					}
				};
			};
			action = "struct ActionTeleportationOut" {
				internalColor_ = 0;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 2;
			cellNumberY = 3;
			left_ = 576;
			top_ = 192;
			right_ = 832;
			bottom_ = 224;
			cellIndex = {
				x = 2;
				y = 3;
			};
			boundingRect = {
				left = 576;
				top = 192;
				right = 832;
				bottom = 224;
			};
		},
		{
			name = "бомбовая лаборатория";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_BOMB_STATION1;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = true;
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_BOMB_STATION1;
				placementStrategy = PLACEMENT_STRATEGY_CORE;
				energyReserve = 50.;
				buildDurationMax = 300;
				priority = 3;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 0;
			cellNumberY = 4;
			left_ = 0;
			top_ = 256;
			right_ = 256;
			bottom_ = 288;
			cellIndex = {
				x = 0;
				y = 4;
			};
			boundingRect = {
				left = 0;
				top = 256;
				right = 256;
				bottom = 288;
			};
		},
		{
			name = "мортар";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = INVERTED;
						condition = "struct ConditionUnitClassIsGoingToBeAttacked" {
							state_ = false;
							internalColor_ = 0;
							victimUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_STRUCTURE_CORE | UNIT_CLASS_BUILDER | UNIT_CLASS_BLOCK | UNIT_CLASS_IGNORE;
							agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_IGNORE;
						};
					}
				};
			};
			action = "struct ActionSquadAttack" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_1;
				attackByType = UNIT_ATTRIBUTE_MORTAR;
				unitsToAttack = {
					1;
					UNIT_ATTRIBUTE_CORE
				};
				unitClassToAttack = UNIT_CLASS_STRUCTURE | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_FRAME | UNIT_CLASS_IGNORE;
				offensive = true;
				unitsNumber = 15;
				soldiers = 0;
				officers = 0;
				technics = 0;
				attackTime = 100;
				remutateCounter = 1;
				holdProduction = false;
				squadFollowDistance = 0.;
				squadToFollowBy = CHOOSE_SQUAD_2;
				ignoreLastTarget = false;
				returnToBase = false;
				interruptable = true;
				attackTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 0;
			cellNumberY = 9;
			left_ = 0;
			top_ = 576;
			right_ = 256;
			bottom_ = 608;
			cellIndex = {
				x = 0;
				y = 9;
			};
			boundingRect = {
				left = 0;
				top = 576;
				right = 256;
				bottom = 608;
			};
		},
		{
			name = "вкл. поле0";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionBuildingNearBuilding" {
							state_ = false;
							internalColor_ = 0;
							distance = 90.;
							playerType1 = AI_PLAYER_TYPE_ME;
							playerType2 = AI_PLAYER_TYPE_ENEMY;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelUpperReserve" {
							state_ = true;
							internalColor_ = 0;
							energyReserve = 500.;
						};
					}
				};
			};
			action = "struct ActionSwitchFieldOn" {
				internalColor_ = 0;
				onlyIfAi = true;
				duration = 5;
				energyReserve = 0.;
				allCores = true;
				onlyIfCoreDamaged = true;
				timer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 255;
			cellNumberX = -1;
			cellNumberY = 1;
			left_ = -288;
			top_ = 64;
			right_ = -32;
			bottom_ = 96;
			cellIndex = {
				x = -1;
				y = 1;
			};
			boundingRect = {
				left = -288;
				top = 64;
				right = -32;
				bottom = 96;
			};
		},
		{
			name = "вкл. поле1";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionUnitClassUnderAttack" {
							state_ = false;
							internalColor_ = 0;
							victimUnitClass = UNIT_CLASS_STRUCTURE | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_STRUCTURE_CORE | UNIT_CLASS_IGNORE;
							damagePercent = 10;
							agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_IGNORE;
							playerType = AI_PLAYER_TYPE_ME;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelUpperReserve" {
							state_ = true;
							internalColor_ = 0;
							energyReserve = 1000.;
						};
					}
				};
			};
			action = "struct ActionSwitchFieldOn" {
				internalColor_ = 0;
				onlyIfAi = true;
				duration = 10;
				energyReserve = 0.;
				allCores = false;
				onlyIfCoreDamaged = false;
				timer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = -1;
			cellNumberY = 2;
			left_ = -288;
			top_ = 128;
			right_ = -32;
			bottom_ = 160;
			cellIndex = {
				x = -1;
				y = 2;
			};
			boundingRect = {
				left = -288;
				top = 128;
				right = -32;
				bottom = 160;
			};
		},
		{
			name = "UserCamera";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = 0;
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = -1;
			cellNumberY = 3;
			left_ = -288;
			top_ = 192;
			right_ = -32;
			bottom_ = 224;
			cellIndex = {
				x = -1;
				y = 3;
			};
			boundingRect = {
				left = -288;
				top = 192;
				right = -32;
				bottom = 224;
			};
		},
		{
			name = "сложный";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionDifficultyLevel" {
							state_ = true;
							internalColor_ = 0;
							difficulty = DIFFICULTY_HARD;
						};
					}
				};
			};
			action = "struct Action" {
				internalColor_ = 0;
			};
			outcomingLinks = {
				2;
				{
					triggerName = "мортар";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffsetX_ = 43;
					parentOffsetY_ = 16;
					childOffsetX_ = 33;
					childOffsetY_ = -16;
					parentOffset = {
						x = 43;
						y = 16;
					};
					childOffset = {
						x = 33;
						y = -16;
					};
				},
				{
					triggerName = "базовые юниты";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffsetX_ = 71;
					parentOffsetY_ = 16;
					childOffsetX_ = 70;
					childOffsetY_ = -16;
					parentOffset = {
						x = 71;
						y = 16;
					};
					childOffset = {
						x = 70;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 0;
			cellNumberY = 6;
			left_ = 0;
			top_ = 384;
			right_ = 256;
			bottom_ = 416;
			cellIndex = {
				x = 0;
				y = 6;
			};
			boundingRect = {
				left = 0;
				top = 384;
				right = 256;
				bottom = 416;
			};
		},
		{
			name = "нормал";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionDifficultyLevel" {
							state_ = false;
							internalColor_ = 0;
							difficulty = DIFFICULTY_NORMAL;
						};
					}
				};
			};
			action = "struct Action" {
				internalColor_ = 0;
			};
			outcomingLinks = {
				2;
				{
					triggerName = "базовые юниты0";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffsetX_ = -3;
					parentOffsetY_ = 16;
					childOffsetX_ = -6;
					childOffsetY_ = -16;
					parentOffset = {
						x = -3;
						y = 16;
					};
					childOffset = {
						x = -6;
						y = -16;
					};
				},
				{
					triggerName = "мортар0";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffsetX_ = -33;
					parentOffsetY_ = 16;
					childOffsetX_ = -32;
					childOffsetY_ = -16;
					parentOffset = {
						x = -33;
						y = 16;
					};
					childOffset = {
						x = -32;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 1;
			cellNumberY = 6;
			left_ = 288;
			top_ = 384;
			right_ = 544;
			bottom_ = 416;
			cellIndex = {
				x = 1;
				y = 6;
			};
			boundingRect = {
				left = 288;
				top = 384;
				right = 544;
				bottom = 416;
			};
		},
		{
			name = "мортар0";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = INVERTED;
						condition = "struct ConditionUnitClassIsGoingToBeAttacked" {
							state_ = false;
							internalColor_ = 0;
							victimUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_STRUCTURE_CORE | UNIT_CLASS_BUILDER | UNIT_CLASS_BLOCK | UNIT_CLASS_IGNORE;
							agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_IGNORE;
						};
					}
				};
			};
			action = "struct ActionSquadAttack" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_1;
				attackByType = UNIT_ATTRIBUTE_MORTAR;
				unitsToAttack = {
					1;
					UNIT_ATTRIBUTE_CORE
				};
				unitClassToAttack = UNIT_CLASS_STRUCTURE | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_FRAME | UNIT_CLASS_IGNORE;
				offensive = true;
				unitsNumber = 10;
				soldiers = 0;
				officers = 0;
				technics = 0;
				attackTime = 100;
				remutateCounter = 1;
				holdProduction = false;
				squadFollowDistance = 0.;
				squadToFollowBy = CHOOSE_SQUAD_2;
				ignoreLastTarget = false;
				returnToBase = false;
				interruptable = true;
				attackTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 1;
			cellNumberY = 9;
			left_ = 288;
			top_ = 576;
			right_ = 544;
			bottom_ = 608;
			cellIndex = {
				x = 1;
				y = 9;
			};
			boundingRect = {
				left = 288;
				top = 576;
				right = 544;
				bottom = 608;
			};
		},
		{
			name = "базовые юниты0";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = OR;
				conditions = {
					0;
				};
			};
			action = "struct ActionSquadOrderUnits" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_1;
				soldiers = 0;
				officers = 50;
				technics = 50;
				energyReserve = 5000.;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 1;
			cellNumberY = 7;
			left_ = 288;
			top_ = 448;
			right_ = 544;
			bottom_ = 480;
			cellIndex = {
				x = 1;
				y = 7;
			};
			boundingRect = {
				left = 288;
				top = 448;
				right = 544;
				bottom = 480;
			};
		},
		{
			name = "легкий";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionDifficultyLevel" {
							state_ = false;
							internalColor_ = 0;
							difficulty = DIFFICULTY_EASY;
						};
					}
				};
			};
			action = "struct Action" {
				internalColor_ = 0;
			};
			outcomingLinks = {
				2;
				{
					triggerName = "базовые юниты00";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffsetX_ = -17;
					parentOffsetY_ = 16;
					childOffsetX_ = -17;
					childOffsetY_ = -16;
					parentOffset = {
						x = -17;
						y = 16;
					};
					childOffset = {
						x = -17;
						y = -16;
					};
				},
				{
					triggerName = "мортар00";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffsetX_ = -34;
					parentOffsetY_ = 16;
					childOffsetX_ = -35;
					childOffsetY_ = -16;
					parentOffset = {
						x = -34;
						y = 16;
					};
					childOffset = {
						x = -35;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 2;
			cellNumberY = 6;
			left_ = 576;
			top_ = 384;
			right_ = 832;
			bottom_ = 416;
			cellIndex = {
				x = 2;
				y = 6;
			};
			boundingRect = {
				left = 576;
				top = 384;
				right = 832;
				bottom = 416;
			};
		},
		{
			name = "базовые юниты00";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = OR;
				conditions = {
					0;
				};
			};
			action = "struct ActionSquadOrderUnits" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_1;
				soldiers = 0;
				officers = 25;
				technics = 20;
				energyReserve = 5000.;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 2;
			cellNumberY = 7;
			left_ = 576;
			top_ = 448;
			right_ = 832;
			bottom_ = 480;
			cellIndex = {
				x = 2;
				y = 7;
			};
			boundingRect = {
				left = 576;
				top = 448;
				right = 832;
				bottom = 480;
			};
		},
		{
			name = "мортар00";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = INVERTED;
						condition = "struct ConditionUnitClassIsGoingToBeAttacked" {
							state_ = false;
							internalColor_ = 0;
							victimUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_STRUCTURE_CORE | UNIT_CLASS_BUILDER | UNIT_CLASS_BLOCK | UNIT_CLASS_IGNORE;
							agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_IGNORE;
						};
					}
				};
			};
			action = "struct ActionSquadAttack" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_1;
				attackByType = UNIT_ATTRIBUTE_MORTAR;
				unitsToAttack = {
					1;
					UNIT_ATTRIBUTE_CORE
				};
				unitClassToAttack = UNIT_CLASS_STRUCTURE | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_FRAME | UNIT_CLASS_IGNORE;
				offensive = true;
				unitsNumber = 5;
				soldiers = 0;
				officers = 0;
				technics = 0;
				attackTime = 100;
				remutateCounter = 1;
				holdProduction = false;
				squadFollowDistance = 0.;
				squadToFollowBy = CHOOSE_SQUAD_2;
				ignoreLastTarget = false;
				returnToBase = false;
				interruptable = true;
				attackTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 2;
			cellNumberY = 9;
			left_ = 576;
			top_ = 576;
			right_ = 832;
			bottom_ = 608;
			cellIndex = {
				x = 2;
				y = 9;
			};
			boundingRect = {
				left = 576;
				top = 576;
				right = 832;
				bottom = 608;
			};
		}
	};
	left_ = 60;
	top_ = 46;
	right_ = 1390;
	bottom_ = 950;
	boundingRect = {
		left = 60;
		top = 46;
		right = 1390;
		bottom = 950;
	};
	viewRect = {
		left = 60;
		top = 46;
		right = 1390;
		bottom = 950;
	};
};
