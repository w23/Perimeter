TriggerChain = {
	name = "";
	triggers = {
		27;
		{
			name = "START";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = AND;
							conditions = {
								0;
							};
						};
					}
				};
			};
			action = 0;
			outcomingLinks = {
				5;
				{
					triggerName = "22222";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 10;
					parentOffsetY_ = 16;
					childOffsetX_ = 10;
					childOffsetY_ = -16;
					parentOffset = {
						x = 10;
						y = 16;
					};
					childOffset = {
						x = 10;
						y = -16;
					};
				},
				{
					triggerName = "инсталировать фрейм";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 122;
					parentOffsetY_ = 16;
					childOffsetX_ = -128;
					childOffsetY_ = -13;
					parentOffset = {
						x = 122;
						y = 16;
					};
					childOffset = {
						x = -128;
						y = -13;
					};
				},
				{
					triggerName = "111";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -128;
					parentOffsetY_ = -6;
					childOffsetX_ = 128;
					childOffsetY_ = -5;
					parentOffset = {
						x = -128;
						y = -6;
					};
					childOffset = {
						x = 128;
						y = -5;
					};
				},
				{
					triggerName = "легкий0";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -128;
					parentOffsetY_ = -3;
					childOffsetX_ = 128;
					childOffsetY_ = -1;
					parentOffset = {
						x = -128;
						y = -3;
					};
					childOffset = {
						x = 128;
						y = -1;
					};
				},
				{
					triggerName = "нормал";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -128;
					parentOffsetY_ = 0;
					childOffsetX_ = 128;
					childOffsetY_ = 0;
					parentOffset = {
						x = -128;
						y = 0;
					};
					childOffset = {
						x = 128;
						y = 0;
					};
				}
			};
			state_ = CHECKING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 0;
			cellNumberY = 0;
			left_ = 0;
			top_ = 0;
			right_ = 256;
			bottom_ = 32;
			cellIndex = {
				x = 0;
				y = 0;
			};
			boundingRect = {
				left = 0;
				top = 0;
				right = 256;
				bottom = 32;
			};
		},
		{
			name = "телепортация";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_CORRIDOR_OMEGA;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionFrameState" {
							state_ = false;
							internalColor_ = 0;
							state = AI_FRAME_STATE_TELEPORTATION_STARTED;
							playerType = AI_PLAYER_TYPE_ENEMY;
							spiralChargingPercent = 100;
						};
					}
				};
			};
			action = "struct ActionTeleportationOut" {
				internalColor_ = 0;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 16722122;
			cellNumberX = 0;
			cellNumberY = 3;
			left_ = 0;
			top_ = 192;
			right_ = 256;
			bottom_ = 224;
			cellIndex = {
				x = 0;
				y = 3;
			};
			boundingRect = {
				left = 0;
				top = 192;
				right = 256;
				bottom = 224;
			};
		},
		{
			name = "инсталировать фрейм";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = AND;
							conditions = {
								2;
								{
									type = INVERTED;
									condition = "struct ConditionFrameState" {
										state_ = false;
										internalColor_ = 0;
										state = AI_FRAME_STATE_TELEPORTATION_STARTED;
										playerType = AI_PLAYER_TYPE_ME;
										spiralChargingPercent = 100;
									};
								},
								{
									type = INVERTED;
									condition = "struct ConditionFrameState" {
										state_ = false;
										internalColor_ = 0;
										state = AI_FRAME_STATE_TELEPORTATION_ENABLED;
										playerType = AI_PLAYER_TYPE_ME;
										spiralChargingPercent = 100;
									};
								}
							};
						};
					}
				};
			};
			action = "struct ActionInstallFrame" {
				internalColor_ = 0;
				onlyIfAi = true;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "уровень сложности";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 32;
					parentOffsetY_ = -16;
					childOffsetX_ = 32;
					childOffsetY_ = 16;
					parentOffset = {
						x = 32;
						y = -16;
					};
					childOffset = {
						x = 32;
						y = 16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 8454016;
			cellNumberX = 1;
			cellNumberY = 1;
			left_ = 288;
			top_ = 64;
			right_ = 544;
			bottom_ = 96;
			cellIndex = {
				x = 1;
				y = 1;
			};
			boundingRect = {
				left = 288;
				top = 64;
				right = 544;
				bottom = 96;
			};
		},
		{
			name = "Camera";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = AND;
							conditions = {
								0;
							};
						};
					}
				};
			};
			action = 0;
			outcomingLinks = {
				0;
			};
			state_ = CHECKING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 0;
			cellNumberY = -1;
			left_ = 0;
			top_ = -64;
			right_ = 256;
			bottom_ = -32;
			cellIndex = {
				x = 0;
				y = -1;
			};
			boundingRect = {
				left = 0;
				top = -64;
				right = 256;
				bottom = -32;
			};
		},
		{
			name = "заказать базовых1";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = OR;
							conditions = {
								3;
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = true;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_BOMB_STATION1;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ME;
										constructedAndConstructing = true;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = false;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_BOMB_STATION2;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ME;
										constructedAndConstructing = true;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = false;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_BOMB_STATION3;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ME;
										constructedAndConstructing = true;
									};
								}
							};
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelUpperReserve" {
							state_ = true;
							internalColor_ = 0;
							energyReserve = 500.;
						};
					}
				};
			};
			action = "struct ActionSquadOrderUnits" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_1;
				soldiers = 40;
				officers = 0;
				technics = 160;
				energyReserve = 100.;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = -1;
			cellNumberY = 1;
			left_ = -288;
			top_ = 64;
			right_ = -32;
			bottom_ = 96;
			cellIndex = {
				x = -1;
				y = 1;
			};
			boundingRect = {
				left = -288;
				top = 64;
				right = -32;
				bottom = 96;
			};
		},
		{
			name = "мортары";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = true;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_WARGON;
						};
					}
				};
			};
			action = "struct ActionSquadAttack" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_1;
				attackByType = UNIT_ATTRIBUTE_MORTAR;
				unitsToAttack = {
					4;
					UNIT_ATTRIBUTE_LASER_CANNON,
					UNIT_ATTRIBUTE_GUN_HOWITZER,
					UNIT_ATTRIBUTE_CORE,
					UNIT_ATTRIBUTE_ROCKET_LAUNCHER
				};
				unitClassToAttack = UNIT_CLASS_FRAME | UNIT_CLASS_IGNORE;
				offensive = true;
				unitsNumber = 10;
				soldiers = 0;
				officers = 0;
				technics = 0;
				attackTime = 30;
				remutateCounter = 1;
				holdProduction = false;
				squadFollowDistance = 0.;
				squadToFollowBy = CHOOSE_SQUAD_2;
				ignoreLastTarget = false;
				returnToBase = true;
				interruptable = false;
				attackTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = -1;
			cellNumberY = 2;
			left_ = -288;
			top_ = 128;
			right_ = -32;
			bottom_ = 160;
			cellIndex = {
				x = -1;
				y = 2;
			};
			boundingRect = {
				left = -288;
				top = 128;
				right = -32;
				bottom = 160;
			};
		},
		{
			name = "варгоны";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = AND;
							conditions = {
								1;
								{
									type = INVERTED;
									condition = "struct ConditionUnitClassIsGoingToBeAttacked" {
										state_ = false;
										internalColor_ = 0;
										victimUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_STRUCTURE | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_STRUCTURE_CORE | UNIT_CLASS_FRAME | UNIT_CLASS_IGNORE;
										agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_IGNORE;
									};
								}
							};
						};
					}
				};
			};
			action = "struct ActionSquadAttack" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_1;
				attackByType = UNIT_ATTRIBUTE_WARGON;
				unitsToAttack = {
					4;
					UNIT_ATTRIBUTE_GUN_HOWITZER,
					UNIT_ATTRIBUTE_CORE,
					UNIT_ATTRIBUTE_ROCKET_LAUNCHER,
					UNIT_ATTRIBUTE_LASER_CANNON
				};
				unitClassToAttack = UNIT_CLASS_FRAME | UNIT_CLASS_IGNORE;
				offensive = true;
				unitsNumber = 5;
				soldiers = 0;
				officers = 0;
				technics = 0;
				attackTime = 30;
				remutateCounter = 1;
				holdProduction = false;
				squadFollowDistance = 0.;
				squadToFollowBy = CHOOSE_SQUAD_2;
				ignoreLastTarget = false;
				returnToBase = true;
				interruptable = false;
				attackTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = -1;
			cellNumberY = 3;
			left_ = -288;
			top_ = 192;
			right_ = -32;
			bottom_ = 224;
			cellIndex = {
				x = -1;
				y = 3;
			};
			boundingRect = {
				left = -288;
				top = 192;
				right = -32;
				bottom = 224;
			};
		},
		{
			name = "заказать базовых 2";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_TECHNIC_PLANT;
							counter = 2;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = true;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_EXODUS_STATION1;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = true;
						};
					}
				};
			};
			action = "struct ActionSquadOrderUnits" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_2;
				soldiers = 0;
				officers = 0;
				technics = 160;
				energyReserve = 100.;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = -1;
			cellNumberY = 4;
			left_ = -288;
			top_ = 256;
			right_ = -32;
			bottom_ = 288;
			cellIndex = {
				x = -1;
				y = 4;
			};
			boundingRect = {
				left = -288;
				top = 256;
				right = -32;
				bottom = 288;
			};
		},
		{
			name = "скамсплитерами";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionSquadAttack" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_2;
				attackByType = UNIT_ATTRIBUTE_SCUM_SPLITTER;
				unitsToAttack = {
					0;
				};
				unitClassToAttack = UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_STRUCTURE_SPECIAL | UNIT_CLASS_STRUCTURE_CORE | UNIT_CLASS_FRAME | UNIT_CLASS_IGNORE;
				offensive = true;
				unitsNumber = 3;
				soldiers = 0;
				officers = 0;
				technics = 0;
				attackTime = 30;
				remutateCounter = 1;
				holdProduction = false;
				squadFollowDistance = 0.;
				squadToFollowBy = CHOOSE_SQUAD_2;
				ignoreLastTarget = false;
				returnToBase = true;
				interruptable = false;
				attackTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = -1;
			cellNumberY = 5;
			left_ = -288;
			top_ = 320;
			right_ = -32;
			bottom_ = 352;
			cellIndex = {
				x = -1;
				y = 5;
			};
			boundingRect = {
				left = -288;
				top = 320;
				right = -32;
				bottom = 352;
			};
		},
		{
			name = "22222";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct Action" {
				internalColor_ = 0;
			};
			outcomingLinks = {
				2;
				{
					triggerName = "телепортация";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 7;
					parentOffsetY_ = 16;
					childOffsetX_ = 5;
					childOffsetY_ = -16;
					parentOffset = {
						x = 7;
						y = 16;
					};
					childOffset = {
						x = 5;
						y = -16;
					};
				},
				{
					triggerName = "333";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = 12;
					childOffsetX_ = -128;
					childOffsetY_ = -16;
					parentOffset = {
						x = 128;
						y = 12;
					};
					childOffset = {
						x = -128;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 0;
			cellNumberY = 2;
			left_ = 0;
			top_ = 128;
			right_ = 256;
			bottom_ = 160;
			cellIndex = {
				x = 0;
				y = 2;
			};
			boundingRect = {
				left = 0;
				top = 128;
				right = 256;
				bottom = 160;
			};
		},
		{
			name = "333";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionFrameState" {
							state_ = false;
							internalColor_ = 0;
							state = AI_FRAME_STATE_TELEPORTATION_STARTED;
							playerType = AI_PLAYER_TYPE_ENEMY;
							spiralChargingPercent = 100;
						};
					}
				};
			};
			action = "struct Action" {
				internalColor_ = 0;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 1;
			cellNumberY = 3;
			left_ = 288;
			top_ = 192;
			right_ = 544;
			bottom_ = 224;
			cellIndex = {
				x = 1;
				y = 3;
			};
			boundingRect = {
				left = 288;
				top = 192;
				right = 544;
				bottom = 224;
			};
		},
		{
			name = "р-проекторами";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionUnitClassIsGoingToBeAttacked" {
							state_ = false;
							internalColor_ = 0;
							victimUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_STRUCTURE | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_STRUCTURE_CORE | UNIT_CLASS_FRAME | UNIT_CLASS_IGNORE;
							agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_IGNORE;
						};
					}
				};
			};
			action = "struct ActionSquadAttack" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_1;
				attackByType = UNIT_ATTRIBUTE_R_PROJECTOR;
				unitsToAttack = {
					0;
				};
				unitClassToAttack = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_IGNORE;
				offensive = true;
				unitsNumber = 1;
				soldiers = 0;
				officers = 0;
				technics = 0;
				attackTime = 10;
				remutateCounter = 1;
				holdProduction = false;
				squadFollowDistance = 0.;
				squadToFollowBy = CHOOSE_SQUAD_2;
				ignoreLastTarget = false;
				returnToBase = true;
				interruptable = false;
				attackTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = -1;
			cellNumberY = 6;
			left_ = -288;
			top_ = 384;
			right_ = -32;
			bottom_ = 416;
			cellIndex = {
				x = -1;
				y = 6;
			};
			boundingRect = {
				left = -288;
				top = 384;
				right = -32;
				bottom = 416;
			};
		},
		{
			name = "UserCamera";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = 0;
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = -1;
			cellNumberY = 7;
			left_ = -288;
			top_ = 448;
			right_ = -32;
			bottom_ = 480;
			cellIndex = {
				x = -1;
				y = 7;
			};
			boundingRect = {
				left = -288;
				top = 448;
				right = -32;
				bottom = 480;
			};
		},
		{
			name = "уровень сложности";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					4;
					{
						type = INVERTED;
						condition = "struct ConditionFrameState" {
							state_ = true;
							internalColor_ = 0;
							state = AI_FRAME_STATE_INSTALLED;
							playerType = AI_PLAYER_TYPE_ME;
							spiralChargingPercent = 0;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionFrameState" {
							state_ = false;
							internalColor_ = 0;
							state = AI_FRAME_STATE_TELEPORTATION_ENABLED;
							playerType = AI_PLAYER_TYPE_ME;
							spiralChargingPercent = 100;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionFrameState" {
							state_ = false;
							internalColor_ = 0;
							state = AI_FRAME_STATE_TELEPORTATION_STARTED;
							playerType = AI_PLAYER_TYPE_ME;
							spiralChargingPercent = 100;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionFrameState" {
							state_ = true;
							internalColor_ = 0;
							state = AI_FRAME_STATE_INSTALLING;
							playerType = AI_PLAYER_TYPE_ME;
							spiralChargingPercent = 100;
						};
					}
				};
			};
			action = "struct ActionDelay" {
				internalColor_ = 0;
				delay = 120;
				showTimer = false;
				scaleByDifficulty = true;
				timer = {
					time = 0;
				};
			};
			outcomingLinks = {
				1;
				{
					triggerName = "инсталировать фрейм";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -6;
					parentOffsetY_ = 16;
					childOffsetX_ = -6;
					childOffsetY_ = -16;
					parentOffset = {
						x = -6;
						y = 16;
					};
					childOffset = {
						x = -6;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 1;
			cellNumberY = 0;
			left_ = 288;
			top_ = 0;
			right_ = 544;
			bottom_ = 32;
			cellIndex = {
				x = 1;
				y = 0;
			};
			boundingRect = {
				left = 288;
				top = 0;
				right = 544;
				bottom = 32;
			};
		},
		{
			name = "111";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionDifficultyLevel" {
							state_ = true;
							internalColor_ = 0;
							difficulty = DIFFICULTY_HARD;
						};
					}
				};
			};
			action = "struct Action" {
				internalColor_ = 0;
			};
			outcomingLinks = {
				6;
				{
					triggerName = "мортары";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffsetX_ = 81;
					parentOffsetY_ = 16;
					childOffsetX_ = 76;
					childOffsetY_ = -16;
					parentOffset = {
						x = 81;
						y = 16;
					};
					childOffset = {
						x = 76;
						y = -16;
					};
				},
				{
					triggerName = "варгоны";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffsetX_ = 100;
					parentOffsetY_ = 16;
					childOffsetX_ = 92;
					childOffsetY_ = -16;
					parentOffset = {
						x = 100;
						y = 16;
					};
					childOffset = {
						x = 92;
						y = -16;
					};
				},
				{
					triggerName = "скамсплитерами";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffsetX_ = 119;
					parentOffsetY_ = 16;
					childOffsetX_ = 118;
					childOffsetY_ = -16;
					parentOffset = {
						x = 119;
						y = 16;
					};
					childOffset = {
						x = 118;
						y = -16;
					};
				},
				{
					triggerName = "р-проекторами";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffsetX_ = 116;
					parentOffsetY_ = 16;
					childOffsetX_ = 115;
					childOffsetY_ = -16;
					parentOffset = {
						x = 116;
						y = 16;
					};
					childOffset = {
						x = 115;
						y = -16;
					};
				},
				{
					triggerName = "заказать базовых1";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffsetX_ = 65;
					parentOffsetY_ = 16;
					childOffsetX_ = 67;
					childOffsetY_ = -16;
					parentOffset = {
						x = 65;
						y = 16;
					};
					childOffset = {
						x = 67;
						y = -16;
					};
				},
				{
					triggerName = "заказать базовых 2";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffsetX_ = 52;
					parentOffsetY_ = 16;
					childOffsetX_ = 60;
					childOffsetY_ = -16;
					parentOffset = {
						x = 52;
						y = 16;
					};
					childOffset = {
						x = 60;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = -1;
			cellNumberY = 0;
			left_ = -288;
			top_ = 0;
			right_ = -32;
			bottom_ = 32;
			cellIndex = {
				x = -1;
				y = 0;
			};
			boundingRect = {
				left = -288;
				top = 0;
				right = -32;
				bottom = 32;
			};
		},
		{
			name = "мортары0";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = true;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_WARGON;
						};
					}
				};
			};
			action = "struct ActionSquadAttack" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_1;
				attackByType = UNIT_ATTRIBUTE_MORTAR;
				unitsToAttack = {
					4;
					UNIT_ATTRIBUTE_LASER_CANNON,
					UNIT_ATTRIBUTE_GUN_HOWITZER,
					UNIT_ATTRIBUTE_CORE,
					UNIT_ATTRIBUTE_ROCKET_LAUNCHER
				};
				unitClassToAttack = UNIT_CLASS_FRAME | UNIT_CLASS_IGNORE;
				offensive = true;
				unitsNumber = 6;
				soldiers = 0;
				officers = 0;
				technics = 0;
				attackTime = 30;
				remutateCounter = 1;
				holdProduction = false;
				squadFollowDistance = 0.;
				squadToFollowBy = CHOOSE_SQUAD_2;
				ignoreLastTarget = false;
				returnToBase = true;
				interruptable = false;
				attackTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = -2;
			cellNumberY = 2;
			left_ = -576;
			top_ = 128;
			right_ = -320;
			bottom_ = 160;
			cellIndex = {
				x = -2;
				y = 2;
			};
			boundingRect = {
				left = -576;
				top = 128;
				right = -320;
				bottom = 160;
			};
		},
		{
			name = "варгоны0";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = AND;
							conditions = {
								1;
								{
									type = INVERTED;
									condition = "struct ConditionUnitClassIsGoingToBeAttacked" {
										state_ = false;
										internalColor_ = 0;
										victimUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_STRUCTURE | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_STRUCTURE_CORE | UNIT_CLASS_FRAME | UNIT_CLASS_IGNORE;
										agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_IGNORE;
									};
								}
							};
						};
					}
				};
			};
			action = "struct ActionSquadAttack" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_1;
				attackByType = UNIT_ATTRIBUTE_WARGON;
				unitsToAttack = {
					4;
					UNIT_ATTRIBUTE_GUN_HOWITZER,
					UNIT_ATTRIBUTE_CORE,
					UNIT_ATTRIBUTE_ROCKET_LAUNCHER,
					UNIT_ATTRIBUTE_LASER_CANNON
				};
				unitClassToAttack = UNIT_CLASS_FRAME | UNIT_CLASS_IGNORE;
				offensive = true;
				unitsNumber = 3;
				soldiers = 0;
				officers = 0;
				technics = 0;
				attackTime = 30;
				remutateCounter = 1;
				holdProduction = false;
				squadFollowDistance = 0.;
				squadToFollowBy = CHOOSE_SQUAD_2;
				ignoreLastTarget = false;
				returnToBase = true;
				interruptable = false;
				attackTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = -2;
			cellNumberY = 3;
			left_ = -576;
			top_ = 192;
			right_ = -320;
			bottom_ = 224;
			cellIndex = {
				x = -2;
				y = 3;
			};
			boundingRect = {
				left = -576;
				top = 192;
				right = -320;
				bottom = 224;
			};
		},
		{
			name = "скамсплитерами0";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionSquadAttack" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_2;
				attackByType = UNIT_ATTRIBUTE_SCUM_SPLITTER;
				unitsToAttack = {
					0;
				};
				unitClassToAttack = UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_STRUCTURE_SPECIAL | UNIT_CLASS_STRUCTURE_CORE | UNIT_CLASS_FRAME | UNIT_CLASS_IGNORE;
				offensive = true;
				unitsNumber = 2;
				soldiers = 0;
				officers = 0;
				technics = 0;
				attackTime = 30;
				remutateCounter = 1;
				holdProduction = false;
				squadFollowDistance = 0.;
				squadToFollowBy = CHOOSE_SQUAD_2;
				ignoreLastTarget = false;
				returnToBase = true;
				interruptable = false;
				attackTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = -2;
			cellNumberY = 5;
			left_ = -576;
			top_ = 320;
			right_ = -320;
			bottom_ = 352;
			cellIndex = {
				x = -2;
				y = 5;
			};
			boundingRect = {
				left = -576;
				top = 320;
				right = -320;
				bottom = 352;
			};
		},
		{
			name = "заказать базовых 20";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_TECHNIC_PLANT;
							counter = 2;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = true;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_EXODUS_STATION1;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = true;
						};
					}
				};
			};
			action = "struct ActionSquadOrderUnits" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_2;
				soldiers = 0;
				officers = 0;
				technics = 24;
				energyReserve = 100.;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = -2;
			cellNumberY = 4;
			left_ = -576;
			top_ = 256;
			right_ = -320;
			bottom_ = 288;
			cellIndex = {
				x = -2;
				y = 4;
			};
			boundingRect = {
				left = -576;
				top = 256;
				right = -320;
				bottom = 288;
			};
		},
		{
			name = "заказать базовых10";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = OR;
							conditions = {
								3;
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = true;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_BOMB_STATION1;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ME;
										constructedAndConstructing = true;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = false;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_BOMB_STATION2;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ME;
										constructedAndConstructing = true;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = false;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_BOMB_STATION3;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ME;
										constructedAndConstructing = true;
									};
								}
							};
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelUpperReserve" {
							state_ = true;
							internalColor_ = 0;
							energyReserve = 500.;
						};
					}
				};
			};
			action = "struct ActionSquadOrderUnits" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_1;
				soldiers = 6;
				officers = 0;
				technics = 24;
				energyReserve = 100.;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = -2;
			cellNumberY = 1;
			left_ = -576;
			top_ = 64;
			right_ = -320;
			bottom_ = 96;
			cellIndex = {
				x = -2;
				y = 1;
			};
			boundingRect = {
				left = -576;
				top = 64;
				right = -320;
				bottom = 96;
			};
		},
		{
			name = "заказать базовых100";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = OR;
							conditions = {
								3;
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = true;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_BOMB_STATION1;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ME;
										constructedAndConstructing = true;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = false;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_BOMB_STATION2;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ME;
										constructedAndConstructing = true;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = false;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_BOMB_STATION3;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ME;
										constructedAndConstructing = true;
									};
								}
							};
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelUpperReserve" {
							state_ = true;
							internalColor_ = 0;
							energyReserve = 500.;
						};
					}
				};
			};
			action = "struct ActionSquadOrderUnits" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_1;
				soldiers = 4;
				officers = 0;
				technics = 16;
				energyReserve = 100.;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = -3;
			cellNumberY = 1;
			left_ = -864;
			top_ = 64;
			right_ = -608;
			bottom_ = 96;
			cellIndex = {
				x = -3;
				y = 1;
			};
			boundingRect = {
				left = -864;
				top = 64;
				right = -608;
				bottom = 96;
			};
		},
		{
			name = "мортары00";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = true;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_WARGON;
						};
					}
				};
			};
			action = "struct ActionSquadAttack" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_1;
				attackByType = UNIT_ATTRIBUTE_MORTAR;
				unitsToAttack = {
					4;
					UNIT_ATTRIBUTE_LASER_CANNON,
					UNIT_ATTRIBUTE_GUN_HOWITZER,
					UNIT_ATTRIBUTE_CORE,
					UNIT_ATTRIBUTE_ROCKET_LAUNCHER
				};
				unitClassToAttack = UNIT_CLASS_FRAME | UNIT_CLASS_IGNORE;
				offensive = true;
				unitsNumber = 4;
				soldiers = 0;
				officers = 0;
				technics = 0;
				attackTime = 30;
				remutateCounter = 1;
				holdProduction = false;
				squadFollowDistance = 0.;
				squadToFollowBy = CHOOSE_SQUAD_2;
				ignoreLastTarget = false;
				returnToBase = true;
				interruptable = false;
				attackTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = -3;
			cellNumberY = 2;
			left_ = -864;
			top_ = 128;
			right_ = -608;
			bottom_ = 160;
			cellIndex = {
				x = -3;
				y = 2;
			};
			boundingRect = {
				left = -864;
				top = 128;
				right = -608;
				bottom = 160;
			};
		},
		{
			name = "варгоны00";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = AND;
							conditions = {
								1;
								{
									type = INVERTED;
									condition = "struct ConditionUnitClassIsGoingToBeAttacked" {
										state_ = false;
										internalColor_ = 0;
										victimUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_STRUCTURE | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_STRUCTURE_CORE | UNIT_CLASS_FRAME | UNIT_CLASS_IGNORE;
										agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_IGNORE;
									};
								}
							};
						};
					}
				};
			};
			action = "struct ActionSquadAttack" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_1;
				attackByType = UNIT_ATTRIBUTE_WARGON;
				unitsToAttack = {
					4;
					UNIT_ATTRIBUTE_GUN_HOWITZER,
					UNIT_ATTRIBUTE_CORE,
					UNIT_ATTRIBUTE_ROCKET_LAUNCHER,
					UNIT_ATTRIBUTE_LASER_CANNON
				};
				unitClassToAttack = UNIT_CLASS_FRAME | UNIT_CLASS_IGNORE;
				offensive = true;
				unitsNumber = 2;
				soldiers = 0;
				officers = 0;
				technics = 0;
				attackTime = 30;
				remutateCounter = 1;
				holdProduction = false;
				squadFollowDistance = 0.;
				squadToFollowBy = CHOOSE_SQUAD_2;
				ignoreLastTarget = false;
				returnToBase = true;
				interruptable = false;
				attackTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = -3;
			cellNumberY = 3;
			left_ = -864;
			top_ = 192;
			right_ = -608;
			bottom_ = 224;
			cellIndex = {
				x = -3;
				y = 3;
			};
			boundingRect = {
				left = -864;
				top = 192;
				right = -608;
				bottom = 224;
			};
		},
		{
			name = "заказать базовых 200";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_TECHNIC_PLANT;
							counter = 2;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = true;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_EXODUS_STATION1;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = true;
						};
					}
				};
			};
			action = "struct ActionSquadOrderUnits" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_2;
				soldiers = 0;
				officers = 0;
				technics = 12;
				energyReserve = 100.;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = -3;
			cellNumberY = 4;
			left_ = -864;
			top_ = 256;
			right_ = -608;
			bottom_ = 288;
			cellIndex = {
				x = -3;
				y = 4;
			};
			boundingRect = {
				left = -864;
				top = 256;
				right = -608;
				bottom = 288;
			};
		},
		{
			name = "скамсплитерами00";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionSquadAttack" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_2;
				attackByType = UNIT_ATTRIBUTE_SCUM_SPLITTER;
				unitsToAttack = {
					0;
				};
				unitClassToAttack = UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_STRUCTURE_SPECIAL | UNIT_CLASS_STRUCTURE_CORE | UNIT_CLASS_FRAME | UNIT_CLASS_IGNORE;
				offensive = true;
				unitsNumber = 1;
				soldiers = 0;
				officers = 0;
				technics = 0;
				attackTime = 30;
				remutateCounter = 1;
				holdProduction = false;
				squadFollowDistance = 0.;
				squadToFollowBy = CHOOSE_SQUAD_2;
				ignoreLastTarget = false;
				returnToBase = true;
				interruptable = false;
				attackTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = -3;
			cellNumberY = 5;
			left_ = -864;
			top_ = 320;
			right_ = -608;
			bottom_ = 352;
			cellIndex = {
				x = -3;
				y = 5;
			};
			boundingRect = {
				left = -864;
				top = 320;
				right = -608;
				bottom = 352;
			};
		},
		{
			name = "легкий0";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionDifficultyLevel" {
							state_ = false;
							internalColor_ = 0;
							difficulty = DIFFICULTY_EASY;
						};
					}
				};
			};
			action = "struct ActionDelay" {
				internalColor_ = 0;
				delay = 300;
				showTimer = false;
				scaleByDifficulty = false;
				timer = {
					time = 0;
				};
			};
			outcomingLinks = {
				5;
				{
					triggerName = "заказать базовых100";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffsetX_ = 77;
					parentOffsetY_ = 16;
					childOffsetX_ = 81;
					childOffsetY_ = -16;
					parentOffset = {
						x = 77;
						y = 16;
					};
					childOffset = {
						x = 81;
						y = -16;
					};
				},
				{
					triggerName = "мортары00";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffsetX_ = 64;
					parentOffsetY_ = 16;
					childOffsetX_ = 66;
					childOffsetY_ = -16;
					parentOffset = {
						x = 64;
						y = 16;
					};
					childOffset = {
						x = 66;
						y = -16;
					};
				},
				{
					triggerName = "варгоны00";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffsetX_ = 47;
					parentOffsetY_ = 16;
					childOffsetX_ = 52;
					childOffsetY_ = -16;
					parentOffset = {
						x = 47;
						y = 16;
					};
					childOffset = {
						x = 52;
						y = -16;
					};
				},
				{
					triggerName = "заказать базовых 200";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffsetX_ = 37;
					parentOffsetY_ = 16;
					childOffsetX_ = 37;
					childOffsetY_ = -16;
					parentOffset = {
						x = 37;
						y = 16;
					};
					childOffset = {
						x = 37;
						y = -16;
					};
				},
				{
					triggerName = "скамсплитерами00";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffsetX_ = 22;
					parentOffsetY_ = 16;
					childOffsetX_ = 19;
					childOffsetY_ = -16;
					parentOffset = {
						x = 22;
						y = 16;
					};
					childOffset = {
						x = 19;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = -3;
			cellNumberY = -1;
			left_ = -864;
			top_ = -64;
			right_ = -608;
			bottom_ = -32;
			cellIndex = {
				x = -3;
				y = -1;
			};
			boundingRect = {
				left = -864;
				top = -64;
				right = -608;
				bottom = -32;
			};
		},
		{
			name = "нормал";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionDifficultyLevel" {
							state_ = false;
							internalColor_ = 0;
							difficulty = DIFFICULTY_NORMAL;
						};
					}
				};
			};
			action = "struct ActionDelay" {
				internalColor_ = 0;
				delay = 210;
				showTimer = false;
				scaleByDifficulty = false;
				timer = {
					time = 0;
				};
			};
			outcomingLinks = {
				5;
				{
					triggerName = "заказать базовых10";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffsetX_ = 49;
					parentOffsetY_ = 16;
					childOffsetX_ = 47;
					childOffsetY_ = -16;
					parentOffset = {
						x = 49;
						y = 16;
					};
					childOffset = {
						x = 47;
						y = -16;
					};
				},
				{
					triggerName = "мортары0";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffsetX_ = 25;
					parentOffsetY_ = 16;
					childOffsetX_ = 25;
					childOffsetY_ = -16;
					parentOffset = {
						x = 25;
						y = 16;
					};
					childOffset = {
						x = 25;
						y = -16;
					};
				},
				{
					triggerName = "варгоны0";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffsetX_ = 14;
					parentOffsetY_ = 16;
					childOffsetX_ = 16;
					childOffsetY_ = -16;
					parentOffset = {
						x = 14;
						y = 16;
					};
					childOffset = {
						x = 16;
						y = -16;
					};
				},
				{
					triggerName = "заказать базовых 20";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffsetX_ = 0;
					parentOffsetY_ = 16;
					childOffsetX_ = 0;
					childOffsetY_ = -16;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				},
				{
					triggerName = "скамсплитерами0";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffsetX_ = -9;
					parentOffsetY_ = 16;
					childOffsetX_ = -16;
					childOffsetY_ = -16;
					parentOffset = {
						x = -9;
						y = 16;
					};
					childOffset = {
						x = -16;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = -2;
			cellNumberY = 0;
			left_ = -576;
			top_ = 0;
			right_ = -320;
			bottom_ = 32;
			cellIndex = {
				x = -2;
				y = 0;
			};
			boundingRect = {
				left = -576;
				top = 0;
				right = -320;
				bottom = 32;
			};
		}
	};
	left_ = -388;
	top_ = -182;
	right_ = 675;
	bottom_ = 759;
	boundingRect = {
		left = -388;
		top = -182;
		right = 675;
		bottom = 759;
	};
	viewRect = {
		left = -388;
		top = -182;
		right = 675;
		bottom = 759;
	};
};
