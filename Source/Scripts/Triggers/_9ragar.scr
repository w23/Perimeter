TriggerChain = {
	name = "";
	triggers = {
		26;
		{
			name = "START";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = AND;
							conditions = {
								0;
							};
						};
					}
				};
			};
			action = 0;
			outcomingLinks = {
				3;
				{
					triggerName = "старт";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 21;
					parentOffsetY_ = -16;
					childOffsetX_ = 21;
					childOffsetY_ = 16;
					parentOffset = {
						x = 21;
						y = -16;
					};
					childOffset = {
						x = 21;
						y = 16;
					};
				},
				{
					triggerName = "терминал";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 113;
					parentOffsetY_ = 16;
					childOffsetX_ = -111;
					childOffsetY_ = -16;
					parentOffset = {
						x = 113;
						y = 16;
					};
					childOffset = {
						x = -111;
						y = -16;
					};
				},
				{
					triggerName = "11";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = 0;
					childOffsetX_ = -128;
					childOffsetY_ = -11;
					parentOffset = {
						x = 128;
						y = 0;
					};
					childOffset = {
						x = -128;
						y = -11;
					};
				}
			};
			state_ = CHECKING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 0;
			cellNumberY = 0;
			left_ = 0;
			top_ = 0;
			right_ = 256;
			bottom_ = 32;
			cellIndex = {
				x = 0;
				y = 0;
			};
			boundingRect = {
				left = 0;
				top = 0;
				right = 256;
				bottom = 32;
			};
		},
		{
			name = "Camera";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = AND;
							conditions = {
								0;
							};
						};
					}
				};
			};
			action = "struct ActionSetCamera" {
				internalColor_ = 0;
				cameraSplineName = "Camera0";
				stepTime = 7.8125e-003;
				cycles = 1057259520;
				smoothTransition = false;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "катсцена";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -82;
					parentOffsetY_ = 16;
					childOffsetX_ = -82;
					childOffsetY_ = -16;
					parentOffset = {
						x = -82;
						y = 16;
					};
					childOffset = {
						x = -82;
						y = -16;
					};
				}
			};
			state_ = CHECKING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 2;
			cellNumberY = 0;
			left_ = 576;
			top_ = 0;
			right_ = 832;
			bottom_ = 32;
			cellIndex = {
				x = 2;
				y = 0;
			};
			boundingRect = {
				left = 576;
				top = 0;
				right = 832;
				bottom = 32;
			};
		},
		{
			name = "победа";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionVictory" {
				internalColor_ = 0;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 0;
			cellNumberY = 6;
			left_ = 0;
			top_ = 384;
			right_ = 256;
			bottom_ = 416;
			cellIndex = {
				x = 0;
				y = 6;
			};
			boundingRect = {
				left = 0;
				top = 384;
				right = 256;
				bottom = 416;
			};
		},
		{
			name = "поражение";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = OR;
				conditions = {
					0;
				};
			};
			action = "struct ActionDefeat" {
				internalColor_ = 0;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 1;
			cellNumberY = 2;
			left_ = 288;
			top_ = 128;
			right_ = 544;
			bottom_ = 160;
			cellIndex = {
				x = 1;
				y = 2;
			};
			boundingRect = {
				left = 288;
				top = 128;
				right = 544;
				bottom = 160;
			};
		},
		{
			name = "ЗАДАНИЕ";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = AND;
							conditions = {
								0;
							};
						};
					}
				};
			};
			action = "struct ActionTask" {
				internalColor_ = 0;
				type = ASSIGNED;
				taskID = "Mission Tasks.Mission 09.Task 1";
				duration = 10;
				syncroBySound = false;
				showTips = true;
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				1;
				{
					triggerName = "пауза";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -1;
					parentOffsetY_ = 16;
					childOffsetX_ = -3;
					childOffsetY_ = -16;
					parentOffset = {
						x = -1;
						y = 16;
					};
					childOffset = {
						x = -3;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 14277119;
			cellNumberX = 1;
			cellNumberY = 4;
			left_ = 288;
			top_ = 256;
			right_ = 544;
			bottom_ = 288;
			cellIndex = {
				x = 1;
				y = 4;
			};
			boundingRect = {
				left = 288;
				top = 256;
				right = 544;
				bottom = 288;
			};
		},
		{
			name = "телепортировать";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionTeleportationOut" {
				internalColor_ = 0;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 0;
			cellNumberY = 2;
			left_ = 0;
			top_ = 128;
			right_ = 256;
			bottom_ = 160;
			cellIndex = {
				x = 0;
				y = 2;
			};
			boundingRect = {
				left = 0;
				top = 128;
				right = 256;
				bottom = 160;
			};
		},
		{
			name = "старт";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct Action" {
				internalColor_ = 0;
			};
			outcomingLinks = {
				9;
				{
					triggerName = "телепортировать";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 42;
					parentOffsetY_ = 16;
					childOffsetX_ = 43;
					childOffsetY_ = -16;
					parentOffset = {
						x = 42;
						y = 16;
					};
					childOffset = {
						x = 43;
						y = -16;
					};
				},
				{
					triggerName = "камера на альфу";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -92;
					parentOffsetY_ = 16;
					childOffsetX_ = 115;
					childOffsetY_ = -16;
					parentOffset = {
						x = -92;
						y = 16;
					};
					childOffset = {
						x = 115;
						y = -16;
					};
				},
				{
					triggerName = "задание1провалено";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 109;
					parentOffsetY_ = 16;
					childOffsetX_ = -106;
					childOffsetY_ = -16;
					parentOffset = {
						x = 109;
						y = 16;
					};
					childOffset = {
						x = -106;
						y = -16;
					};
				},
				{
					triggerName = "выкл. интерфейс";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -22;
					parentOffsetY_ = 16;
					childOffsetX_ = -28;
					childOffsetY_ = -16;
					parentOffset = {
						x = -22;
						y = 16;
					};
					childOffset = {
						x = -28;
						y = -16;
					};
				},
				{
					triggerName = "победа";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 66;
					parentOffsetY_ = 16;
					childOffsetX_ = 67;
					childOffsetY_ = -16;
					parentOffset = {
						x = 66;
						y = 16;
					};
					childOffset = {
						x = 67;
						y = -16;
					};
				},
				{
					triggerName = "выкл. интерфейс0";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = 5;
					childOffsetX_ = -126;
					childOffsetY_ = -16;
					parentOffset = {
						x = 128;
						y = 5;
					};
					childOffset = {
						x = -126;
						y = -16;
					};
				},
				{
					triggerName = "на врага";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 126;
					parentOffsetY_ = -16;
					childOffsetX_ = -115;
					childOffsetY_ = 16;
					parentOffset = {
						x = 126;
						y = -16;
					};
					childOffset = {
						x = -115;
						y = 16;
					};
				},
				{
					triggerName = "на взрыв";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = -7;
					childOffsetX_ = -128;
					childOffsetY_ = 13;
					parentOffset = {
						x = 128;
						y = -7;
					};
					childOffset = {
						x = -128;
						y = 13;
					};
				},
				{
					triggerName = "на коридор";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = -2;
					childOffsetX_ = -128;
					childOffsetY_ = 3;
					parentOffset = {
						x = 128;
						y = -2;
					};
					childOffset = {
						x = -128;
						y = 3;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 0;
			cellNumberY = -1;
			left_ = 0;
			top_ = -64;
			right_ = 256;
			bottom_ = -32;
			cellIndex = {
				x = 0;
				y = -1;
			};
			boundingRect = {
				left = 0;
				top = -64;
				right = 256;
				bottom = -32;
			};
		},
		{
			name = "терминал";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionMessage" {
				internalColor_ = 0;
				messageID = "Mission Tips.Mission 09.Tip 1";
				message = "";
				delay = 0;
				duration = 15;
				syncroBySound = true;
				delayTimer = {
					time = 0;
				};
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				2;
				{
					triggerName = "ЗАДАНИЕ";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -7;
					parentOffsetY_ = 16;
					childOffsetX_ = -5;
					childOffsetY_ = -16;
					parentOffset = {
						x = -7;
						y = 16;
					};
					childOffset = {
						x = -5;
						y = -16;
					};
				},
				{
					triggerName = "сообщение";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffsetX_ = 123;
					parentOffsetY_ = 16;
					childOffsetX_ = -128;
					childOffsetY_ = -11;
					parentOffset = {
						x = 123;
						y = 16;
					};
					childOffset = {
						x = -128;
						y = -11;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 13553407;
			cellNumberX = 1;
			cellNumberY = 3;
			left_ = 288;
			top_ = 192;
			right_ = 544;
			bottom_ = 224;
			cellIndex = {
				x = 1;
				y = 3;
			};
			boundingRect = {
				left = 288;
				top = 192;
				right = 544;
				bottom = 224;
			};
		},
		{
			name = "пауза";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionDelay" {
				internalColor_ = 0;
				delay = 20;
				showTimer = false;
				scaleByDifficulty = false;
				timer = {
					time = 0;
				};
			};
			outcomingLinks = {
				1;
				{
					triggerName = "терминал2";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 2;
					parentOffsetY_ = 16;
					childOffsetX_ = 2;
					childOffsetY_ = -16;
					parentOffset = {
						x = 2;
						y = 16;
					};
					childOffset = {
						x = 2;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 1;
			cellNumberY = 5;
			left_ = 288;
			top_ = 320;
			right_ = 544;
			bottom_ = 352;
			cellIndex = {
				x = 1;
				y = 5;
			};
			boundingRect = {
				left = 288;
				top = 320;
				right = 544;
				bottom = 352;
			};
		},
		{
			name = "терминал2";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					3;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_FRAME;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = true;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_FRAME;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ENEMY;
							constructedAndConstructing = true;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_CORRIDOR_OMEGA;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ENEMY;
							constructedAndConstructing = true;
						};
					}
				};
			};
			action = "struct ActionMessage" {
				internalColor_ = 0;
				messageID = "Mission Tips.Mission 09.Tip 2";
				message = "";
				delay = 0;
				duration = 5;
				syncroBySound = true;
				delayTimer = {
					time = 0;
				};
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				1;
				{
					triggerName = "задание1 выполнено";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -3;
					parentOffsetY_ = 16;
					childOffsetX_ = -4;
					childOffsetY_ = -16;
					parentOffset = {
						x = -3;
						y = 16;
					};
					childOffset = {
						x = -4;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 13553407;
			cellNumberX = 1;
			cellNumberY = 6;
			left_ = 288;
			top_ = 384;
			right_ = 544;
			bottom_ = 416;
			cellIndex = {
				x = 1;
				y = 6;
			};
			boundingRect = {
				left = 288;
				top = 384;
				right = 544;
				bottom = 416;
			};
		},
		{
			name = "задание1 выполнено";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = OR;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionFrameState" {
							state_ = false;
							internalColor_ = 0;
							state = AI_FRAME_STATE_TELEPORTATION_STARTED;
							playerType = AI_PLAYER_TYPE_ME;
							spiralChargingPercent = 100;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionTeleportation" {
							state_ = false;
							internalColor_ = 0;
							teleportationType = TELEPORTATION_TYPE_ALPHA;
							playerType = AI_PLAYER_TYPE_ME;
						};
					}
				};
			};
			action = "struct ActionTask" {
				internalColor_ = 0;
				type = COMPLETED;
				taskID = "Mission Tasks.Mission 09.Task 1";
				duration = 15;
				syncroBySound = false;
				showTips = true;
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				1;
				{
					triggerName = "на ядро";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 8;
					parentOffsetY_ = 16;
					childOffsetX_ = 7;
					childOffsetY_ = -16;
					parentOffset = {
						x = 8;
						y = 16;
					};
					childOffset = {
						x = 7;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 13553407;
			cellNumberX = 1;
			cellNumberY = 8;
			left_ = 288;
			top_ = 512;
			right_ = 544;
			bottom_ = 544;
			cellIndex = {
				x = 1;
				y = 8;
			};
			boundingRect = {
				left = 288;
				top = 512;
				right = 544;
				bottom = 544;
			};
		},
		{
			name = "камера на альфу";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionFrameState" {
							state_ = false;
							internalColor_ = 0;
							state = AI_FRAME_STATE_TELEPORTATION_STARTED;
							playerType = AI_PLAYER_TYPE_ME;
							spiralChargingPercent = 100;
						};
					}
				};
			};
			action = "struct ActionSetCameraAtObject" {
				internalColor_ = 0;
				object = UNIT_ATTRIBUTE_CORRIDOR_ALPHA;
				playerType = AI_PLAYER_TYPE_ME;
				transitionTime = 5;
				setFollow = true;
				turnTime = 0;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12632256;
			cellNumberX = -1;
			cellNumberY = 2;
			left_ = -288;
			top_ = 128;
			right_ = -32;
			bottom_ = 160;
			cellIndex = {
				x = -1;
				y = 2;
			};
			boundingRect = {
				left = -288;
				top = 128;
				right = -32;
				bottom = 160;
			};
		},
		{
			name = "на ядро";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionSetCameraAtObject" {
				internalColor_ = 0;
				object = UNIT_ATTRIBUTE_FRAME;
				playerType = AI_PLAYER_TYPE_ENEMY;
				transitionTime = 0;
				setFollow = false;
				turnTime = 0;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "победа";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -128;
					parentOffsetY_ = -5;
					childOffsetX_ = 112;
					childOffsetY_ = 16;
					parentOffset = {
						x = -128;
						y = -5;
					};
					childOffset = {
						x = 112;
						y = 16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12632256;
			cellNumberX = 1;
			cellNumberY = 9;
			left_ = 288;
			top_ = 576;
			right_ = 544;
			bottom_ = 608;
			cellIndex = {
				x = 1;
				y = 9;
			};
			boundingRect = {
				left = 288;
				top = 576;
				right = 544;
				bottom = 608;
			};
		},
		{
			name = "катсцена";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionSetCamera" {
				internalColor_ = 0;
				cameraSplineName = "катсцена1";
				stepTime = 3.;
				cycles = 1;
				smoothTransition = true;
			};
			outcomingLinks = {
				2;
				{
					triggerName = "вкл. интерфейс";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 15;
					parentOffsetY_ = 16;
					childOffsetX_ = 12;
					childOffsetY_ = -16;
					parentOffset = {
						x = 15;
						y = 16;
					};
					childOffset = {
						x = 12;
						y = -16;
					};
				},
				{
					triggerName = "2";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = 5;
					childOffsetX_ = -128;
					childOffsetY_ = -3;
					parentOffset = {
						x = 128;
						y = 5;
					};
					childOffset = {
						x = -128;
						y = -3;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12632256;
			cellNumberX = 2;
			cellNumberY = 2;
			left_ = 576;
			top_ = 128;
			right_ = 832;
			bottom_ = 160;
			cellIndex = {
				x = 2;
				y = 2;
			};
			boundingRect = {
				left = 576;
				top = 128;
				right = 832;
				bottom = 160;
			};
		},
		{
			name = "UserCamera";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = 0;
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = -1;
			cellNumberY = 4;
			left_ = -288;
			top_ = 256;
			right_ = -32;
			bottom_ = 288;
			cellIndex = {
				x = -1;
				y = 4;
			};
			boundingRect = {
				left = -288;
				top = 256;
				right = -32;
				bottom = 288;
			};
		},
		{
			name = "вкл. интерфейс";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionSetInterface" {
				internalColor_ = 0;
				enableInterface = true;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "ЗАДАНИЕ";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -128;
					parentOffsetY_ = 13;
					childOffsetX_ = 125;
					childOffsetY_ = -16;
					parentOffset = {
						x = -128;
						y = 13;
					};
					childOffset = {
						x = 125;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 2;
			cellNumberY = 3;
			left_ = 576;
			top_ = 192;
			right_ = 832;
			bottom_ = 224;
			cellIndex = {
				x = 2;
				y = 3;
			};
			boundingRect = {
				left = 576;
				top = 192;
				right = 832;
				bottom = 224;
			};
		},
		{
			name = "выкл. интерфейс";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionFrameState" {
							state_ = false;
							internalColor_ = 0;
							state = AI_FRAME_STATE_TELEPORTATION_STARTED;
							playerType = AI_PLAYER_TYPE_ME;
							spiralChargingPercent = 100;
						};
					}
				};
			};
			action = "struct ActionSetInterface" {
				internalColor_ = 0;
				enableInterface = false;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 0;
			cellNumberY = 3;
			left_ = 0;
			top_ = 192;
			right_ = 256;
			bottom_ = 224;
			cellIndex = {
				x = 0;
				y = 3;
			};
			boundingRect = {
				left = 0;
				top = 192;
				right = 256;
				bottom = 224;
			};
		},
		{
			name = "задание1провалено";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = OR;
				conditions = {
					5;
					{
						type = NORMAL;
						condition = "struct ConditionCaptureBuilding" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_CORRIDOR_OMEGA;
							playerType = AI_PLAYER_TYPE_ENEMY;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionCaptureBuilding" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_FRAME;
							playerType = AI_PLAYER_TYPE_ENEMY;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionKillObject" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_FRAME;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionKillObject" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_FRAME;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ENEMY;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionCaptureBuilding" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_FRAME;
							playerType = AI_PLAYER_TYPE_ME;
						};
					}
				};
			};
			action = "struct ActionTask" {
				internalColor_ = 0;
				type = FAILED;
				taskID = "Mission Tasks.Mission 09.Task 1";
				duration = 5;
				syncroBySound = false;
				showTips = true;
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				1;
				{
					triggerName = "поражение";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 5;
					parentOffsetY_ = 16;
					childOffsetX_ = 8;
					childOffsetY_ = -16;
					parentOffset = {
						x = 5;
						y = 16;
					};
					childOffset = {
						x = 8;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12303359;
			cellNumberX = 1;
			cellNumberY = 1;
			left_ = 288;
			top_ = 64;
			right_ = 544;
			bottom_ = 96;
			cellIndex = {
				x = 1;
				y = 1;
			};
			boundingRect = {
				left = 288;
				top = 64;
				right = 544;
				bottom = 96;
			};
		},
		{
			name = "выкл. интерфейс0";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = OR;
				conditions = {
					5;
					{
						type = NORMAL;
						condition = "struct ConditionCaptureBuilding" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_CORRIDOR_OMEGA;
							playerType = AI_PLAYER_TYPE_ENEMY;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionCaptureBuilding" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_FRAME;
							playerType = AI_PLAYER_TYPE_ENEMY;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionKillObject" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_FRAME;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionKillObject" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_FRAME;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ENEMY;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionCaptureBuilding" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_FRAME;
							playerType = AI_PLAYER_TYPE_ME;
						};
					}
				};
			};
			action = "struct ActionSetInterface" {
				internalColor_ = 0;
				enableInterface = false;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 1;
			cellNumberY = 0;
			left_ = 288;
			top_ = 0;
			right_ = 544;
			bottom_ = 32;
			cellIndex = {
				x = 1;
				y = 0;
			};
			boundingRect = {
				left = 288;
				top = 0;
				right = 544;
				bottom = 32;
			};
		},
		{
			name = "на врага";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = OR;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionKillObject" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_FRAME;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ENEMY;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionCaptureBuilding" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_FRAME;
							playerType = AI_PLAYER_TYPE_ME;
						};
					}
				};
			};
			action = "struct ActionSetCameraAtObject" {
				internalColor_ = 0;
				object = UNIT_ATTRIBUTE_FRAME;
				playerType = AI_PLAYER_TYPE_ENEMY;
				transitionTime = 0;
				setFollow = false;
				turnTime = 0;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12632256;
			cellNumberX = 1;
			cellNumberY = -3;
			left_ = 288;
			top_ = -192;
			right_ = 544;
			bottom_ = -160;
			cellIndex = {
				x = 1;
				y = -3;
			};
			boundingRect = {
				left = 288;
				top = -192;
				right = 544;
				bottom = -160;
			};
		},
		{
			name = "на взрыв";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = OR;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionKillObject" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_FRAME;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionCaptureBuilding" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_FRAME;
							playerType = AI_PLAYER_TYPE_ENEMY;
						};
					}
				};
			};
			action = "struct ActionSetCameraAtObject" {
				internalColor_ = 0;
				object = UNIT_ATTRIBUTE_FRAME;
				playerType = AI_PLAYER_TYPE_ME;
				transitionTime = 0;
				setFollow = false;
				turnTime = 0;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12632256;
			cellNumberX = 1;
			cellNumberY = -2;
			left_ = 288;
			top_ = -128;
			right_ = 544;
			bottom_ = -96;
			cellIndex = {
				x = 1;
				y = -2;
			};
			boundingRect = {
				left = 288;
				top = -128;
				right = 544;
				bottom = -96;
			};
		},
		{
			name = "на коридор";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_CORRIDOR_OMEGA;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ENEMY;
							constructedAndConstructing = true;
						};
					}
				};
			};
			action = "struct ActionSetCameraAtObject" {
				internalColor_ = 0;
				object = UNIT_ATTRIBUTE_CORRIDOR_OMEGA;
				playerType = AI_PLAYER_TYPE_ENEMY;
				transitionTime = 0;
				setFollow = false;
				turnTime = 0;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12632256;
			cellNumberX = 1;
			cellNumberY = -1;
			left_ = 288;
			top_ = -64;
			right_ = 544;
			bottom_ = -32;
			cellIndex = {
				x = 1;
				y = -1;
			};
			boundingRect = {
				left = 288;
				top = -64;
				right = 544;
				bottom = -32;
			};
		},
		{
			name = "сообщение";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionUnitClassUnderAttack" {
							state_ = false;
							internalColor_ = 0;
							victimUnitClass = UNIT_CLASS_FRAME | UNIT_CLASS_IGNORE;
							damagePercent = 1;
							agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_STRUCTURE_SPECIAL | UNIT_CLASS_IGNORE;
							playerType = AI_PLAYER_TYPE_ENEMY;
						};
					}
				};
			};
			action = "struct ActionMessage" {
				internalColor_ = 0;
				messageID = "Mission Tips.Mission 09.Tip 3";
				message = "";
				delay = 0;
				duration = 5;
				syncroBySound = true;
				delayTimer = {
					time = 0;
				};
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12895487;
			cellNumberX = 2;
			cellNumberY = 4;
			left_ = 576;
			top_ = 256;
			right_ = 832;
			bottom_ = 288;
			cellIndex = {
				x = 2;
				y = 4;
			};
			boundingRect = {
				left = 576;
				top = 256;
				right = 832;
				bottom = 288;
			};
		},
		{
			name = "11";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct Action" {
				internalColor_ = 0;
			};
			outcomingLinks = {
				2;
				{
					triggerName = "на фрейм0";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 38;
					parentOffsetY_ = 16;
					childOffsetX_ = 36;
					childOffsetY_ = -16;
					parentOffset = {
						x = 38;
						y = 16;
					};
					childOffset = {
						x = 36;
						y = -16;
					};
				},
				{
					triggerName = "2";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 110;
					parentOffsetY_ = 16;
					childOffsetX_ = -123;
					childOffsetY_ = -16;
					parentOffset = {
						x = 110;
						y = 16;
					};
					childOffset = {
						x = -123;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 3;
			cellNumberY = 2;
			left_ = 864;
			top_ = 128;
			right_ = 1120;
			bottom_ = 160;
			cellIndex = {
				x = 3;
				y = 2;
			};
			boundingRect = {
				left = 864;
				top = 128;
				right = 1120;
				bottom = 160;
			};
		},
		{
			name = "2";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionDelay" {
				internalColor_ = 0;
				delay = 1;
				showTimer = false;
				scaleByDifficulty = false;
				timer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 4;
			cellNumberY = 4;
			left_ = 1152;
			top_ = 256;
			right_ = 1408;
			bottom_ = 288;
			cellIndex = {
				x = 4;
				y = 4;
			};
			boundingRect = {
				left = 1152;
				top = 256;
				right = 1408;
				bottom = 288;
			};
		},
		{
			name = "на фрейм0";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionSkipCutScene" {
							state_ = false;
							internalColor_ = 0;
						};
					}
				};
			};
			action = "struct ActionSetCamera" {
				internalColor_ = 0;
				cameraSplineName = "на фрейм";
				stepTime = 1.;
				cycles = 1;
				smoothTransition = false;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "вкл. интерфейс";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -128;
					parentOffsetY_ = -15;
					childOffsetX_ = 127;
					childOffsetY_ = 16;
					parentOffset = {
						x = -128;
						y = -15;
					};
					childOffset = {
						x = 127;
						y = 16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12632256;
			cellNumberX = 3;
			cellNumberY = 4;
			left_ = 864;
			top_ = 256;
			right_ = 1120;
			bottom_ = 288;
			cellIndex = {
				x = 3;
				y = 4;
			};
			boundingRect = {
				left = 864;
				top = 256;
				right = 1120;
				bottom = 288;
			};
		}
	};
	left_ = -181;
	top_ = -122;
	right_ = 1230;
	bottom_ = 837;
	boundingRect = {
		left = -181;
		top = -122;
		right = 1230;
		bottom = 837;
	};
	viewRect = {
		left = -181;
		top = -122;
		right = 1230;
		bottom = 837;
	};
};
