TriggerChain = {
	name = "battle.scr";
	triggers = {
		182;
		{
			name = "START";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = 0;
			outcomingLinks = {
				10;
				{
					triggerName = "Install Frame";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = -3;
						y = 16;
					};
					childOffset = {
						x = -10;
						y = -16;
					};
				},
				{
					triggerName = "вкл. поле";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 15;
						y = 16;
					};
					childOffset = {
						x = 15;
						y = -16;
					};
				},
				{
					triggerName = "вкл. поле0";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 81;
						y = 16;
					};
					childOffset = {
						x = 77;
						y = -16;
					};
				},
				{
					triggerName = "задание";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffset = {
						x = 23;
						y = -16;
					};
					childOffset = {
						x = 25;
						y = 16;
					};
				},
				{
					triggerName = "старт0";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffset = {
						x = -128;
						y = 0;
					};
					childOffset = {
						x = 128;
						y = 0;
					};
				},
				{
					triggerName = "старт1";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffset = {
						x = 11;
						y = 16;
					};
					childOffset = {
						x = -12;
						y = -16;
					};
				},
				{
					triggerName = "старт2";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffset = {
						x = 108;
						y = 16;
					};
					childOffset = {
						x = -108;
						y = -16;
					};
				},
				{
					triggerName = "легкий";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffset = {
						x = -40;
						y = 16;
					};
					childOffset = {
						x = 90;
						y = -16;
					};
				},
				{
					triggerName = "нормальный";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffset = {
						x = -82;
						y = 16;
					};
					childOffset = {
						x = 128;
						y = -16;
					};
				},
				{
					triggerName = "сложный";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffset = {
						x = -18;
						y = 16;
					};
					childOffset = {
						x = -45;
						y = -16;
					};
				}
			};
			state_ = CHECKING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellIndex = {
				x = 1;
				y = -5;
			};
			boundingRect = {
				left = 288;
				top = -320;
				right = 544;
				bottom = -288;
			};
		},
		{
			name = "Install Frame";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = INVERTED;
						condition = "struct ConditionFrameState" {
							state_ = true;
							internalColor_ = 0;
							state = AI_FRAME_STATE_INSTALLED;
							playerType = AI_PLAYER_TYPE_ME;
							spiralChargingPercent = 100;
						};
					}
				};
			};
			action = "struct ActionInstallFrame" {
				internalColor_ = 12517305;
				onlyIfAi = true;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 8454016;
			cellIndex = {
				x = 1;
				y = -3;
			};
			boundingRect = {
				left = 288;
				top = -192;
				right = 544;
				bottom = -160;
			};
		},
		{
			name = "Place Core";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					3;
					{
						type = INVERTED;
						condition = "struct ConditionPlayerState" {
							state_ = false;
							internalColor_ = 0;
							playerState = PLAYER_STATE_UNABLE_TO_PLACE_CORE;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = OR;
							conditions = {
								3;
								{
									type = NORMAL;
									condition = "struct ConditionPlayerState" {
										state_ = false;
										internalColor_ = 0;
										playerState = PLAYER_STATE_UNABLE_TO_PLACE_BUILDING;
									};
								},
								{
									type = INVERTED;
									condition = "struct ConditionObjectExists" {
										state_ = true;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_CORE;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ME;
										constructedAndConstructing = true;
									};
								},
								{
									type = INVERTED;
									condition = "struct ConditionOutOfEnergyCapacity" {
										state_ = false;
										internalColor_ = 0;
										chargingPercent = 90.;
									};
								}
							};
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionEnegyLevelLowerReserve" {
							state_ = false;
							internalColor_ = 0;
							energyReserve = 100.;
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 12189692;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_CORE;
				placementStrategy = PLACEMENT_STRATEGY_CORE;
				energyReserve = 0.;
				buildDurationMax = 300;
				priority = 1;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 65535;
			cellIndex = {
				x = 2;
				y = 0;
			};
			boundingRect = {
				left = 576;
				top = 0;
				right = 832;
				bottom = 32;
			};
		},
		{
			name = "Soldier Plant";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = OR;
							conditions = {
								4;
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = false;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_ROCKET_STATION3;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ME;
										constructedAndConstructing = true;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = true;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_ROCKET_STATION2;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ME;
										constructedAndConstructing = true;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = false;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_ROCKET_STATION1;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ME;
										constructedAndConstructing = true;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = false;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_FLY_STATION2;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ME;
										constructedAndConstructing = true;
									};
								}
							};
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelUpperReserve" {
							state_ = true;
							internalColor_ = 0;
							energyReserve = 200.;
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 12189692;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_SOLDIER_PLANT;
				placementStrategy = PLACEMENT_STRATEGY_STATION;
				energyReserve = 50.;
				buildDurationMax = 300;
				priority = 1;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "остановить стр. завода солдат ";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 65535;
			cellIndex = {
				x = 3;
				y = 0;
			};
			boundingRect = {
				left = 864;
				top = 0;
				right = 1120;
				bottom = 32;
			};
		},
		{
			name = "Officier Plant";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					4;
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = OR;
							conditions = {
								3;
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = true;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_ELECTRO_STATION1;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ME;
										constructedAndConstructing = true;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = false;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_ELECTRO_STATION2;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ME;
										constructedAndConstructing = true;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = false;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_ELECTRO_STATION3;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ME;
										constructedAndConstructing = true;
									};
								}
							};
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelUpperReserve" {
							state_ = true;
							internalColor_ = 0;
							energyReserve = 200.;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = OR;
							conditions = {
								2;
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = false;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_FLY_STATION1;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ME;
										constructedAndConstructing = true;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = true;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_FLY_STATION2;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ME;
										constructedAndConstructing = true;
									};
								}
							};
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_ELECTRO_CANNON;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 12189692;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_OFFICER_PLANT;
				placementStrategy = PLACEMENT_STRATEGY_STATION;
				energyReserve = 50.;
				buildDurationMax = 300;
				priority = 0;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "остановить стр. завода офице";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 65535;
			cellIndex = {
				x = 4;
				y = 0;
			};
			boundingRect = {
				left = 1152;
				top = 0;
				right = 1408;
				bottom = 32;
			};
		},
		{
			name = "Technic Plant";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = OR;
							conditions = {
								3;
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = false;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_BOMB_STATION1;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ME;
										constructedAndConstructing = false;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = true;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_BOMB_STATION2;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ME;
										constructedAndConstructing = false;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = true;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_BOMB_STATION3;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ME;
										constructedAndConstructing = false;
									};
								}
							};
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelUpperReserve" {
							state_ = true;
							internalColor_ = 0;
							energyReserve = 200.;
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 12189692;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_TECHNIC_PLANT;
				placementStrategy = PLACEMENT_STRATEGY_STATION;
				energyReserve = 50.;
				buildDurationMax = 300;
				priority = 1;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "остановить стр. завода техни";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 65535;
			cellIndex = {
				x = 5;
				y = 0;
			};
			boundingRect = {
				left = 1440;
				top = 0;
				right = 1696;
				bottom = 32;
			};
		},
		{
			name = "Усилитель";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					4;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_CORE;
							counter = 3;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = true;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionOutOfEnergyCapacity" {
							state_ = false;
							internalColor_ = 0;
							chargingPercent = 99.;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelLowerReserve" {
							state_ = true;
							internalColor_ = 0;
							energyReserve = 30000.;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionBuildingNearBuilding" {
							state_ = false;
							internalColor_ = 0;
							distance = 500.;
							playerType1 = AI_PLAYER_TYPE_ME;
							playerType2 = AI_PLAYER_TYPE_WORLD;
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 12189692;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_COLLECTOR;
				placementStrategy = PLACEMENT_STRATEGY_PLANT;
				energyReserve = 0.;
				buildDurationMax = 1000;
				priority = 1;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "остановить стр. усилителя";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 65535;
			cellIndex = {
				x = 0;
				y = 0;
			};
			boundingRect = {
				left = 0;
				top = 0;
				right = 256;
				bottom = 32;
			};
		},
		{
			name = "Laser1";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelUpperReserve" {
							state_ = true;
							internalColor_ = 0;
							energyReserve = 300.;
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 12189692;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_ELECTRO_STATION1;
				placementStrategy = PLACEMENT_STRATEGY_STATION;
				energyReserve = 50.;
				buildDurationMax = 500;
				priority = 1;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "остановить стр. лазерной лаб";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 65535;
			cellIndex = {
				x = 4;
				y = 3;
			};
			boundingRect = {
				left = 1152;
				top = 192;
				right = 1408;
				bottom = 224;
			};
		},
		{
			name = "Rocket1";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelUpperReserve" {
							state_ = true;
							internalColor_ = 0;
							energyReserve = 300.;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_ELECTRO_STATION3;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = true;
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 12189692;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_ROCKET_STATION1;
				placementStrategy = PLACEMENT_STRATEGY_STATION;
				energyReserve = 50.;
				buildDurationMax = 500;
				priority = 3;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "остановить стр. ракетной лаб";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 65535;
			cellIndex = {
				x = 3;
				y = 3;
			};
			boundingRect = {
				left = 864;
				top = 192;
				right = 1120;
				bottom = 224;
			};
		},
		{
			name = "подземная лаборатория";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					3;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_ELECTRO_CANNON;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelUpperReserve" {
							state_ = true;
							internalColor_ = 0;
							energyReserve = 300.;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_ROCKET_LAUNCHER;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = true;
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 12189692;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_SUBTERRA_STATION1;
				placementStrategy = PLACEMENT_STRATEGY_STATION;
				energyReserve = 50.;
				buildDurationMax = 1000;
				priority = 3;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "остановить стр. подземной 1";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 65535;
			cellIndex = {
				x = 1;
				y = 4;
			};
			boundingRect = {
				left = 288;
				top = 256;
				right = 544;
				bottom = 288;
			};
		},
		{
			name = "летная лаборатория";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelUpperReserve" {
							state_ = true;
							internalColor_ = 0;
							energyReserve = 300.;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_ELECTRO_CANNON;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 12189692;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_FLY_STATION1;
				placementStrategy = PLACEMENT_STRATEGY_STATION;
				energyReserve = 50.;
				buildDurationMax = 500;
				priority = 0;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "остановить стр. летной 1";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 65535;
			cellIndex = {
				x = 2;
				y = 4;
			};
			boundingRect = {
				left = 576;
				top = 256;
				right = 832;
				bottom = 288;
			};
		},
		{
			name = "Bomb1";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelUpperReserve" {
							state_ = true;
							internalColor_ = 0;
							energyReserve = 300.;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_COMMANDER;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = true;
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 12189692;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_BOMB_STATION1;
				placementStrategy = PLACEMENT_STRATEGY_STATION;
				energyReserve = 50.;
				buildDurationMax = 1000;
				priority = 1;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "остановить стр. бомбовой 1";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 65535;
			cellIndex = {
				x = 5;
				y = 3;
			};
			boundingRect = {
				left = 1440;
				top = 192;
				right = 1696;
				bottom = 224;
			};
		},
		{
			name = "Laser2";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					3;
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelUpperReserve" {
							state_ = true;
							internalColor_ = 0;
							energyReserve = 300.;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = OR;
							conditions = {
								3;
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = false;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_BOMB_STATION1;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ME;
										constructedAndConstructing = false;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = true;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_BOMB_STATION2;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ME;
										constructedAndConstructing = true;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = true;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_BOMB_STATION3;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ME;
										constructedAndConstructing = true;
									};
								}
							};
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = OR;
							conditions = {
								4;
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = true;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_ROCKET_STATION2;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ME;
										constructedAndConstructing = false;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = false;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_ROCKET_STATION3;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ME;
										constructedAndConstructing = true;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = false;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_SUBTERRA_STATION2;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ME;
										constructedAndConstructing = false;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = false;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_SUBTERRA_STATION1;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ME;
										constructedAndConstructing = true;
									};
								}
							};
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 12189692;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_ELECTRO_STATION2;
				placementStrategy = PLACEMENT_STRATEGY_STATION;
				energyReserve = 50.;
				buildDurationMax = 500;
				priority = 3;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "остановить стр. лазерной 2";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 65535;
			cellIndex = {
				x = 4;
				y = 6;
			};
			boundingRect = {
				left = 1152;
				top = 384;
				right = 1408;
				bottom = 416;
			};
		},
		{
			name = "Rocket2";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelUpperReserve" {
							state_ = true;
							internalColor_ = 0;
							energyReserve = 300.;
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 12189692;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_ROCKET_STATION2;
				placementStrategy = PLACEMENT_STRATEGY_STATION;
				energyReserve = 50.;
				buildDurationMax = 500;
				priority = 1;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "остановить стр. ракетной 2 ";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 65535;
			cellIndex = {
				x = 3;
				y = 6;
			};
			boundingRect = {
				left = 864;
				top = 384;
				right = 1120;
				bottom = 416;
			};
		},
		{
			name = "Bomb2";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = OR;
							conditions = {
								4;
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = false;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_ROCKET_STATION3;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ME;
										constructedAndConstructing = true;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = true;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_ROCKET_STATION2;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ME;
										constructedAndConstructing = true;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = false;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_ROCKET_STATION1;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ME;
										constructedAndConstructing = false;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = false;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_FLY_STATION2;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ME;
										constructedAndConstructing = true;
									};
								}
							};
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelUpperReserve" {
							state_ = true;
							internalColor_ = 0;
							energyReserve = 300.;
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 12189692;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_BOMB_STATION2;
				placementStrategy = PLACEMENT_STRATEGY_STATION;
				energyReserve = 50.;
				buildDurationMax = 1000;
				priority = 1;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "остановить стр.бомбовой 2";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 65535;
			cellIndex = {
				x = 5;
				y = 6;
			};
			boundingRect = {
				left = 1440;
				top = 384;
				right = 1696;
				bottom = 416;
			};
		},
		{
			name = "Laser3";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelUpperReserve" {
							state_ = true;
							internalColor_ = 0;
							energyReserve = 300.;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_FLY_STATION2;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 12189692;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_ELECTRO_STATION3;
				placementStrategy = PLACEMENT_STRATEGY_STATION;
				energyReserve = 50.;
				buildDurationMax = 500;
				priority = 3;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "остановить стр. лазерной 3";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 65535;
			cellIndex = {
				x = 4;
				y = 9;
			};
			boundingRect = {
				left = 1152;
				top = 576;
				right = 1408;
				bottom = 608;
			};
		},
		{
			name = "летная 2";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					4;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 13565951;
							object = UNIT_ATTRIBUTE_SOLDIER_PLANT;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 13565951;
							object = UNIT_ATTRIBUTE_OFFICER_PLANT;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_TECHNIC_PLANT;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = true;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelUpperReserve" {
							state_ = true;
							internalColor_ = 0;
							energyReserve = 300.;
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 12189692;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_FLY_STATION2;
				placementStrategy = PLACEMENT_STRATEGY_STATION;
				energyReserve = 50.;
				buildDurationMax = 500;
				priority = 1;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "остановить стр. летной 2";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 65535;
			cellIndex = {
				x = 2;
				y = 7;
			};
			boundingRect = {
				left = 576;
				top = 448;
				right = 832;
				bottom = 480;
			};
		},
		{
			name = "лазерная пушка";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					3;
					{
						type = NORMAL;
						condition = "struct ConditionNumberOfBuildingByCoresCapacity" {
							state_ = true;
							internalColor_ = 12189692;
							building = UNIT_ATTRIBUTE_ELECTRO_CANNON;
							factor = 0.1;
							compareOp = COMPARE_LESS;
							building2 = UNIT_ATTRIBUTE_CORE;
							playerType = AI_PLAYER_TYPE_ME;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelUpperReserve" {
							state_ = true;
							internalColor_ = 0;
							energyReserve = 100.;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_ELECTRO_CANNON;
							counter = 5;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = true;
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 12189692;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_ELECTRO_CANNON;
				placementStrategy = PLACEMENT_STRATEGY_GUN;
				energyReserve = 0.;
				buildDurationMax = 500;
				priority = 2;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 65535;
			cellIndex = {
				x = 4;
				y = 12;
			};
			boundingRect = {
				left = 1152;
				top = 768;
				right = 1408;
				bottom = 800;
			};
		},
		{
			name = "ракетница";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					3;
					{
						type = NORMAL;
						condition = "struct ConditionNumberOfBuildingByCoresCapacity" {
							state_ = true;
							internalColor_ = 8454143;
							building = UNIT_ATTRIBUTE_ROCKET_LAUNCHER;
							factor = 0.1;
							compareOp = COMPARE_LESS;
							building2 = UNIT_ATTRIBUTE_CORE;
							playerType = AI_PLAYER_TYPE_ME;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelUpperReserve" {
							state_ = true;
							internalColor_ = 0;
							energyReserve = 100.;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_ROCKET_LAUNCHER;
							counter = 3;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = true;
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 12189692;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_ROCKET_LAUNCHER;
				placementStrategy = PLACEMENT_STRATEGY_GUN;
				energyReserve = 0.;
				buildDurationMax = 500;
				priority = 2;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 65535;
			cellIndex = {
				x = 3;
				y = 12;
			};
			boundingRect = {
				left = 864;
				top = 768;
				right = 1120;
				bottom = 800;
			};
		},
		{
			name = "подземная пушка";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionNumberOfBuildingByCoresCapacity" {
							state_ = true;
							internalColor_ = 8454143;
							building = UNIT_ATTRIBUTE_GUN_SUBCHASER;
							factor = 0.5;
							compareOp = COMPARE_LESS;
							building2 = UNIT_ATTRIBUTE_CORE;
							playerType = AI_PLAYER_TYPE_ME;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_GUN_SUBCHASER;
							counter = 3;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = true;
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 12189692;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_GUN_SUBCHASER;
				placementStrategy = PLACEMENT_STRATEGY_GUN;
				energyReserve = 0.;
				buildDurationMax = 300;
				priority = 2;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 65535;
			cellIndex = {
				x = 1;
				y = 10;
			};
			boundingRect = {
				left = 288;
				top = 640;
				right = 544;
				bottom = 672;
			};
		},
		{
			name = "вкл. поле";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionUnitClassUnderAttack" {
							state_ = false;
							internalColor_ = 0;
							victimUnitClass = UNIT_CLASS_STRUCTURE_CORE | UNIT_CLASS_IGNORE;
							damagePercent = 10;
							agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_MISSILE | UNIT_CLASS_AIR_FILTH | UNIT_CLASS_IGNORE;
							playerType = AI_PLAYER_TYPE_ME;
						};
					}
				};
			};
			action = "struct ActionSwitchFieldOn" {
				internalColor_ = 0;
				onlyIfAi = true;
				duration = 50;
				energyReserve = 0.;
				allCores = false;
				onlyIfCoreDamaged = true;
				timer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 255;
			cellIndex = {
				x = 1;
				y = 0;
			};
			boundingRect = {
				left = 288;
				top = 0;
				right = 544;
				bottom = 32;
			};
		},
		{
			name = "победа";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionVictory" {
				internalColor_ = 0;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 8421504;
			cellIndex = {
				x = 2;
				y = -9;
			};
			boundingRect = {
				left = 576;
				top = -576;
				right = 832;
				bottom = -544;
			};
		},
		{
			name = "поражение";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionDefeat" {
				internalColor_ = 0;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 8421504;
			cellIndex = {
				x = 1;
				y = -9;
			};
			boundingRect = {
				left = 288;
				top = -576;
				right = 544;
				bottom = -544;
			};
		},
		{
			name = "ядро к врагу";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					3;
					{
						type = NORMAL;
						condition = "struct ConditionOutOfEnergyCapacity" {
							state_ = false;
							internalColor_ = 0;
							chargingPercent = 99.;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_CORE;
							counter = 3;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionBuildingNearBuilding" {
							state_ = false;
							internalColor_ = 0;
							distance = 1000.;
							playerType1 = AI_PLAYER_TYPE_ME;
							playerType2 = AI_PLAYER_TYPE_ENEMY;
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_CORE;
				placementStrategy = PLACEMENT_STRATEGY_CORE_OFFENSIVE;
				energyReserve = 0.;
				buildDurationMax = 300;
				priority = 3;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 16744703;
			cellIndex = {
				x = 2;
				y = 1;
			};
			boundingRect = {
				left = 576;
				top = 64;
				right = 832;
				bottom = 96;
			};
		},
		{
			name = "захват строений";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionBuildingNearBuilding" {
							state_ = false;
							internalColor_ = 0;
							distance = 500.;
							playerType1 = AI_PLAYER_TYPE_ME;
							playerType2 = AI_PLAYER_TYPE_WORLD;
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_CORE;
				placementStrategy = PLACEMENT_STRATEGY_CORE_CATCHING;
				energyReserve = 50.;
				buildDurationMax = 300;
				priority = 0;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 16744703;
			cellIndex = {
				x = 2;
				y = 2;
			};
			boundingRect = {
				left = 576;
				top = 128;
				right = 832;
				bottom = 160;
			};
		},
		{
			name = "остановить стр. завода солдат ";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelLowerReserve" {
							state_ = false;
							internalColor_ = 0;
							energyReserve = 100.;
						};
					}
				};
			};
			action = "struct ActionHoldBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_SOLDIER_PLANT;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 33023;
			cellIndex = {
				x = 3;
				y = 1;
			};
			boundingRect = {
				left = 864;
				top = 64;
				right = 1120;
				bottom = 96;
			};
		},
		{
			name = "остановить стр. завода офице";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelLowerReserve" {
							state_ = false;
							internalColor_ = 0;
							energyReserve = 100.;
						};
					}
				};
			};
			action = "struct ActionHoldBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_OFFICER_PLANT;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 33023;
			cellIndex = {
				x = 4;
				y = 1;
			};
			boundingRect = {
				left = 1152;
				top = 64;
				right = 1408;
				bottom = 96;
			};
		},
		{
			name = "остановить стр. завода техни";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelLowerReserve" {
							state_ = false;
							internalColor_ = 0;
							energyReserve = 100.;
						};
					}
				};
			};
			action = "struct ActionHoldBuilding" {
				internalColor_ = 11065087;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_TECHNIC_PLANT;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 33023;
			cellIndex = {
				x = 5;
				y = 1;
			};
			boundingRect = {
				left = 1440;
				top = 64;
				right = 1696;
				bottom = 96;
			};
		},
		{
			name = "остановить стр. лазерной лаб";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelLowerReserve" {
							state_ = false;
							internalColor_ = 0;
							energyReserve = 200.;
						};
					}
				};
			};
			action = "struct ActionHoldBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_ELECTRO_STATION1;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 33023;
			cellIndex = {
				x = 4;
				y = 4;
			};
			boundingRect = {
				left = 1152;
				top = 256;
				right = 1408;
				bottom = 288;
			};
		},
		{
			name = "остановить стр. ракетной лаб";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelLowerReserve" {
							state_ = false;
							internalColor_ = 0;
							energyReserve = 200.;
						};
					}
				};
			};
			action = "struct ActionHoldBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_ROCKET_STATION1;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 33023;
			cellIndex = {
				x = 3;
				y = 4;
			};
			boundingRect = {
				left = 864;
				top = 256;
				right = 1120;
				bottom = 288;
			};
		},
		{
			name = "остановить стр. бомбовой 1";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelLowerReserve" {
							state_ = true;
							internalColor_ = 0;
							energyReserve = 200.;
						};
					}
				};
			};
			action = "struct ActionHoldBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_BOMB_STATION1;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 33023;
			cellIndex = {
				x = 5;
				y = 4;
			};
			boundingRect = {
				left = 1440;
				top = 256;
				right = 1696;
				bottom = 288;
			};
		},
		{
			name = "остановить стр. усилителя";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = INVERTED;
						condition = "struct ConditionOutOfEnergyCapacity" {
							state_ = true;
							internalColor_ = 9945343;
							chargingPercent = 30.;
						};
					}
				};
			};
			action = "struct ActionHoldBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_COLLECTOR;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 33023;
			cellIndex = {
				x = 0;
				y = 1;
			};
			boundingRect = {
				left = 0;
				top = 64;
				right = 256;
				bottom = 96;
			};
		},
		{
			name = "остановить стр. летной 1";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelLowerReserve" {
							state_ = false;
							internalColor_ = 0;
							energyReserve = 200.;
						};
					}
				};
			};
			action = "struct ActionHoldBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_FLY_STATION1;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 33023;
			cellIndex = {
				x = 2;
				y = 5;
			};
			boundingRect = {
				left = 576;
				top = 320;
				right = 832;
				bottom = 352;
			};
		},
		{
			name = "остановить стр. подземной 1";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelLowerReserve" {
							state_ = false;
							internalColor_ = 0;
							energyReserve = 200.;
						};
					}
				};
			};
			action = "struct ActionHoldBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_SUBTERRA_STATION1;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 33023;
			cellIndex = {
				x = 1;
				y = 5;
			};
			boundingRect = {
				left = 288;
				top = 320;
				right = 544;
				bottom = 352;
			};
		},
		{
			name = "остановить стр. лазерной 2";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelLowerReserve" {
							state_ = false;
							internalColor_ = 0;
							energyReserve = 200.;
						};
					}
				};
			};
			action = "struct ActionHoldBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_ELECTRO_STATION2;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 33023;
			cellIndex = {
				x = 4;
				y = 7;
			};
			boundingRect = {
				left = 1152;
				top = 448;
				right = 1408;
				bottom = 480;
			};
		},
		{
			name = "остановить стр. ракетной 2 ";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelLowerReserve" {
							state_ = false;
							internalColor_ = 0;
							energyReserve = 200.;
						};
					}
				};
			};
			action = "struct ActionHoldBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_ROCKET_STATION2;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 33023;
			cellIndex = {
				x = 3;
				y = 7;
			};
			boundingRect = {
				left = 864;
				top = 448;
				right = 1120;
				bottom = 480;
			};
		},
		{
			name = "остановить стр.бомбовой 2";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelLowerReserve" {
							state_ = false;
							internalColor_ = 0;
							energyReserve = 200.;
						};
					}
				};
			};
			action = "struct ActionHoldBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_BOMB_STATION2;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 33023;
			cellIndex = {
				x = 5;
				y = 7;
			};
			boundingRect = {
				left = 1440;
				top = 448;
				right = 1696;
				bottom = 480;
			};
		},
		{
			name = "остановить стр. лазерной 3";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelLowerReserve" {
							state_ = false;
							internalColor_ = 0;
							energyReserve = 200.;
						};
					}
				};
			};
			action = "struct ActionHoldBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_ELECTRO_STATION3;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 33023;
			cellIndex = {
				x = 4;
				y = 10;
			};
			boundingRect = {
				left = 1152;
				top = 640;
				right = 1408;
				bottom = 672;
			};
		},
		{
			name = "остановить стр. летной 2";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelLowerReserve" {
							state_ = false;
							internalColor_ = 0;
							energyReserve = 200.;
						};
					}
				};
			};
			action = "struct ActionHoldBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_FLY_STATION2;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 33023;
			cellIndex = {
				x = 2;
				y = 8;
			};
			boundingRect = {
				left = 576;
				top = 512;
				right = 832;
				bottom = 544;
			};
		},
		{
			name = "командный центр1";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					4;
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 12189692;
							object = UNIT_ATTRIBUTE_COMMANDER;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = true;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelUpperReserve" {
							state_ = true;
							internalColor_ = 0;
							energyReserve = 300.;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = OR;
							conditions = {
								3;
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = true;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_SOLDIER_PLANT;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ME;
										constructedAndConstructing = false;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = true;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_OFFICER_PLANT;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ME;
										constructedAndConstructing = false;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = false;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_TECHNIC_PLANT;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ME;
										constructedAndConstructing = false;
									};
								}
							};
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_ELECTRO_CANNON;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 12189692;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_COMMANDER;
				placementStrategy = PLACEMENT_STRATEGY_PLANT;
				energyReserve = 50.;
				buildDurationMax = 300;
				priority = 1;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "остановить строительство КЦ";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 1419950;
			cellIndex = {
				x = 1;
				y = 2;
			};
			boundingRect = {
				left = 288;
				top = 128;
				right = 544;
				bottom = 160;
			};
		},
		{
			name = "остановить строительство КЦ";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelLowerReserve" {
							state_ = false;
							internalColor_ = 0;
							energyReserve = 200.;
						};
					}
				};
			};
			action = "struct ActionHoldBuilding" {
				internalColor_ = 11065087;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_COMMANDER;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 28607;
			cellIndex = {
				x = 1;
				y = 3;
			};
			boundingRect = {
				left = 288;
				top = 192;
				right = 544;
				bottom = 224;
			};
		},
		{
			name = "ИСХОДНИКИ 1";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					4;
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelUpperReserve" {
							state_ = true;
							internalColor_ = 0;
							energyReserve = 500.;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_COMMANDER;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = true;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = OR;
							conditions = {
								2;
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = true;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_BOMB_STATION2;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ME;
										constructedAndConstructing = false;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = true;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_BOMB_STATION3;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ME;
										constructedAndConstructing = false;
									};
								}
							};
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_ROCKET_STATION3;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 12189692;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_EXODUS_STATION1;
				placementStrategy = PLACEMENT_STRATEGY_STATION;
				energyReserve = 50.;
				buildDurationMax = 2000;
				priority = 1;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "Остановить ИСХОДНИКИ 1";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 32896;
			cellIndex = {
				x = 3;
				y = 15;
			};
			boundingRect = {
				left = 864;
				top = 960;
				right = 1120;
				bottom = 992;
			};
		},
		{
			name = "ИМПЕРИЯ 1";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					4;
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelUpperReserve" {
							state_ = true;
							internalColor_ = 0;
							energyReserve = 500.;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_COMMANDER;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = true;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = OR;
							conditions = {
								2;
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = true;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_BOMB_STATION2;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ME;
										constructedAndConstructing = false;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = true;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_BOMB_STATION3;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ME;
										constructedAndConstructing = false;
									};
								}
							};
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_ROCKET_STATION3;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 12189692;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_EMPIRE_STATION1;
				placementStrategy = PLACEMENT_STRATEGY_STATION;
				energyReserve = 50.;
				buildDurationMax = 2000;
				priority = 1;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "Остановить ИМПЕРИЯ 1";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 4227200;
			cellIndex = {
				x = 5;
				y = 15;
			};
			boundingRect = {
				left = 1440;
				top = 960;
				right = 1696;
				bottom = 992;
			};
		},
		{
			name = "ИСХОДНИКИ 2";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelUpperReserve" {
							state_ = true;
							internalColor_ = 0;
							energyReserve = 500.;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = OR;
							conditions = {
								2;
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = true;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_BOMB_STATION2;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ME;
										constructedAndConstructing = false;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = true;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_BOMB_STATION3;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ME;
										constructedAndConstructing = false;
									};
								}
							};
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 12189692;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_EXODUS_STATION2;
				placementStrategy = PLACEMENT_STRATEGY_STATION;
				energyReserve = 50.;
				buildDurationMax = 2000;
				priority = 3;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "Остановить ИСХОДНИКИ 2";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 4227200;
			cellIndex = {
				x = 3;
				y = 18;
			};
			boundingRect = {
				left = 864;
				top = 1152;
				right = 1120;
				bottom = 1184;
			};
		},
		{
			name = "ИМПЕРИЯ 2";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelUpperReserve" {
							state_ = true;
							internalColor_ = 0;
							energyReserve = 500.;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = OR;
							conditions = {
								2;
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = true;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_BOMB_STATION2;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ME;
										constructedAndConstructing = false;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = true;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_BOMB_STATION3;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ME;
										constructedAndConstructing = false;
									};
								}
							};
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 12189692;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_EMPIRE_STATION2;
				placementStrategy = PLACEMENT_STRATEGY_STATION;
				energyReserve = 50.;
				buildDurationMax = 2000;
				priority = 3;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "Остановить ИМПЕРИЯ 2";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 4227200;
			cellIndex = {
				x = 5;
				y = 18;
			};
			boundingRect = {
				left = 1440;
				top = 1152;
				right = 1696;
				bottom = 1184;
			};
		},
		{
			name = "ИСХОДНИКИ 3";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelUpperReserve" {
							state_ = true;
							internalColor_ = 0;
							energyReserve = 500.;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = OR;
							conditions = {
								2;
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = true;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_BOMB_STATION2;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ME;
										constructedAndConstructing = false;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = true;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_BOMB_STATION3;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ME;
										constructedAndConstructing = false;
									};
								}
							};
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_EXODUS_STATION3;
				placementStrategy = PLACEMENT_STRATEGY_STATION;
				energyReserve = 50.;
				buildDurationMax = 2000;
				priority = 3;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "Остановить ИСХОДНИКИ 3";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 4227200;
			cellIndex = {
				x = 3;
				y = 21;
			};
			boundingRect = {
				left = 864;
				top = 1344;
				right = 1120;
				bottom = 1376;
			};
		},
		{
			name = "ИМПЕРИИ 3";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelUpperReserve" {
							state_ = true;
							internalColor_ = 0;
							energyReserve = 500.;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = OR;
							conditions = {
								2;
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = true;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_BOMB_STATION2;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ME;
										constructedAndConstructing = false;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = true;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_BOMB_STATION3;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ME;
										constructedAndConstructing = false;
									};
								}
							};
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_EMPIRE_STATION3;
				placementStrategy = PLACEMENT_STRATEGY_STATION;
				energyReserve = 50.;
				buildDurationMax = 2000;
				priority = 3;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "Остановить ИМПЕРИЯ 3";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 4227200;
			cellIndex = {
				x = 5;
				y = 21;
			};
			boundingRect = {
				left = 1440;
				top = 1344;
				right = 1696;
				bottom = 1376;
			};
		},
		{
			name = "Остановить ИСХОДНИКИ 1";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelLowerReserve" {
							state_ = false;
							internalColor_ = 0;
							energyReserve = 300.;
						};
					}
				};
			};
			action = "struct ActionHoldBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_EXODUS_STATION1;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 16512;
			cellIndex = {
				x = 3;
				y = 16;
			};
			boundingRect = {
				left = 864;
				top = 1024;
				right = 1120;
				bottom = 1056;
			};
		},
		{
			name = "Остановить ИМПЕРИЯ 1";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelLowerReserve" {
							state_ = true;
							internalColor_ = 0;
							energyReserve = 300.;
						};
					}
				};
			};
			action = "struct ActionHoldBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_EMPIRE_STATION1;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 16512;
			cellIndex = {
				x = 5;
				y = 16;
			};
			boundingRect = {
				left = 1440;
				top = 1024;
				right = 1696;
				bottom = 1056;
			};
		},
		{
			name = "Остановить ИСХОДНИКИ 2";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelLowerReserve" {
							state_ = false;
							internalColor_ = 0;
							energyReserve = 300.;
						};
					}
				};
			};
			action = "struct ActionHoldBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_EXODUS_STATION2;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 16512;
			cellIndex = {
				x = 3;
				y = 19;
			};
			boundingRect = {
				left = 864;
				top = 1216;
				right = 1120;
				bottom = 1248;
			};
		},
		{
			name = "Остановить ИМПЕРИЯ 2";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelLowerReserve" {
							state_ = false;
							internalColor_ = 0;
							energyReserve = 300.;
						};
					}
				};
			};
			action = "struct ActionHoldBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_EMPIRE_STATION2;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 16512;
			cellIndex = {
				x = 5;
				y = 19;
			};
			boundingRect = {
				left = 1440;
				top = 1216;
				right = 1696;
				bottom = 1248;
			};
		},
		{
			name = "Остановить ИСХОДНИКИ 3";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelLowerReserve" {
							state_ = false;
							internalColor_ = 0;
							energyReserve = 300.;
						};
					}
				};
			};
			action = "struct ActionHoldBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_EXODUS_STATION3;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 16512;
			cellIndex = {
				x = 3;
				y = 22;
			};
			boundingRect = {
				left = 864;
				top = 1408;
				right = 1120;
				bottom = 1440;
			};
		},
		{
			name = "Остановить ИМПЕРИЯ 3";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelLowerReserve" {
							state_ = false;
							internalColor_ = 0;
							energyReserve = 300.;
						};
					}
				};
			};
			action = "struct ActionHoldBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_EMPIRE_STATION3;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 16512;
			cellIndex = {
				x = 5;
				y = 22;
			};
			boundingRect = {
				left = 1440;
				top = 1408;
				right = 1696;
				bottom = 1440;
			};
		},
		{
			name = "продавать любое строение";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = OR;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionDifficultyLevel" {
							state_ = false;
							internalColor_ = 0;
							difficulty = DIFFICULTY_HARD;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionDifficultyLevel" {
							state_ = true;
							internalColor_ = 0;
							difficulty = DIFFICULTY_NORMAL;
						};
					}
				};
			};
			action = "struct ActionSellBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_ANY;
				sellFactor = AI_SELL_IF_DAMAGE_GREATER;
				damagePercent = 98.;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 255;
			cellIndex = {
				x = 3;
				y = -2;
			};
			boundingRect = {
				left = 864;
				top = -128;
				right = 1120;
				bottom = -96;
			};
		},
		{
			name = "продать гаубицу";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					3;
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = false;
							internalColor_ = 0;
							type = OR;
							conditions = {
								2;
								{
									type = NORMAL;
									condition = "struct ConditionEnegyLevelLowerReserve" {
										state_ = false;
										internalColor_ = 0;
										energyReserve = 500.;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionNumberOfBuildingByCoresCapacity" {
										state_ = false;
										internalColor_ = 0;
										building = UNIT_ATTRIBUTE_GUN_HOWITZER;
										factor = 0.5;
										compareOp = COMPARE_GREATER;
										building2 = UNIT_ATTRIBUTE_CORE;
										playerType = AI_PLAYER_TYPE_ME;
									};
								}
							};
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionBuildingNearBuilding" {
							state_ = false;
							internalColor_ = 0;
							distance = 801.;
							playerType1 = AI_PLAYER_TYPE_ME;
							playerType2 = AI_PLAYER_TYPE_ENEMY;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_GUN_HOWITZER;
							counter = 4;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					}
				};
			};
			action = "struct ActionSellBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_GUN_HOWITZER;
				sellFactor = AI_SELL_IF_GUN_CANT_REACH_BUILDINGS;
				damagePercent = 0.;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 255;
			cellIndex = {
				x = 5;
				y = 13;
			};
			boundingRect = {
				left = 1440;
				top = 832;
				right = 1696;
				bottom = 864;
			};
		},
		{
			name = "дополнительный завод солдат";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					4;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_SOLDIER_PLANT;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_COMMANDER;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_SOLDIER_PLANT;
							counter = 5;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelUpperReserve" {
							state_ = true;
							internalColor_ = 0;
							energyReserve = 200.;
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_SOLDIER_PLANT;
				placementStrategy = PLACEMENT_STRATEGY_PLANT;
				energyReserve = 50.;
				buildDurationMax = 300;
				priority = 1;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "остановить стр. завода солдат ";
					color = STRATEGY_BLUE;
					type = THIN;
					active_ = false;
					parentOffset = {
						x = 0;
						y = -16;
					};
					childOffset = {
						x = 0;
						y = 16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 47541;
			cellIndex = {
				x = 3;
				y = 2;
			};
			boundingRect = {
				left = 864;
				top = 128;
				right = 1120;
				bottom = 160;
			};
		},
		{
			name = "дополнительный завод офицеров";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					7;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_OFFICER_PLANT;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_COMMANDER;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_OFFICER_PLANT;
							counter = 5;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = OR;
							conditions = {
								3;
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = false;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_BOMB_STATION3;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ME;
										constructedAndConstructing = true;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = true;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_BOMB_STATION2;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ME;
										constructedAndConstructing = true;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = true;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_BOMB_STATION1;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ME;
										constructedAndConstructing = false;
									};
								}
							};
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_TECHNIC_PLANT;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelUpperReserve" {
							state_ = true;
							internalColor_ = 0;
							energyReserve = 200.;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_LASER_STATION3;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = true;
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_OFFICER_PLANT;
				placementStrategy = PLACEMENT_STRATEGY_PLANT;
				energyReserve = 50.;
				buildDurationMax = 300;
				priority = 1;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "остановить стр. завода офице";
					color = STRATEGY_BLUE;
					type = THIN;
					active_ = false;
					parentOffset = {
						x = 0;
						y = -16;
					};
					childOffset = {
						x = 0;
						y = 16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 47541;
			cellIndex = {
				x = 4;
				y = 2;
			};
			boundingRect = {
				left = 1152;
				top = 128;
				right = 1408;
				bottom = 160;
			};
		},
		{
			name = "дополнительный завод техников";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					5;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_TECHNIC_PLANT;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_COMMANDER;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = true;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_TECHNIC_PLANT;
							counter = 5;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = OR;
							conditions = {
								3;
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = false;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_BOMB_STATION3;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ME;
										constructedAndConstructing = true;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = true;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_BOMB_STATION2;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ME;
										constructedAndConstructing = true;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = true;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_BOMB_STATION1;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ME;
										constructedAndConstructing = false;
									};
								}
							};
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelUpperReserve" {
							state_ = true;
							internalColor_ = 0;
							energyReserve = 200.;
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_TECHNIC_PLANT;
				placementStrategy = PLACEMENT_STRATEGY_PLANT;
				energyReserve = 50.;
				buildDurationMax = 300;
				priority = 1;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "остановить стр. завода техни";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffset = {
						x = 0;
						y = -16;
					};
					childOffset = {
						x = 0;
						y = 16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 47541;
			cellIndex = {
				x = 5;
				y = 2;
			};
			boundingRect = {
				left = 1440;
				top = 128;
				right = 1696;
				bottom = 160;
			};
		},
		{
			name = "скаморазрушитель";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelUpperReserve" {
							state_ = true;
							internalColor_ = 0;
							energyReserve = 500.;
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_GUN_SCUM_DISRUPTOR;
				placementStrategy = PLACEMENT_STRATEGY_SPECIAL_WEAPON;
				energyReserve = 50.;
				buildDurationMax = 2400;
				priority = 1;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "заморозить стр. скамразрушителя";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 2536946;
			cellIndex = {
				x = 3;
				y = 24;
			};
			boundingRect = {
				left = 864;
				top = 1536;
				right = 1120;
				bottom = 1568;
			};
		},
		{
			name = "баллистическая ракета";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelUpperReserve" {
							state_ = true;
							internalColor_ = 0;
							energyReserve = 500.;
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_GUN_BALLISTIC;
				placementStrategy = PLACEMENT_STRATEGY_SPECIAL_WEAPON;
				energyReserve = 50.;
				buildDurationMax = 2400;
				priority = 1;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "заморозить стр. баллистической ракеты";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 2536946;
			cellIndex = {
				x = 5;
				y = 24;
			};
			boundingRect = {
				left = 1440;
				top = 1536;
				right = 1696;
				bottom = 1568;
			};
		},
		{
			name = "заморозить стр. скамразрушителя";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelLowerReserve" {
							state_ = false;
							internalColor_ = 0;
							energyReserve = 300.;
						};
					}
				};
			};
			action = "struct ActionHoldBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_GUN_SCUM_DISRUPTOR;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 234492;
			cellIndex = {
				x = 3;
				y = 25;
			};
			boundingRect = {
				left = 864;
				top = 1600;
				right = 1120;
				bottom = 1632;
			};
		},
		{
			name = "заморозить стр. баллистической ракеты";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelLowerReserve" {
							state_ = false;
							internalColor_ = 0;
							energyReserve = 300.;
						};
					}
				};
			};
			action = "struct ActionHoldBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_GUN_BALLISTIC;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 234492;
			cellIndex = {
				x = 5;
				y = 25;
			};
			boundingRect = {
				left = 1440;
				top = 1600;
				right = 1696;
				bottom = 1632;
			};
		},
		{
			name = "атаковать баллистической ракетой";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionAttackBySpecialWeapon" {
				internalColor_ = 0;
				onlyIfAi = true;
				weapon = UNIT_ATTRIBUTE_GUN_BALLISTIC;
				unitsToAttack = {
					5;
					UNIT_ATTRIBUTE_BLACK_HOLE,
					UNIT_ATTRIBUTE_GUN_SCUM_DISRUPTOR,
					UNIT_ATTRIBUTE_GUN_BALLISTIC,
					UNIT_ATTRIBUTE_GUN_FILTH_NAVIGATOR,
					UNIT_ATTRIBUTE_CORE
				};
				unitClassToAttack = UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_FRAME | UNIT_CLASS_IGNORE;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 16711808;
			cellIndex = {
				x = 5;
				y = 26;
			};
			boundingRect = {
				left = 1440;
				top = 1664;
				right = 1696;
				bottom = 1696;
			};
		},
		{
			name = "атаковать  скамразрушителем";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionAttackBySpecialWeapon" {
				internalColor_ = 0;
				onlyIfAi = true;
				weapon = UNIT_ATTRIBUTE_GUN_SCUM_DISRUPTOR;
				unitsToAttack = {
					5;
					UNIT_ATTRIBUTE_BLACK_HOLE,
					UNIT_ATTRIBUTE_GUN_SCUM_DISRUPTOR,
					UNIT_ATTRIBUTE_GUN_BALLISTIC,
					UNIT_ATTRIBUTE_GUN_FILTH_NAVIGATOR,
					UNIT_ATTRIBUTE_CORE
				};
				unitClassToAttack = UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_FRAME | UNIT_CLASS_IGNORE;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 16711808;
			cellIndex = {
				x = 3;
				y = 26;
			};
			boundingRect = {
				left = 864;
				top = 1664;
				right = 1120;
				bottom = 1696;
			};
		},
		{
			name = "старт";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct Action" {
				internalColor_ = 0;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellIndex = {
				x = -2;
				y = 1;
			};
			boundingRect = {
				left = -576;
				top = 64;
				right = -320;
				bottom = 96;
			};
		},
		{
			name = "Camera";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionSetCamera" {
				internalColor_ = 0;
				cameraSplineName = "Camera1";
				stepTime = 0.;
				cycles = 3;
				smoothTransition = true;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellIndex = {
				x = -1;
				y = -5;
			};
			boundingRect = {
				left = -288;
				top = -320;
				right = -32;
				bottom = -288;
			};
		},
		{
			name = "выключить";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelLowerReserve" {
							state_ = false;
							internalColor_ = 0;
							energyReserve = 500.;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionWeaponIsFiring" {
							state_ = false;
							internalColor_ = 0;
							gun = UNIT_ATTRIBUTE_GUN_BALLISTIC;
						};
					}
				};
			};
			action = "struct ActionSwitchGuns" {
				internalColor_ = 0;
				onlyIfAi = true;
				mode = OFF;
				gunID = UNIT_ATTRIBUTE_GUN_SCUM_DISRUPTOR;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellIndex = {
				x = 3;
				y = 27;
			};
			boundingRect = {
				left = 864;
				top = 1728;
				right = 1120;
				bottom = 1760;
			};
		},
		{
			name = "включить";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelUpperReserve" {
							state_ = true;
							internalColor_ = 0;
							energyReserve = 1000.;
						};
					}
				};
			};
			action = "struct ActionSwitchGuns" {
				internalColor_ = 0;
				onlyIfAi = true;
				mode = ON;
				gunID = UNIT_ATTRIBUTE_GUN_SCUM_DISRUPTOR;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellIndex = {
				x = 3;
				y = 28;
			};
			boundingRect = {
				left = 864;
				top = 1792;
				right = 1120;
				bottom = 1824;
			};
		},
		{
			name = "выключить1";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelLowerReserve" {
							state_ = false;
							internalColor_ = 0;
							energyReserve = 500.;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionWeaponIsFiring" {
							state_ = false;
							internalColor_ = 0;
							gun = UNIT_ATTRIBUTE_GUN_BALLISTIC;
						};
					}
				};
			};
			action = "struct ActionSwitchGuns" {
				internalColor_ = 0;
				onlyIfAi = true;
				mode = OFF;
				gunID = UNIT_ATTRIBUTE_GUN_BALLISTIC;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellIndex = {
				x = 5;
				y = 27;
			};
			boundingRect = {
				left = 1440;
				top = 1728;
				right = 1696;
				bottom = 1760;
			};
		},
		{
			name = "включить1";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelUpperReserve" {
							state_ = true;
							internalColor_ = 0;
							energyReserve = 1000.;
						};
					}
				};
			};
			action = "struct ActionSwitchGuns" {
				internalColor_ = 0;
				onlyIfAi = true;
				mode = ON;
				gunID = UNIT_ATTRIBUTE_GUN_BALLISTIC;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellIndex = {
				x = 5;
				y = 28;
			};
			boundingRect = {
				left = 1440;
				top = 1792;
				right = 1696;
				bottom = 1824;
			};
		},
		{
			name = "дополнительный завод солдат0";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_SOLDIER_PLANT;
							counter = 5;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionOutOfEnergyCapacity" {
							state_ = false;
							internalColor_ = 0;
							chargingPercent = 90.;
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_SOLDIER_PLANT;
				placementStrategy = PLACEMENT_STRATEGY_PLANT;
				energyReserve = 50.;
				buildDurationMax = 300;
				priority = 2;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "остановить стр. завода солдат ";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 47541;
			cellIndex = {
				x = 3;
				y = -1;
			};
			boundingRect = {
				left = 864;
				top = -64;
				right = 1120;
				bottom = -32;
			};
		},
		{
			name = "дополнительный завод офицеров0";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					3;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_OFFICER_PLANT;
							counter = 5;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_SOLDIER_PLANT;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = true;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionOutOfEnergyCapacity" {
							state_ = false;
							internalColor_ = 0;
							chargingPercent = 90.;
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_OFFICER_PLANT;
				placementStrategy = PLACEMENT_STRATEGY_PLANT;
				energyReserve = 50.;
				buildDurationMax = 300;
				priority = 2;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "остановить стр. завода офице";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 47541;
			cellIndex = {
				x = 4;
				y = -1;
			};
			boundingRect = {
				left = 1152;
				top = -64;
				right = 1408;
				bottom = -32;
			};
		},
		{
			name = "дополнительный завод техников0";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_TECHNIC_PLANT;
							counter = 5;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionOutOfEnergyCapacity" {
							state_ = false;
							internalColor_ = 0;
							chargingPercent = 90.;
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_TECHNIC_PLANT;
				placementStrategy = PLACEMENT_STRATEGY_PLANT;
				energyReserve = 50.;
				buildDurationMax = 300;
				priority = 2;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "остановить стр. завода техни";
					color = STRATEGY_BLUE;
					type = THIN;
					active_ = false;
					parentOffset = {
						x = -128;
						y = 0;
					};
					childOffset = {
						x = 128;
						y = 0;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 47541;
			cellIndex = {
				x = 6;
				y = 1;
			};
			boundingRect = {
				left = 1728;
				top = 64;
				right = 1984;
				bottom = 96;
			};
		},
		{
			name = "поле=захват";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionBuildingNearBuilding" {
							state_ = false;
							internalColor_ = 0;
							distance = 90.;
							playerType1 = AI_PLAYER_TYPE_ME;
							playerType2 = AI_PLAYER_TYPE_ENEMY;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelUpperReserve" {
							state_ = false;
							internalColor_ = 0;
							energyReserve = 100.;
						};
					}
				};
			};
			action = "struct ActionSwitchFieldOn" {
				internalColor_ = 0;
				onlyIfAi = true;
				duration = 5;
				energyReserve = 0.;
				allCores = true;
				onlyIfCoreDamaged = false;
				timer = {
					time = 0;
				};
			};
			outcomingLinks = {
				1;
				{
					triggerName = "пауза перед полем";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffset = {
						x = 73;
						y = -16;
					};
					childOffset = {
						x = 78;
						y = 16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 255;
			cellIndex = {
				x = 0;
				y = 8;
			};
			boundingRect = {
				left = 0;
				top = 512;
				right = 256;
				bottom = 544;
			};
		},
		{
			name = "пауза перед полем";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionBuildingNearBuilding" {
							state_ = false;
							internalColor_ = 0;
							distance = 90.;
							playerType1 = AI_PLAYER_TYPE_ME;
							playerType2 = AI_PLAYER_TYPE_ENEMY;
						};
					}
				};
			};
			action = "struct ActionDelay" {
				internalColor_ = 0;
				delay = 5;
				showTimer = false;
				scaleByDifficulty = true;
				timer = {
					time = 0;
				};
			};
			outcomingLinks = {
				1;
				{
					triggerName = "поле=захват";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffset = {
						x = 43;
						y = 16;
					};
					childOffset = {
						x = 41;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellIndex = {
				x = 0;
				y = 7;
			};
			boundingRect = {
				left = 0;
				top = 448;
				right = 256;
				bottom = 480;
			};
		},
		{
			name = "!!!ядро к врагу ";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					5;
					{
						type = NORMAL;
						condition = "struct ConditionBuildingNearBuilding" {
							state_ = false;
							internalColor_ = 0;
							distance = 1000.;
							playerType1 = AI_PLAYER_TYPE_ME;
							playerType2 = AI_PLAYER_TYPE_ENEMY;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionBuildingNearBuilding" {
							state_ = false;
							internalColor_ = 0;
							distance = 500.;
							playerType1 = AI_PLAYER_TYPE_ME;
							playerType2 = AI_PLAYER_TYPE_WORLD;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_CORE;
							counter = 3;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = true;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_BOMB_STATION3;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = true;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelUpperReserve" {
							state_ = true;
							internalColor_ = 0;
							energyReserve = 1000.;
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_CORE;
				placementStrategy = PLACEMENT_STRATEGY_CORE_OFFENSIVE;
				energyReserve = 50.;
				buildDurationMax = 300;
				priority = 1;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 16744703;
			cellIndex = {
				x = 2;
				y = -1;
			};
			boundingRect = {
				left = 576;
				top = -64;
				right = 832;
				bottom = -32;
			};
		},
		{
			name = "старт1";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct Action" {
				internalColor_ = 0;
			};
			outcomingLinks = {
				26;
				{
					triggerName = "ИСХОДНИКИ 1";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = -72;
						y = 16;
					};
					childOffset = {
						x = 72;
						y = -16;
					};
				},
				{
					triggerName = "ИМПЕРИЯ 1";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 72;
						y = 16;
					};
					childOffset = {
						x = -72;
						y = -16;
					};
				},
				{
					triggerName = "ИСХОДНИКИ 2";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = -18;
						y = 16;
					};
					childOffset = {
						x = 18;
						y = -16;
					};
				},
				{
					triggerName = "ИМПЕРИЯ 2";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 18;
						y = 16;
					};
					childOffset = {
						x = -18;
						y = -16;
					};
				},
				{
					triggerName = "ИСХОДНИКИ 3";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = -11;
						y = 16;
					};
					childOffset = {
						x = 10;
						y = -16;
					};
				},
				{
					triggerName = "ИМПЕРИИ 3";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 10;
						y = 16;
					};
					childOffset = {
						x = -11;
						y = -16;
					};
				},
				{
					triggerName = "скаморазрушитель";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = -8;
						y = 16;
					};
					childOffset = {
						x = 7;
						y = -16;
					};
				},
				{
					triggerName = "баллистическая ракета";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 7;
						y = 16;
					};
					childOffset = {
						x = -8;
						y = -16;
					};
				},
				{
					triggerName = "атаковать  скамразрушителем";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = -6;
						y = 16;
					};
					childOffset = {
						x = 6;
						y = -16;
					};
				},
				{
					triggerName = "атаковать баллистической ракетой";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 6;
						y = 16;
					};
					childOffset = {
						x = -6;
						y = -16;
					};
				},
				{
					triggerName = "включить1";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 5;
						y = 16;
					};
					childOffset = {
						x = -6;
						y = -16;
					};
				},
				{
					triggerName = "включить";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = -6;
						y = 16;
					};
					childOffset = {
						x = 5;
						y = -16;
					};
				},
				{
					triggerName = "выключить1";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 5;
						y = 16;
					};
					childOffset = {
						x = -6;
						y = -16;
					};
				},
				{
					triggerName = "выключить";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = -6;
						y = 16;
					};
					childOffset = {
						x = 5;
						y = -16;
					};
				},
				{
					triggerName = "продавать 1243";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = -24;
						y = 16;
					};
					childOffset = {
						x = 24;
						y = -16;
					};
				},
				{
					triggerName = "продавать 124";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 24;
						y = 16;
					};
					childOffset = {
						x = -24;
						y = -16;
					};
				},
				{
					triggerName = "продавать 12430";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = -12;
						y = 16;
					};
					childOffset = {
						x = 12;
						y = -16;
					};
				},
				{
					triggerName = "продавать 1240";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 12;
						y = 16;
					};
					childOffset = {
						x = -12;
						y = -16;
					};
				},
				{
					triggerName = "продавать 12431";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = -8;
						y = 16;
					};
					childOffset = {
						x = 8;
						y = -16;
					};
				},
				{
					triggerName = "продавать 1241";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 8;
						y = 16;
					};
					childOffset = {
						x = -8;
						y = -16;
					};
				},
				{
					triggerName = "продавать 1244";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 48;
						y = 16;
					};
					childOffset = {
						x = -48;
						y = -16;
					};
				},
				{
					triggerName = "продавать 12400";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 24;
						y = 16;
					};
					childOffset = {
						x = -24;
						y = -16;
					};
				},
				{
					triggerName = "продавать 12410";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 16;
						y = 16;
					};
					childOffset = {
						x = -16;
						y = -16;
					};
				},
				{
					triggerName = "продавать 12432";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = -48;
						y = 16;
					};
					childOffset = {
						x = 48;
						y = -16;
					};
				},
				{
					triggerName = "продавать 124300";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = -24;
						y = 16;
					};
					childOffset = {
						x = 24;
						y = -16;
					};
				},
				{
					triggerName = "продавать 124310";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = -16;
						y = 16;
					};
					childOffset = {
						x = 16;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellIndex = {
				x = 4;
				y = 14;
			};
			boundingRect = {
				left = 1152;
				top = 896;
				right = 1408;
				bottom = 928;
			};
		},
		{
			name = "старт2";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct Action" {
				internalColor_ = 0;
			};
			outcomingLinks = {
				58;
				{
					triggerName = "продавать любое строение";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = -72;
						y = 16;
					};
					childOffset = {
						x = 72;
						y = -16;
					};
				},
				{
					triggerName = "дополнительный завод солдат0";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = -36;
						y = 16;
					};
					childOffset = {
						x = 36;
						y = -16;
					};
				},
				{
					triggerName = "дополнительный завод офицеров0";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				},
				{
					triggerName = "дополнительный завод техников0";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 36;
						y = 16;
					};
					childOffset = {
						x = -36;
						y = -16;
					};
				},
				{
					triggerName = "Technic Plant";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 24;
						y = 16;
					};
					childOffset = {
						x = -24;
						y = -16;
					};
				},
				{
					triggerName = "Soldier Plant";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = -24;
						y = 16;
					};
					childOffset = {
						x = 24;
						y = -16;
					};
				},
				{
					triggerName = "Officier Plant";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				},
				{
					triggerName = "дополнительный завод техников";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 14;
						y = 16;
					};
					childOffset = {
						x = -15;
						y = -16;
					};
				},
				{
					triggerName = "дополнительный завод офицеров";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				},
				{
					triggerName = "дополнительный завод солдат";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = -15;
						y = 16;
					};
					childOffset = {
						x = 14;
						y = -16;
					};
				},
				{
					triggerName = "Rocket1";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = -12;
						y = 16;
					};
					childOffset = {
						x = 12;
						y = -16;
					};
				},
				{
					triggerName = "Laser1";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				},
				{
					triggerName = "Bomb1";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 12;
						y = 16;
					};
					childOffset = {
						x = -12;
						y = -16;
					};
				},
				{
					triggerName = "Rocket2";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = -8;
						y = 16;
					};
					childOffset = {
						x = 8;
						y = -16;
					};
				},
				{
					triggerName = "ракетница";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = -5;
						y = 16;
					};
					childOffset = {
						x = 4;
						y = -16;
					};
				},
				{
					triggerName = "Laser2";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				},
				{
					triggerName = "Laser3";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				},
				{
					triggerName = "лазерная пушка";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				},
				{
					triggerName = "Bomb2";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 8;
						y = 16;
					};
					childOffset = {
						x = -8;
						y = -16;
					};
				},
				{
					triggerName = "летная лаборатория";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = -21;
						y = 16;
					};
					childOffset = {
						x = 20;
						y = -16;
					};
				},
				{
					triggerName = "Place Core";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = -48;
						y = 16;
					};
					childOffset = {
						x = 48;
						y = -16;
					};
				},
				{
					triggerName = "ядро к врагу";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = -36;
						y = 16;
					};
					childOffset = {
						x = 36;
						y = -16;
					};
				},
				{
					triggerName = "!!!ядро к врагу ";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = -72;
						y = 16;
					};
					childOffset = {
						x = 72;
						y = -16;
					};
				},
				{
					triggerName = "захват строений";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = -29;
						y = 16;
					};
					childOffset = {
						x = 28;
						y = -16;
					};
				},
				{
					triggerName = "летная 2";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = -15;
						y = 16;
					};
					childOffset = {
						x = 14;
						y = -16;
					};
				},
				{
					triggerName = "подземная лаборатория";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = -31;
						y = 16;
					};
					childOffset = {
						x = 30;
						y = -16;
					};
				},
				{
					triggerName = "подземная пушка";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = -17;
						y = 16;
					};
					childOffset = {
						x = 16;
						y = -16;
					};
				},
				{
					triggerName = "командный центр1";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = -44;
						y = 16;
					};
					childOffset = {
						x = 43;
						y = -16;
					};
				},
				{
					triggerName = "Усилитель";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = -96;
						y = 16;
					};
					childOffset = {
						x = 96;
						y = -16;
					};
				},
				{
					triggerName = "пауза перед полем";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffset = {
						x = -29;
						y = 16;
					};
					childOffset = {
						x = 28;
						y = -16;
					};
				},
				{
					triggerName = "Усилитель0";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = -120;
						y = 16;
					};
					childOffset = {
						x = 120;
						y = -16;
					};
				},
				{
					triggerName = "подземная лаборатория0";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = -42;
						y = 16;
					};
					childOffset = {
						x = 41;
						y = -16;
					};
				},
				{
					triggerName = "подземная пушка0";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = -23;
						y = 16;
					};
					childOffset = {
						x = 22;
						y = -16;
					};
				},
				{
					triggerName = "продавать 122";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = -58;
						y = 16;
					};
					childOffset = {
						x = 57;
						y = -16;
					};
				},
				{
					triggerName = "продавать 1231";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = -24;
						y = 16;
					};
					childOffset = {
						x = 24;
						y = -16;
					};
				},
				{
					triggerName = "продавать 123";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = -16;
						y = 16;
					};
					childOffset = {
						x = 16;
						y = -16;
					};
				},
				{
					triggerName = "продавать 1230";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = -12;
						y = 16;
					};
					childOffset = {
						x = 12;
						y = -16;
					};
				},
				{
					triggerName = "продать гаубицу";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 4;
						y = 16;
					};
					childOffset = {
						x = -5;
						y = -16;
					};
				},
				{
					triggerName = "Place Core0";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = -128;
						y = 0;
					};
					childOffset = {
						x = 128;
						y = 0;
					};
				},
				{
					triggerName = "лазерная пушка0";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				},
				{
					triggerName = "ракетница0";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = -5;
						y = 16;
					};
					childOffset = {
						x = 4;
						y = -16;
					};
				},
				{
					triggerName = "продавать 121";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 5;
						y = 16;
					};
					childOffset = {
						x = -6;
						y = -16;
					};
				},
				{
					triggerName = "продавать 00";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				},
				{
					triggerName = "продавать 11";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = -6;
						y = 16;
					};
					childOffset = {
						x = 5;
						y = -16;
					};
				},
				{
					triggerName = "продавать 10";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = -7;
						y = 16;
					};
					childOffset = {
						x = 6;
						y = -16;
					};
				},
				{
					triggerName = "продавать 0";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				},
				{
					triggerName = "продавать 120";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 6;
						y = 16;
					};
					childOffset = {
						x = -7;
						y = -16;
					};
				},
				{
					triggerName = "продавать 12";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 9;
						y = 16;
					};
					childOffset = {
						x = -9;
						y = -16;
					};
				},
				{
					triggerName = "продавать ";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				},
				{
					triggerName = "продавать 1";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = -9;
						y = 16;
					};
					childOffset = {
						x = 9;
						y = -16;
					};
				},
				{
					triggerName = "Bomb100";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 24;
						y = 16;
					};
					childOffset = {
						x = -24;
						y = -16;
					};
				},
				{
					triggerName = "Bomb10";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 36;
						y = 16;
					};
					childOffset = {
						x = -36;
						y = -16;
					};
				},
				{
					triggerName = "Bomb20";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 16;
						y = 16;
					};
					childOffset = {
						x = -16;
						y = -16;
					};
				},
				{
					triggerName = "Bomb200";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 24;
						y = 16;
					};
					childOffset = {
						x = -24;
						y = -16;
					};
				},
				{
					triggerName = "Bomb30";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 13;
						y = 16;
					};
					childOffset = {
						x = -14;
						y = -16;
					};
				},
				{
					triggerName = "Bomb300";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 19;
						y = 16;
					};
					childOffset = {
						x = -20;
						y = -16;
					};
				},
				{
					triggerName = "гаубица";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 4;
						y = 16;
					};
					childOffset = {
						x = -5;
						y = -16;
					};
				},
				{
					triggerName = "гаубица0";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 9;
						y = 16;
					};
					childOffset = {
						x = -10;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellIndex = {
				x = 4;
				y = -3;
			};
			boundingRect = {
				left = 1152;
				top = -192;
				right = 1408;
				bottom = -160;
			};
		},
		{
			name = "Усилитель0";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					4;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_CORE;
							counter = 3;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = true;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionOutOfEnergyCapacity" {
							state_ = false;
							internalColor_ = 0;
							chargingPercent = 90.;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelUpperReserve" {
							state_ = false;
							internalColor_ = 0;
							energyReserve = 30001.;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionBuildingNearBuilding" {
							state_ = false;
							internalColor_ = 0;
							distance = 500.;
							playerType1 = AI_PLAYER_TYPE_ME;
							playerType2 = AI_PLAYER_TYPE_WORLD;
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 12189692;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_COLLECTOR;
				placementStrategy = PLACEMENT_STRATEGY_PLANT;
				energyReserve = 0.;
				buildDurationMax = 1000;
				priority = 3;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "остановить стр. усилителя";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffset = {
						x = 104;
						y = 16;
					};
					childOffset = {
						x = -128;
						y = -6;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 65535;
			cellIndex = {
				x = -1;
				y = 0;
			};
			boundingRect = {
				left = -288;
				top = 0;
				right = -32;
				bottom = 32;
			};
		},
		{
			name = "подземная лаборатория0";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = false;
							internalColor_ = 0;
							type = OR;
							conditions = {
								2;
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = false;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_SUBTERRA_STATION1;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ENEMY;
										constructedAndConstructing = true;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = false;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_SUBTERRA_STATION2;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ENEMY;
										constructedAndConstructing = true;
									};
								}
							};
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 12189692;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_SUBTERRA_STATION1;
				placementStrategy = PLACEMENT_STRATEGY_STATION;
				energyReserve = 50.;
				buildDurationMax = 1000;
				priority = 1;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 65535;
			cellIndex = {
				x = 0;
				y = 4;
			};
			boundingRect = {
				left = 0;
				top = 256;
				right = 256;
				bottom = 288;
			};
		},
		{
			name = "подземная пушка0";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionNumberOfBuildingByCoresCapacity" {
							state_ = true;
							internalColor_ = 0;
							building = UNIT_ATTRIBUTE_GUN_SUBCHASER;
							factor = 1.;
							compareOp = COMPARE_LESS;
							building2 = UNIT_ATTRIBUTE_CORE;
							playerType = AI_PLAYER_TYPE_ME;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_GUN_SUBCHASER;
							counter = 3;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = true;
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 12189692;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_GUN_SUBCHASER;
				placementStrategy = PLACEMENT_STRATEGY_GUN;
				energyReserve = 0.;
				buildDurationMax = 300;
				priority = 0;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 65535;
			cellIndex = {
				x = 0;
				y = 10;
			};
			boundingRect = {
				left = 0;
				top = 640;
				right = 256;
				bottom = 672;
			};
		},
		{
			name = "лазерная пушка0";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = OR;
				conditions = {
					2;
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_ELECTRO_CANNON;
							counter = 5;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = true;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionNumberOfBuildingByCoresCapacity" {
							state_ = true;
							internalColor_ = 12189692;
							building = UNIT_ATTRIBUTE_ELECTRO_CANNON;
							factor = 0.3;
							compareOp = COMPARE_LESS;
							building2 = UNIT_ATTRIBUTE_CORE;
							playerType = AI_PLAYER_TYPE_ME;
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 12189692;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_ELECTRO_CANNON;
				placementStrategy = PLACEMENT_STRATEGY_GUN;
				energyReserve = 0.;
				buildDurationMax = 500;
				priority = 0;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 65535;
			cellIndex = {
				x = 4;
				y = 13;
			};
			boundingRect = {
				left = 1152;
				top = 832;
				right = 1408;
				bottom = 864;
			};
		},
		{
			name = "ракетница0";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = OR;
				conditions = {
					2;
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_ROCKET_LAUNCHER;
							counter = 3;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = true;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionNumberOfBuildingByCoresCapacity" {
							state_ = true;
							internalColor_ = 0;
							building = UNIT_ATTRIBUTE_ROCKET_LAUNCHER;
							factor = 0.3;
							compareOp = COMPARE_LESS;
							building2 = UNIT_ATTRIBUTE_CORE;
							playerType = AI_PLAYER_TYPE_ME;
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 12189692;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_ROCKET_LAUNCHER;
				placementStrategy = PLACEMENT_STRATEGY_GUN;
				energyReserve = 0.;
				buildDurationMax = 500;
				priority = 0;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 65535;
			cellIndex = {
				x = 3;
				y = 13;
			};
			boundingRect = {
				left = 864;
				top = 832;
				right = 1120;
				bottom = 864;
			};
		},
		{
			name = "продавать 1243";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = OR;
				conditions = {
					3;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_EXODUS_STATION1;
							counter = 2;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_EXODUS_STATION2;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_EXODUS_STATION3;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					}
				};
			};
			action = "struct ActionSellBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_EXODUS_STATION1;
				sellFactor = AI_SELL_CLOSEST_TO_FRAME;
				damagePercent = 0.;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 255;
			cellIndex = {
				x = 3;
				y = 17;
			};
			boundingRect = {
				left = 864;
				top = 1088;
				right = 1120;
				bottom = 1120;
			};
		},
		{
			name = "продавать 124";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = OR;
				conditions = {
					3;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_EMPIRE_STATION1;
							counter = 2;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_EMPIRE_STATION2;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_EMPIRE_STATION3;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					}
				};
			};
			action = "struct ActionSellBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_EMPIRE_STATION1;
				sellFactor = AI_SELL_CLOSEST_TO_FRAME;
				damagePercent = 0.;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 255;
			cellIndex = {
				x = 5;
				y = 17;
			};
			boundingRect = {
				left = 1440;
				top = 1088;
				right = 1696;
				bottom = 1120;
			};
		},
		{
			name = "продавать 12430";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = OR;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_EXODUS_STATION2;
							counter = 2;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_EXODUS_STATION3;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					}
				};
			};
			action = "struct ActionSellBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_EXODUS_STATION2;
				sellFactor = AI_SELL_CLOSEST_TO_FRAME;
				damagePercent = 0.;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 255;
			cellIndex = {
				x = 3;
				y = 20;
			};
			boundingRect = {
				left = 864;
				top = 1280;
				right = 1120;
				bottom = 1312;
			};
		},
		{
			name = "продавать 1240";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = OR;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_EMPIRE_STATION2;
							counter = 2;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_EMPIRE_STATION3;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					}
				};
			};
			action = "struct ActionSellBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_EMPIRE_STATION2;
				sellFactor = AI_SELL_CLOSEST_TO_FRAME;
				damagePercent = 0.;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 255;
			cellIndex = {
				x = 5;
				y = 20;
			};
			boundingRect = {
				left = 1440;
				top = 1280;
				right = 1696;
				bottom = 1312;
			};
		},
		{
			name = "продавать 12431";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = OR;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_EXODUS_STATION3;
							counter = 2;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					}
				};
			};
			action = "struct ActionSellBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_EXODUS_STATION3;
				sellFactor = AI_SELL_CLOSEST_TO_FRAME;
				damagePercent = 0.;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 255;
			cellIndex = {
				x = 3;
				y = 23;
			};
			boundingRect = {
				left = 864;
				top = 1472;
				right = 1120;
				bottom = 1504;
			};
		},
		{
			name = "продавать 1241";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = OR;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_EMPIRE_STATION3;
							counter = 2;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					}
				};
			};
			action = "struct ActionSellBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_EMPIRE_STATION3;
				sellFactor = AI_SELL_CLOSEST_TO_FRAME;
				damagePercent = 0.;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 255;
			cellIndex = {
				x = 5;
				y = 23;
			};
			boundingRect = {
				left = 1440;
				top = 1472;
				right = 1696;
				bottom = 1504;
			};
		},
		{
			name = "продавать 121";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = OR;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_BOMB_STATION3;
							counter = 2;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					}
				};
			};
			action = "struct ActionSellBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_BOMB_STATION3;
				sellFactor = AI_SELL_FAREST_FROM_FRAME;
				damagePercent = 0.;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 255;
			cellIndex = {
				x = 5;
				y = 11;
			};
			boundingRect = {
				left = 1440;
				top = 704;
				right = 1696;
				bottom = 736;
			};
		},
		{
			name = "продавать 00";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = OR;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_ELECTRO_STATION3;
							counter = 2;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					}
				};
			};
			action = "struct ActionSellBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_ELECTRO_STATION3;
				sellFactor = AI_SELL_FAREST_FROM_FRAME;
				damagePercent = 0.;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 255;
			cellIndex = {
				x = 4;
				y = 11;
			};
			boundingRect = {
				left = 1152;
				top = 704;
				right = 1408;
				bottom = 736;
			};
		},
		{
			name = "продавать 11";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = OR;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_ROCKET_STATION3;
							counter = 2;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					}
				};
			};
			action = "struct ActionSellBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_ROCKET_STATION3;
				sellFactor = AI_SELL_FAREST_FROM_FRAME;
				damagePercent = 0.;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 255;
			cellIndex = {
				x = 3;
				y = 11;
			};
			boundingRect = {
				left = 864;
				top = 704;
				right = 1120;
				bottom = 736;
			};
		},
		{
			name = "продавать 10";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = OR;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_ROCKET_STATION2;
							counter = 2;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_ROCKET_STATION3;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					}
				};
			};
			action = "struct ActionSellBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_ROCKET_STATION2;
				sellFactor = AI_SELL_FAREST_FROM_FRAME;
				damagePercent = 0.;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 255;
			cellIndex = {
				x = 3;
				y = 8;
			};
			boundingRect = {
				left = 864;
				top = 512;
				right = 1120;
				bottom = 544;
			};
		},
		{
			name = "продавать 0";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = OR;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_ELECTRO_STATION2;
							counter = 2;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_ELECTRO_STATION3;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					}
				};
			};
			action = "struct ActionSellBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_ELECTRO_STATION2;
				sellFactor = AI_SELL_FAREST_FROM_FRAME;
				damagePercent = 0.;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 255;
			cellIndex = {
				x = 4;
				y = 8;
			};
			boundingRect = {
				left = 1152;
				top = 512;
				right = 1408;
				bottom = 544;
			};
		},
		{
			name = "продавать 120";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = OR;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_BOMB_STATION2;
							counter = 2;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_BOMB_STATION3;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					}
				};
			};
			action = "struct ActionSellBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_BOMB_STATION2;
				sellFactor = AI_SELL_FAREST_FROM_FRAME;
				damagePercent = 0.;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 255;
			cellIndex = {
				x = 5;
				y = 8;
			};
			boundingRect = {
				left = 1440;
				top = 512;
				right = 1696;
				bottom = 544;
			};
		},
		{
			name = "продавать 12";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = OR;
				conditions = {
					3;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_BOMB_STATION1;
							counter = 2;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_BOMB_STATION2;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_BOMB_STATION3;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					}
				};
			};
			action = "struct ActionSellBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_BOMB_STATION1;
				sellFactor = AI_SELL_FAREST_FROM_FRAME;
				damagePercent = 0.;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 255;
			cellIndex = {
				x = 5;
				y = 5;
			};
			boundingRect = {
				left = 1440;
				top = 320;
				right = 1696;
				bottom = 352;
			};
		},
		{
			name = "продавать ";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = OR;
				conditions = {
					3;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_ELECTRO_STATION1;
							counter = 2;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_ELECTRO_STATION2;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_ELECTRO_STATION3;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					}
				};
			};
			action = "struct ActionSellBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_ELECTRO_STATION1;
				sellFactor = AI_SELL_FAREST_FROM_FRAME;
				damagePercent = 0.;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 255;
			cellIndex = {
				x = 4;
				y = 5;
			};
			boundingRect = {
				left = 1152;
				top = 320;
				right = 1408;
				bottom = 352;
			};
		},
		{
			name = "продавать 1";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = OR;
				conditions = {
					3;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_ROCKET_STATION1;
							counter = 2;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_ROCKET_STATION2;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_ROCKET_STATION3;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					}
				};
			};
			action = "struct ActionSellBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_ROCKET_STATION1;
				sellFactor = AI_SELL_FAREST_FROM_FRAME;
				damagePercent = 0.;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 255;
			cellIndex = {
				x = 3;
				y = 5;
			};
			boundingRect = {
				left = 864;
				top = 320;
				right = 1120;
				bottom = 352;
			};
		},
		{
			name = "продавать 123";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = OR;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_FLY_STATION1;
							counter = 2;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_FLY_STATION2;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					}
				};
			};
			action = "struct ActionSellBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_FLY_STATION1;
				sellFactor = AI_SELL_FAREST_FROM_FRAME;
				damagePercent = 0.;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 255;
			cellIndex = {
				x = 2;
				y = 6;
			};
			boundingRect = {
				left = 576;
				top = 384;
				right = 832;
				bottom = 416;
			};
		},
		{
			name = "продавать 1231";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = OR;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_SUBTERRA_STATION1;
							counter = 2;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_SUBTERRA_STATION2;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					}
				};
			};
			action = "struct ActionSellBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_SUBTERRA_STATION1;
				sellFactor = AI_SELL_FAREST_FROM_FRAME;
				damagePercent = 0.;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 255;
			cellIndex = {
				x = 1;
				y = 6;
			};
			boundingRect = {
				left = 288;
				top = 384;
				right = 544;
				bottom = 416;
			};
		},
		{
			name = "продавать 1230";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = OR;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_FLY_STATION2;
							counter = 2;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					}
				};
			};
			action = "struct ActionSellBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_FLY_STATION2;
				sellFactor = AI_SELL_FAREST_FROM_FRAME;
				damagePercent = 0.;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 255;
			cellIndex = {
				x = 2;
				y = 9;
			};
			boundingRect = {
				left = 576;
				top = 576;
				right = 832;
				bottom = 608;
			};
		},
		{
			name = "продавать 122";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = OR;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_COMMANDER;
							counter = 2;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					}
				};
			};
			action = "struct ActionSellBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_COMMANDER;
				sellFactor = AI_SELL_FAREST_FROM_FRAME;
				damagePercent = 0.;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 255;
			cellIndex = {
				x = 0;
				y = 2;
			};
			boundingRect = {
				left = 0;
				top = 128;
				right = 256;
				bottom = 160;
			};
		},
		{
			name = "UserCamera";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = 0;
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellIndex = {
				x = 1;
				y = 16;
			};
			boundingRect = {
				left = 288;
				top = 1024;
				right = 544;
				bottom = 1056;
			};
		},
		{
			name = "вкл. поле0";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionUnitClassUnderAttack" {
							state_ = false;
							internalColor_ = 0;
							victimUnitClass = UNIT_CLASS_STRUCTURE | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_STRUCTURE_SPECIAL | UNIT_CLASS_MISSILE | UNIT_CLASS_IGNORE;
							damagePercent = 80;
							agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_IGNORE;
							playerType = AI_PLAYER_TYPE_ME;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelUpperReserve" {
							state_ = true;
							internalColor_ = 0;
							energyReserve = 300.;
						};
					}
				};
			};
			action = "struct ActionSwitchFieldOn" {
				internalColor_ = 0;
				onlyIfAi = true;
				duration = 50;
				energyReserve = 0.;
				allCores = false;
				onlyIfCoreDamaged = false;
				timer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 255;
			cellIndex = {
				x = 1;
				y = -2;
			};
			boundingRect = {
				left = 288;
				top = -128;
				right = 544;
				bottom = -96;
			};
		},
		{
			name = "продавать 1244";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = OR;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionCheckBelligerent" {
							state_ = false;
							internalColor_ = 0;
							belligerent = EXODUS;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionCheckBelligerent" {
							state_ = false;
							internalColor_ = 0;
							belligerent = EXODUS;
						};
					}
				};
			};
			action = "struct ActionSellBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_EMPIRE_STATION1;
				sellFactor = AI_SELL_CLOSEST_TO_FRAME;
				damagePercent = 0.;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 255;
			cellIndex = {
				x = 6;
				y = 17;
			};
			boundingRect = {
				left = 1728;
				top = 1088;
				right = 1984;
				bottom = 1120;
			};
		},
		{
			name = "продавать 12400";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = OR;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionCheckBelligerent" {
							state_ = false;
							internalColor_ = 0;
							belligerent = EXODUS;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionCheckBelligerent" {
							state_ = false;
							internalColor_ = 0;
							belligerent = EXODUS;
						};
					}
				};
			};
			action = "struct ActionSellBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_EMPIRE_STATION2;
				sellFactor = AI_SELL_CLOSEST_TO_FRAME;
				damagePercent = 0.;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 255;
			cellIndex = {
				x = 6;
				y = 20;
			};
			boundingRect = {
				left = 1728;
				top = 1280;
				right = 1984;
				bottom = 1312;
			};
		},
		{
			name = "продавать 12410";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = OR;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionCheckBelligerent" {
							state_ = false;
							internalColor_ = 0;
							belligerent = EXODUS;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionCheckBelligerent" {
							state_ = false;
							internalColor_ = 0;
							belligerent = EXODUS;
						};
					}
				};
			};
			action = "struct ActionSellBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_EMPIRE_STATION3;
				sellFactor = AI_SELL_CLOSEST_TO_FRAME;
				damagePercent = 0.;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 255;
			cellIndex = {
				x = 6;
				y = 23;
			};
			boundingRect = {
				left = 1728;
				top = 1472;
				right = 1984;
				bottom = 1504;
			};
		},
		{
			name = "продавать 12432";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = OR;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionCheckBelligerent" {
							state_ = false;
							internalColor_ = 0;
							belligerent = HARKBACKHOOD;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionCheckBelligerent" {
							state_ = true;
							internalColor_ = 0;
							belligerent = EMPIRE;
						};
					}
				};
			};
			action = "struct ActionSellBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_EXODUS_STATION1;
				sellFactor = AI_SELL_CLOSEST_TO_FRAME;
				damagePercent = 0.;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 255;
			cellIndex = {
				x = 2;
				y = 17;
			};
			boundingRect = {
				left = 576;
				top = 1088;
				right = 832;
				bottom = 1120;
			};
		},
		{
			name = "продавать 124300";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = OR;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionCheckBelligerent" {
							state_ = false;
							internalColor_ = 0;
							belligerent = HARKBACKHOOD;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionCheckBelligerent" {
							state_ = true;
							internalColor_ = 0;
							belligerent = EMPIRE;
						};
					}
				};
			};
			action = "struct ActionSellBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_EXODUS_STATION2;
				sellFactor = AI_SELL_CLOSEST_TO_FRAME;
				damagePercent = 0.;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 255;
			cellIndex = {
				x = 2;
				y = 20;
			};
			boundingRect = {
				left = 576;
				top = 1280;
				right = 832;
				bottom = 1312;
			};
		},
		{
			name = "продавать 124310";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = OR;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionCheckBelligerent" {
							state_ = false;
							internalColor_ = 0;
							belligerent = HARKBACKHOOD;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionCheckBelligerent" {
							state_ = true;
							internalColor_ = 0;
							belligerent = EMPIRE;
						};
					}
				};
			};
			action = "struct ActionSellBuilding" {
				internalColor_ = 0;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_EXODUS_STATION3;
				sellFactor = AI_SELL_CLOSEST_TO_FRAME;
				damagePercent = 0.;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 255;
			cellIndex = {
				x = 2;
				y = 23;
			};
			boundingRect = {
				left = 576;
				top = 1472;
				right = 832;
				bottom = 1504;
			};
		},
		{
			name = "С1-заказать юнитов11";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					3;
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = true;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_CEPTOR;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_EFLAIR;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = false;
							internalColor_ = 0;
							type = OR;
							conditions = {
								2;
								{
									type = NORMAL;
									condition = "struct ConditionMutationEnabled" {
										state_ = false;
										internalColor_ = 0;
										unitType = UNIT_ATTRIBUTE_GYROID;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionMutationEnabled" {
										state_ = false;
										internalColor_ = 0;
										unitType = UNIT_ATTRIBUTE_STRAFER;
									};
								}
							};
						};
					}
				};
			};
			action = "struct ActionSquadOrderUnits" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_1;
				soldiers = 40;
				officers = 80;
				technics = 30;
				energyReserve = 0.;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 8454016;
			cellIndex = {
				x = -3;
				y = 45;
			};
			boundingRect = {
				left = -864;
				top = 2880;
				right = -608;
				bottom = 2912;
			};
		},
		{
			name = "С 1 - героид12";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					3;
					{
						type = INVERTED;
						condition = "struct ConditionUnitClassIsGoingToBeAttacked" {
							state_ = false;
							internalColor_ = 255;
							victimUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_STRUCTURE | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_STRUCTURE_SPECIAL | UNIT_CLASS_STRUCTURE_CORE | UNIT_CLASS_FRAME | UNIT_CLASS_BUILDER | UNIT_CLASS_TRUCK | UNIT_CLASS_BLOCK | UNIT_CLASS_IGNORE;
							agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_IGNORE;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = true;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_CEPTOR;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_EFLAIR;
						};
					}
				};
			};
			action = "struct ActionSquadAttack" {
				internalColor_ = 16629619;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_1;
				attackByType = UNIT_ATTRIBUTE_GYROID;
				unitsToAttack = {
					0;
				};
				unitClassToAttack = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_BUILDER | UNIT_CLASS_AIR_FILTH | UNIT_CLASS_GROUND_FILTH | UNIT_CLASS_IGNORE;
				offensive = true;
				unitsNumber = 20;
				soldiers = 0;
				officers = 0;
				technics = 0;
				attackTime = 30;
				remutateCounter = 1;
				holdProduction = true;
				squadFollowDistance = 0.;
				squadToFollowBy = CHOOSE_SQUAD_2;
				ignoreLastTarget = false;
				returnToBase = true;
				interruptable = true;
				attackTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 16744576;
			cellIndex = {
				x = -3;
				y = 46;
			};
			boundingRect = {
				left = -864;
				top = 2944;
				right = -608;
				bottom = 2976;
			};
		},
		{
			name = "С 1 - героид0001";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					3;
					{
						type = NORMAL;
						condition = "struct ConditionUnitClassIsGoingToBeAttacked" {
							state_ = false;
							internalColor_ = 255;
							victimUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_STRUCTURE | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_STRUCTURE_SPECIAL | UNIT_CLASS_STRUCTURE_CORE | UNIT_CLASS_FRAME | UNIT_CLASS_BUILDER | UNIT_CLASS_TRUCK | UNIT_CLASS_BLOCK | UNIT_CLASS_IGNORE;
							agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_IGNORE;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_CEPTOR;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = true;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_EFLAIR;
						};
					}
				};
			};
			action = "struct ActionSquadAttack" {
				internalColor_ = 16629619;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_1;
				attackByType = UNIT_ATTRIBUTE_GYROID;
				unitsToAttack = {
					0;
				};
				unitClassToAttack = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_IGNORE;
				offensive = true;
				unitsNumber = 1;
				soldiers = 0;
				officers = 0;
				technics = 0;
				attackTime = 10;
				remutateCounter = 1;
				holdProduction = false;
				squadFollowDistance = 0.;
				squadToFollowBy = CHOOSE_SQUAD_1;
				ignoreLastTarget = false;
				returnToBase = true;
				interruptable = false;
				attackTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 16777088;
			cellIndex = {
				x = -3;
				y = 47;
			};
			boundingRect = {
				left = -864;
				top = 3008;
				right = -608;
				bottom = 3040;
			};
		},
		{
			name = "легкий";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionDifficultyLevel" {
							state_ = false;
							internalColor_ = 0;
							difficulty = DIFFICULTY_EASY;
						};
					}
				};
			};
			action = "struct Action" {
				internalColor_ = 0;
			};
			outcomingLinks = {
				13;
				{
					triggerName = "С 1 - героид0001";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 97;
						y = 16;
					};
					childOffset = {
						x = -57;
						y = -16;
					};
				},
				{
					triggerName = "С 1 - героид12";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 119;
						y = 16;
					};
					childOffset = {
						x = -70;
						y = -16;
					};
				},
				{
					triggerName = "С1-заказать юнитов11";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 128;
						y = 11;
					};
					childOffset = {
						x = -75;
						y = -16;
					};
				},
				{
					triggerName = "С 1 - героид0001";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 97;
						y = 16;
					};
					childOffset = {
						x = -57;
						y = -16;
					};
				},
				{
					triggerName = "С 1 - героид12";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 119;
						y = 16;
					};
					childOffset = {
						x = -70;
						y = -16;
					};
				},
				{
					triggerName = "С1-заказать юнитов11";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 128;
						y = 11;
					};
					childOffset = {
						x = -75;
						y = -16;
					};
				},
				{
					triggerName = "С 1- стрейфер1";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = -120;
						y = 16;
					};
					childOffset = {
						x = 124;
						y = -16;
					};
				},
				{
					triggerName = "С1- базовые : рокер1";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 23;
						y = 16;
					};
					childOffset = {
						x = 22;
						y = -16;
					};
				},
				{
					triggerName = "C1-электротанк";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				},
				{
					triggerName = "C1-электротанк0";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				},
				{
					triggerName = "С1- цептор 200";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				},
				{
					triggerName = "С1-цептор атака";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				},
				{
					triggerName = "С1-электросамолет";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellIndex = {
				x = -4;
				y = 40;
			};
			boundingRect = {
				left = -1152;
				top = 2560;
				right = -896;
				bottom = 2592;
			};
		},
		{
			name = "С 1- стрейфер1";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					4;
					{
						type = NORMAL;
						condition = "struct ConditionUnitClassIsGoingToBeAttacked" {
							state_ = false;
							internalColor_ = 255;
							victimUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_STRUCTURE_CORE | UNIT_CLASS_FRAME | UNIT_CLASS_BUILDER | UNIT_CLASS_TRUCK | UNIT_CLASS_BLOCK | UNIT_CLASS_IGNORE;
							agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_IGNORE;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_GYROID;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_CEPTOR;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = true;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_EFLAIR;
						};
					}
				};
			};
			action = "struct ActionSquadAttack" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_4;
				attackByType = UNIT_ATTRIBUTE_STRAFER;
				unitsToAttack = {
					0;
				};
				unitClassToAttack = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_IGNORE;
				offensive = true;
				unitsNumber = 3;
				soldiers = 0;
				officers = 0;
				technics = 0;
				attackTime = 10;
				remutateCounter = 1;
				holdProduction = false;
				squadFollowDistance = 0.;
				squadToFollowBy = CHOOSE_SQUAD_1;
				ignoreLastTarget = false;
				returnToBase = true;
				interruptable = false;
				attackTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 16777088;
			cellIndex = {
				x = -5;
				y = 45;
			};
			boundingRect = {
				left = -1440;
				top = 2880;
				right = -1184;
				bottom = 2912;
			};
		},
		{
			name = "Bomb100";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionBuildingNearBuilding" {
							state_ = false;
							internalColor_ = 0;
							distance = 1000.;
							playerType1 = AI_PLAYER_TYPE_ME;
							playerType2 = AI_PLAYER_TYPE_ENEMY;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = OR;
							conditions = {
								3;
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = false;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_BOMB_STATION1;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ENEMY;
										constructedAndConstructing = true;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = false;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_BOMB_STATION2;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ENEMY;
										constructedAndConstructing = true;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = true;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_BOMB_STATION3;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ENEMY;
										constructedAndConstructing = true;
									};
								}
							};
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 12189692;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_BOMB_STATION1;
				placementStrategy = PLACEMENT_STRATEGY_STATION;
				energyReserve = 0.;
				buildDurationMax = 1000;
				priority = 0;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 65535;
			cellIndex = {
				x = 6;
				y = 3;
			};
			boundingRect = {
				left = 1728;
				top = 192;
				right = 1984;
				bottom = 224;
			};
		},
		{
			name = "Bomb10";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					4;
					{
						type = NORMAL;
						condition = "struct ConditionBuildingNearBuilding" {
							state_ = false;
							internalColor_ = 0;
							distance = 500.;
							playerType1 = AI_PLAYER_TYPE_ME;
							playerType2 = AI_PLAYER_TYPE_ENEMY;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_BOMB_STATION3;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ENEMY;
							constructedAndConstructing = true;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_BOMB_STATION1;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ENEMY;
							constructedAndConstructing = true;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_BOMB_STATION2;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ENEMY;
							constructedAndConstructing = true;
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 12189692;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_BOMB_STATION1;
				placementStrategy = PLACEMENT_STRATEGY_STATION;
				energyReserve = 0.;
				buildDurationMax = 1000;
				priority = 1;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 65535;
			cellIndex = {
				x = 7;
				y = 3;
			};
			boundingRect = {
				left = 2016;
				top = 192;
				right = 2272;
				bottom = 224;
			};
		},
		{
			name = "Bomb20";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionBuildingNearBuilding" {
							state_ = false;
							internalColor_ = 0;
							distance = 1000.;
							playerType1 = AI_PLAYER_TYPE_ME;
							playerType2 = AI_PLAYER_TYPE_ENEMY;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = OR;
							conditions = {
								3;
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = false;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_BOMB_STATION1;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ENEMY;
										constructedAndConstructing = true;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = false;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_BOMB_STATION2;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ENEMY;
										constructedAndConstructing = true;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = true;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_BOMB_STATION3;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ENEMY;
										constructedAndConstructing = true;
									};
								}
							};
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 12189692;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_BOMB_STATION2;
				placementStrategy = PLACEMENT_STRATEGY_STATION;
				energyReserve = 0.;
				buildDurationMax = 1000;
				priority = 0;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 65535;
			cellIndex = {
				x = 6;
				y = 6;
			};
			boundingRect = {
				left = 1728;
				top = 384;
				right = 1984;
				bottom = 416;
			};
		},
		{
			name = "Bomb200";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					4;
					{
						type = NORMAL;
						condition = "struct ConditionBuildingNearBuilding" {
							state_ = false;
							internalColor_ = 0;
							distance = 500.;
							playerType1 = AI_PLAYER_TYPE_ME;
							playerType2 = AI_PLAYER_TYPE_ENEMY;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_BOMB_STATION3;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ENEMY;
							constructedAndConstructing = true;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_BOMB_STATION1;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ENEMY;
							constructedAndConstructing = true;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_BOMB_STATION2;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ENEMY;
							constructedAndConstructing = true;
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 12189692;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_BOMB_STATION2;
				placementStrategy = PLACEMENT_STRATEGY_STATION;
				energyReserve = 0.;
				buildDurationMax = 1000;
				priority = 1;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 65535;
			cellIndex = {
				x = 7;
				y = 6;
			};
			boundingRect = {
				left = 2016;
				top = 384;
				right = 2272;
				bottom = 416;
			};
		},
		{
			name = "Bomb30";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionBuildingNearBuilding" {
							state_ = false;
							internalColor_ = 0;
							distance = 1000.;
							playerType1 = AI_PLAYER_TYPE_ME;
							playerType2 = AI_PLAYER_TYPE_ENEMY;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = OR;
							conditions = {
								3;
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = false;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_BOMB_STATION1;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ENEMY;
										constructedAndConstructing = true;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = false;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_BOMB_STATION2;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ENEMY;
										constructedAndConstructing = true;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = true;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_BOMB_STATION3;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ENEMY;
										constructedAndConstructing = true;
									};
								}
							};
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 12189692;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_BOMB_STATION3;
				placementStrategy = PLACEMENT_STRATEGY_STATION;
				energyReserve = 0.;
				buildDurationMax = 1000;
				priority = 0;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 65535;
			cellIndex = {
				x = 6;
				y = 8;
			};
			boundingRect = {
				left = 1728;
				top = 512;
				right = 1984;
				bottom = 544;
			};
		},
		{
			name = "Bomb300";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					4;
					{
						type = NORMAL;
						condition = "struct ConditionBuildingNearBuilding" {
							state_ = false;
							internalColor_ = 0;
							distance = 500.;
							playerType1 = AI_PLAYER_TYPE_ME;
							playerType2 = AI_PLAYER_TYPE_ENEMY;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_BOMB_STATION3;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ENEMY;
							constructedAndConstructing = true;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_BOMB_STATION1;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ENEMY;
							constructedAndConstructing = true;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_BOMB_STATION2;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ENEMY;
							constructedAndConstructing = true;
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 12189692;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_BOMB_STATION3;
				placementStrategy = PLACEMENT_STRATEGY_STATION;
				energyReserve = 0.;
				buildDurationMax = 1000;
				priority = 1;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 65535;
			cellIndex = {
				x = 7;
				y = 8;
			};
			boundingRect = {
				left = 2016;
				top = 512;
				right = 2272;
				bottom = 544;
			};
		},
		{
			name = "гаубица";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					3;
					{
						type = NORMAL;
						condition = "struct ConditionBuildingNearBuilding" {
							state_ = false;
							internalColor_ = 0;
							distance = 500.;
							playerType1 = AI_PLAYER_TYPE_ME;
							playerType2 = AI_PLAYER_TYPE_ENEMY;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionNumberOfBuildingByCoresCapacity" {
							state_ = true;
							internalColor_ = 0;
							building = UNIT_ATTRIBUTE_GUN_HOWITZER;
							factor = 0.5;
							compareOp = COMPARE_LESS;
							building2 = UNIT_ATTRIBUTE_CORE;
							playerType = AI_PLAYER_TYPE_ME;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_GUN_HOWITZER;
							counter = 3;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = true;
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 12189692;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_GUN_HOWITZER;
				placementStrategy = PLACEMENT_STRATEGY_GUN_TO_ENEMY_BUILDING;
				energyReserve = 0.;
				buildDurationMax = 500;
				priority = 0;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 65535;
			cellIndex = {
				x = 5;
				y = 12;
			};
			boundingRect = {
				left = 1440;
				top = 768;
				right = 1696;
				bottom = 800;
			};
		},
		{
			name = "гаубица0";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					3;
					{
						type = NORMAL;
						condition = "struct ConditionBuildingNearBuilding" {
							state_ = false;
							internalColor_ = 0;
							distance = 800.;
							playerType1 = AI_PLAYER_TYPE_ME;
							playerType2 = AI_PLAYER_TYPE_ENEMY;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionNumberOfBuildingByCoresCapacity" {
							state_ = true;
							internalColor_ = 0;
							building = UNIT_ATTRIBUTE_GUN_HOWITZER;
							factor = 1.;
							compareOp = COMPARE_LESS;
							building2 = UNIT_ATTRIBUTE_CORE;
							playerType = AI_PLAYER_TYPE_ME;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_GUN_HOWITZER;
							counter = 3;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = true;
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 12189692;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_GUN_HOWITZER;
				placementStrategy = PLACEMENT_STRATEGY_GUN_TO_ENEMY_BUILDING;
				energyReserve = 0.;
				buildDurationMax = 500;
				priority = 0;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 65535;
			cellIndex = {
				x = 6;
				y = 12;
			};
			boundingRect = {
				left = 1728;
				top = 768;
				right = 1984;
				bottom = 800;
			};
		},
		{
			name = "задание";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionTask" {
				internalColor_ = 0;
				type = ASSIGNED;
				taskID = "Mission Tasks.Battle.Task";
				duration = 5;
				syncroBySound = false;
				showTips = false;
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				2;
				{
					triggerName = "заданиепровалено";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffset = {
						x = 46;
						y = -16;
					};
					childOffset = {
						x = 46;
						y = 16;
					};
				},
				{
					triggerName = "задание выполнено";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffset = {
						x = 128;
						y = -10;
					};
					childOffset = {
						x = -116;
						y = 16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 13553407;
			cellIndex = {
				x = 1;
				y = -7;
			};
			boundingRect = {
				left = 288;
				top = -448;
				right = 544;
				bottom = -416;
			};
		},
		{
			name = "заданиепровалено";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_FRAME;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = true;
						};
					}
				};
			};
			action = "struct ActionTask" {
				internalColor_ = 0;
				type = FAILED;
				taskID = "Mission Tasks.Battle.Task";
				duration = 5;
				syncroBySound = false;
				showTips = true;
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				1;
				{
					triggerName = "поражение";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffset = {
						x = 50;
						y = -16;
					};
					childOffset = {
						x = 53;
						y = 16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 13553407;
			cellIndex = {
				x = 1;
				y = -8;
			};
			boundingRect = {
				left = 288;
				top = -512;
				right = 544;
				bottom = -480;
			};
		},
		{
			name = "задание выполнено";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionOnlyMyClan" {
							state_ = false;
							internalColor_ = 0;
						};
					}
				};
			};
			action = "struct ActionTask" {
				internalColor_ = 0;
				type = COMPLETED;
				taskID = "Mission Tasks.Battle.Task";
				duration = 5;
				syncroBySound = false;
				showTips = true;
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				1;
				{
					triggerName = "победа";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffset = {
						x = -43;
						y = -16;
					};
					childOffset = {
						x = -39;
						y = 16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 13553407;
			cellIndex = {
				x = 2;
				y = -8;
			};
			boundingRect = {
				left = 576;
				top = -512;
				right = 832;
				bottom = -480;
			};
		},
		{
			name = "С1- базовые : рокер1";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionMutationEnabled" {
							state_ = true;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_CEPTOR;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = true;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_EFLAIR;
						};
					}
				};
			};
			action = "struct ActionSquadOrderUnits" {
				internalColor_ = 16629619;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_1;
				soldiers = 50;
				officers = 80;
				technics = 15;
				energyReserve = 0.;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 8454016;
			cellIndex = {
				x = -4;
				y = 45;
			};
			boundingRect = {
				left = -1152;
				top = 2880;
				right = -896;
				bottom = 2912;
			};
		},
		{
			name = "Place Core0";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					2;
					{
						type = INVERTED;
						condition = "struct ConditionPlayerState" {
							state_ = false;
							internalColor_ = 0;
							playerState = PLAYER_STATE_UNABLE_TO_PLACE_CORE;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionEnegyLevelLowerReserve" {
							state_ = false;
							internalColor_ = 0;
							energyReserve = 100.;
						};
					}
				};
			};
			action = "struct ActionOrderBuilding" {
				internalColor_ = 12189692;
				onlyIfAi = true;
				building = UNIT_ATTRIBUTE_CORE;
				placementStrategy = PLACEMENT_STRATEGY_CORE;
				energyReserve = 0.;
				buildDurationMax = 300;
				priority = 0;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 65535;
			cellIndex = {
				x = 2;
				y = -3;
			};
			boundingRect = {
				left = 576;
				top = -192;
				right = 832;
				bottom = -160;
			};
		},
		{
			name = "старт0";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionSetCamera" {
				internalColor_ = 0;
				cameraSplineName = "Camera1";
				stepTime = 4.;
				cycles = 1;
				smoothTransition = false;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellIndex = {
				x = 0;
				y = -5;
			};
			boundingRect = {
				left = 0;
				top = -320;
				right = 256;
				bottom = -288;
			};
		},
		{
			name = "C1-электротанк";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionMutationEnabled" {
							state_ = true;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_EFLAIR;
						};
					}
				};
			};
			action = "struct ActionSquadOrderUnits" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_1;
				soldiers = 40;
				officers = 80;
				technics = 30;
				energyReserve = 0.;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 8454016;
			cellIndex = {
				x = -4;
				y = 47;
			};
			boundingRect = {
				left = -1152;
				top = 3008;
				right = -896;
				bottom = 3040;
			};
		},
		{
			name = "C1-электротанк0";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = INVERTED;
						condition = "struct ConditionUnitClassIsGoingToBeAttacked" {
							state_ = false;
							internalColor_ = 255;
							victimUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_STRUCTURE | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_STRUCTURE_SPECIAL | UNIT_CLASS_STRUCTURE_CORE | UNIT_CLASS_FRAME | UNIT_CLASS_BUILDER | UNIT_CLASS_TRUCK | UNIT_CLASS_BLOCK | UNIT_CLASS_IGNORE;
							agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_IGNORE;
						};
					}
				};
			};
			action = "struct ActionSquadAttack" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_1;
				attackByType = UNIT_ATTRIBUTE_EFLAIR;
				unitsToAttack = {
					6;
					UNIT_ATTRIBUTE_GUN_HOWITZER,
					UNIT_ATTRIBUTE_ELECTRO_CANNON,
					UNIT_ATTRIBUTE_GUN_FILTH_NAVIGATOR,
					UNIT_ATTRIBUTE_GUN_BALLISTIC,
					UNIT_ATTRIBUTE_GUN_SCUM_DISRUPTOR,
					UNIT_ATTRIBUTE_CORE
				};
				unitClassToAttack = UNIT_CLASS_STRUCTURE | UNIT_CLASS_FRAME | UNIT_CLASS_IGNORE;
				offensive = true;
				unitsNumber = 5;
				soldiers = 0;
				officers = 0;
				technics = 0;
				attackTime = 30;
				remutateCounter = 1;
				holdProduction = true;
				squadFollowDistance = 0.;
				squadToFollowBy = CHOOSE_SQUAD_1;
				ignoreLastTarget = false;
				returnToBase = true;
				interruptable = true;
				attackTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 16711680;
			cellIndex = {
				x = -4;
				y = 48;
			};
			boundingRect = {
				left = -1152;
				top = 3072;
				right = -896;
				bottom = 3104;
			};
		},
		{
			name = "С1- цептор 200";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					2;
					{
						type = INVERTED;
						condition = "struct ConditionUnitClassIsGoingToBeAttacked" {
							state_ = false;
							internalColor_ = 255;
							victimUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_STRUCTURE | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_STRUCTURE_SPECIAL | UNIT_CLASS_STRUCTURE_CORE | UNIT_CLASS_FRAME | UNIT_CLASS_BUILDER | UNIT_CLASS_TRUCK | UNIT_CLASS_BLOCK | UNIT_CLASS_IGNORE;
							agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_IGNORE;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = true;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_EFLAIR;
						};
					}
				};
			};
			action = "struct ActionSquadAttack" {
				internalColor_ = 16629619;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_1;
				attackByType = UNIT_ATTRIBUTE_CEPTOR;
				unitsToAttack = {
					0;
				};
				unitClassToAttack = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_BUILDER | UNIT_CLASS_AIR_FILTH | UNIT_CLASS_GROUND_FILTH | UNIT_CLASS_IGNORE;
				offensive = true;
				unitsNumber = 9;
				soldiers = 0;
				officers = 0;
				technics = 0;
				attackTime = 30;
				remutateCounter = 1;
				holdProduction = true;
				squadFollowDistance = 0.;
				squadToFollowBy = CHOOSE_SQUAD_1;
				ignoreLastTarget = false;
				returnToBase = true;
				interruptable = true;
				attackTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 16744448;
			cellIndex = {
				x = -4;
				y = 46;
			};
			boundingRect = {
				left = -1152;
				top = 2944;
				right = -896;
				bottom = 2976;
			};
		},
		{
			name = "С1-цептор атака";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionUnitClassIsGoingToBeAttacked" {
							state_ = false;
							internalColor_ = 255;
							victimUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_STRUCTURE | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_STRUCTURE_SPECIAL | UNIT_CLASS_STRUCTURE_CORE | UNIT_CLASS_FRAME | UNIT_CLASS_BUILDER | UNIT_CLASS_TRUCK | UNIT_CLASS_BLOCK | UNIT_CLASS_IGNORE;
							agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_IGNORE;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = true;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_EFLAIR;
						};
					}
				};
			};
			action = "struct ActionSquadAttack" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_1;
				attackByType = UNIT_ATTRIBUTE_CEPTOR;
				unitsToAttack = {
					0;
				};
				unitClassToAttack = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_BUILDER | UNIT_CLASS_AIR_FILTH | UNIT_CLASS_GROUND_FILTH | UNIT_CLASS_IGNORE;
				offensive = true;
				unitsNumber = 1;
				soldiers = 0;
				officers = 0;
				technics = 0;
				attackTime = 10;
				remutateCounter = 1;
				holdProduction = false;
				squadFollowDistance = 0.;
				squadToFollowBy = CHOOSE_SQUAD_1;
				ignoreLastTarget = false;
				returnToBase = true;
				interruptable = false;
				attackTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 16777088;
			cellIndex = {
				x = -4;
				y = 51;
			};
			boundingRect = {
				left = -1152;
				top = 3264;
				right = -896;
				bottom = 3296;
			};
		},
		{
			name = "С1-электросамолет";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionUnitClassIsGoingToBeAttacked" {
							state_ = false;
							internalColor_ = 255;
							victimUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_STRUCTURE | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_STRUCTURE_SPECIAL | UNIT_CLASS_STRUCTURE_CORE | UNIT_CLASS_FRAME | UNIT_CLASS_BUILDER | UNIT_CLASS_TRUCK | UNIT_CLASS_BLOCK | UNIT_CLASS_IGNORE;
							agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_IGNORE;
						};
					}
				};
			};
			action = "struct ActionSquadAttack" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_1;
				attackByType = UNIT_ATTRIBUTE_EFLAIR;
				unitsToAttack = {
					0;
				};
				unitClassToAttack = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_BUILDER | UNIT_CLASS_AIR_FILTH | UNIT_CLASS_GROUND_FILTH | UNIT_CLASS_IGNORE;
				offensive = true;
				unitsNumber = 1;
				soldiers = 0;
				officers = 0;
				technics = 0;
				attackTime = 10;
				remutateCounter = 1;
				holdProduction = false;
				squadFollowDistance = 0.;
				squadToFollowBy = CHOOSE_SQUAD_1;
				ignoreLastTarget = false;
				returnToBase = true;
				interruptable = false;
				attackTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 16777088;
			cellIndex = {
				x = -4;
				y = 52;
			};
			boundingRect = {
				left = -1152;
				top = 3328;
				right = -896;
				bottom = 3360;
			};
		},
		{
			name = "ИМПЕРИЯ10";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionCheckBelligerent" {
							state_ = true;
							internalColor_ = 0;
							belligerent = EMPIRE;
						};
					}
				};
			};
			action = "struct Action" {
				internalColor_ = 0;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "С1- дезинтегратор10";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = -12;
						y = 16;
					};
					childOffset = {
						x = -31;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellIndex = {
				x = 5;
				y = 49;
			};
			boundingRect = {
				left = 1440;
				top = 3136;
				right = 1696;
				bottom = 3168;
			};
		},
		{
			name = "С1- дезинтегратор10";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionUnitClassIsGoingToBeAttacked" {
							state_ = false;
							internalColor_ = 255;
							victimUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_STRUCTURE | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_STRUCTURE_SPECIAL | UNIT_CLASS_STRUCTURE_CORE | UNIT_CLASS_FRAME | UNIT_CLASS_BUILDER | UNIT_CLASS_TRUCK | UNIT_CLASS_BLOCK | UNIT_CLASS_IGNORE;
							agressorUnitClass = UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_UNDERGROUND | UNIT_CLASS_IGNORE;
						};
					}
				};
			};
			action = "struct ActionSquadAttack" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_1;
				attackByType = UNIT_ATTRIBUTE_DISINTEGRATOR;
				unitsToAttack = {
					0;
				};
				unitClassToAttack = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_IGNORE;
				offensive = true;
				unitsNumber = 1;
				soldiers = 0;
				officers = 0;
				technics = 0;
				attackTime = 10;
				remutateCounter = 1;
				holdProduction = false;
				squadFollowDistance = 0.;
				squadToFollowBy = CHOOSE_SQUAD_1;
				ignoreLastTarget = false;
				returnToBase = true;
				interruptable = false;
				attackTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 16777088;
			cellIndex = {
				x = 5;
				y = 52;
			};
			boundingRect = {
				left = 1440;
				top = 3328;
				right = 1696;
				bottom = 3360;
			};
		},
		{
			name = "ИСХОДНИКИ10";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionCheckBelligerent" {
							state_ = false;
							internalColor_ = 0;
							belligerent = EXODUS;
						};
					}
				};
			};
			action = "struct Action" {
				internalColor_ = 0;
			};
			outcomingLinks = {
				3;
				{
					triggerName = "С1-базовые-хитер10";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 41;
						y = 16;
					};
					childOffset = {
						x = 29;
						y = -16;
					};
				},
				{
					triggerName = "С1хитер20";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 53;
						y = 16;
					};
					childOffset = {
						x = 45;
						y = -16;
					};
				},
				{
					triggerName = "С1-хитер0";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellIndex = {
				x = 4;
				y = 49;
			};
			boundingRect = {
				left = 1152;
				top = 3136;
				right = 1408;
				bottom = 3168;
			};
		},
		{
			name = "С1-базовые-хитер10";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_SCUM_HEATER;
						};
					}
				};
			};
			action = "struct ActionSquadOrderUnits" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_1;
				soldiers = 0;
				officers = 80;
				technics = 70;
				energyReserve = 0.;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 8453888;
			cellIndex = {
				x = 4;
				y = 50;
			};
			boundingRect = {
				left = 1152;
				top = 3200;
				right = 1408;
				bottom = 3232;
			};
		},
		{
			name = "С1хитер20";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = OR;
				conditions = {
					1;
					{
						type = INVERTED;
						condition = "struct ConditionUnitClassIsGoingToBeAttacked" {
							state_ = false;
							internalColor_ = 255;
							victimUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_STRUCTURE_CORE | UNIT_CLASS_FRAME | UNIT_CLASS_BUILDER | UNIT_CLASS_TRUCK | UNIT_CLASS_BLOCK | UNIT_CLASS_IGNORE;
							agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_UNDERGROUND | UNIT_CLASS_IGNORE;
						};
					}
				};
			};
			action = "struct ActionSquadAttack" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_1;
				attackByType = UNIT_ATTRIBUTE_SCUM_HEATER;
				unitsToAttack = {
					1;
					UNIT_ATTRIBUTE_CORE
				};
				unitClassToAttack = UNIT_CLASS_STRUCTURE | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_FRAME | UNIT_CLASS_IGNORE;
				offensive = true;
				unitsNumber = 3;
				soldiers = 0;
				officers = 0;
				technics = 0;
				attackTime = 100;
				remutateCounter = 1;
				holdProduction = true;
				squadFollowDistance = 0.;
				squadToFollowBy = CHOOSE_SQUAD_1;
				ignoreLastTarget = false;
				returnToBase = true;
				interruptable = true;
				attackTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12615808;
			cellIndex = {
				x = 4;
				y = 51;
			};
			boundingRect = {
				left = 1152;
				top = 3264;
				right = 1408;
				bottom = 3296;
			};
		},
		{
			name = "С1-заказать юнитов110";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					5;
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = true;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_CEPTOR;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_CONDUCTOR;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = true;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_EFLAIR;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_SCUM_HEATER;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = false;
							internalColor_ = 0;
							type = OR;
							conditions = {
								2;
								{
									type = NORMAL;
									condition = "struct ConditionMutationEnabled" {
										state_ = false;
										internalColor_ = 0;
										unitType = UNIT_ATTRIBUTE_GYROID;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionMutationEnabled" {
										state_ = false;
										internalColor_ = 0;
										unitType = UNIT_ATTRIBUTE_STRAFER;
									};
								}
							};
						};
					}
				};
			};
			action = "struct ActionSquadOrderUnits" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_1;
				soldiers = 40;
				officers = 80;
				technics = 30;
				energyReserve = 0.;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 8454016;
			cellIndex = {
				x = 3;
				y = 48;
			};
			boundingRect = {
				left = 864;
				top = 3072;
				right = 1120;
				bottom = 3104;
			};
		},
		{
			name = "С 1 - героид120";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					5;
					{
						type = INVERTED;
						condition = "struct ConditionUnitClassIsGoingToBeAttacked" {
							state_ = false;
							internalColor_ = 255;
							victimUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_STRUCTURE | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_STRUCTURE_SPECIAL | UNIT_CLASS_STRUCTURE_CORE | UNIT_CLASS_FRAME | UNIT_CLASS_BUILDER | UNIT_CLASS_TRUCK | UNIT_CLASS_BLOCK | UNIT_CLASS_IGNORE;
							agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_IGNORE;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = true;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_CEPTOR;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_CONDUCTOR;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_EFLAIR;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_SCUM_HEATER;
						};
					}
				};
			};
			action = "struct ActionSquadAttack" {
				internalColor_ = 16629619;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_1;
				attackByType = UNIT_ATTRIBUTE_GYROID;
				unitsToAttack = {
					0;
				};
				unitClassToAttack = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_BUILDER | UNIT_CLASS_AIR_FILTH | UNIT_CLASS_GROUND_FILTH | UNIT_CLASS_IGNORE;
				offensive = true;
				unitsNumber = 10;
				soldiers = 0;
				officers = 0;
				technics = 0;
				attackTime = 30;
				remutateCounter = 1;
				holdProduction = true;
				squadFollowDistance = 0.;
				squadToFollowBy = CHOOSE_SQUAD_2;
				ignoreLastTarget = false;
				returnToBase = true;
				interruptable = true;
				attackTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 16744576;
			cellIndex = {
				x = 3;
				y = 49;
			};
			boundingRect = {
				left = 864;
				top = 3136;
				right = 1120;
				bottom = 3168;
			};
		},
		{
			name = "С 1 - героид00010";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					6;
					{
						type = NORMAL;
						condition = "struct ConditionUnitClassIsGoingToBeAttacked" {
							state_ = false;
							internalColor_ = 255;
							victimUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_STRUCTURE | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_STRUCTURE_SPECIAL | UNIT_CLASS_STRUCTURE_CORE | UNIT_CLASS_FRAME | UNIT_CLASS_BUILDER | UNIT_CLASS_TRUCK | UNIT_CLASS_BLOCK | UNIT_CLASS_IGNORE;
							agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_IGNORE;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_CONDUCTOR;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_DISINTEGRATOR;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_CEPTOR;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = true;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_EFLAIR;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_SCUM_HEATER;
						};
					}
				};
			};
			action = "struct ActionSquadAttack" {
				internalColor_ = 16629619;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_1;
				attackByType = UNIT_ATTRIBUTE_GYROID;
				unitsToAttack = {
					0;
				};
				unitClassToAttack = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_IGNORE;
				offensive = true;
				unitsNumber = 1;
				soldiers = 0;
				officers = 0;
				technics = 0;
				attackTime = 10;
				remutateCounter = 1;
				holdProduction = false;
				squadFollowDistance = 0.;
				squadToFollowBy = CHOOSE_SQUAD_1;
				ignoreLastTarget = false;
				returnToBase = true;
				interruptable = false;
				attackTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 16777088;
			cellIndex = {
				x = 3;
				y = 50;
			};
			boundingRect = {
				left = 864;
				top = 3200;
				right = 1120;
				bottom = 3232;
			};
		},
		{
			name = "сложный";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionDifficultyLevel" {
							state_ = false;
							internalColor_ = 0;
							difficulty = DIFFICULTY_HARD;
						};
					}
				};
			};
			action = "struct Action" {
				internalColor_ = 0;
			};
			outcomingLinks = {
				27;
				{
					triggerName = "С1-заказать юнитов110";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 128;
						y = 11;
					};
					childOffset = {
						x = -75;
						y = -16;
					};
				},
				{
					triggerName = "С 1 - героид120";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 119;
						y = 16;
					};
					childOffset = {
						x = -70;
						y = -16;
					};
				},
				{
					triggerName = "С 1 - героид00010";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 97;
						y = 16;
					};
					childOffset = {
						x = -57;
						y = -16;
					};
				},
				{
					triggerName = "С1-заказать юнитов110";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 128;
						y = 11;
					};
					childOffset = {
						x = -75;
						y = -16;
					};
				},
				{
					triggerName = "С 1 - героид120";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 119;
						y = 16;
					};
					childOffset = {
						x = -70;
						y = -16;
					};
				},
				{
					triggerName = "С 1 - героид00010";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 97;
						y = 16;
					};
					childOffset = {
						x = -57;
						y = -16;
					};
				},
				{
					triggerName = "ИСХОДНИКИ10";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffset = {
						x = 24;
						y = 16;
					};
					childOffset = {
						x = -24;
						y = -16;
					};
				},
				{
					triggerName = "ИМПЕРИЯ10";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffset = {
						x = 36;
						y = 16;
					};
					childOffset = {
						x = -36;
						y = -16;
					};
				},
				{
					triggerName = "С1-заказать юнитов110";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 128;
						y = 11;
					};
					childOffset = {
						x = -75;
						y = -16;
					};
				},
				{
					triggerName = "С 1 - героид120";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 119;
						y = 16;
					};
					childOffset = {
						x = -70;
						y = -16;
					};
				},
				{
					triggerName = "С 1 - героид00010";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 97;
						y = 16;
					};
					childOffset = {
						x = -57;
						y = -16;
					};
				},
				{
					triggerName = "С 1- стрейфер10";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = -120;
						y = 16;
					};
					childOffset = {
						x = 124;
						y = -16;
					};
				},
				{
					triggerName = "С1-заказать юнитов110";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 128;
						y = 11;
					};
					childOffset = {
						x = -75;
						y = -16;
					};
				},
				{
					triggerName = "С 1 - героид120";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 119;
						y = 16;
					};
					childOffset = {
						x = -70;
						y = -16;
					};
				},
				{
					triggerName = "С 1 - героид00010";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 97;
						y = 16;
					};
					childOffset = {
						x = -57;
						y = -16;
					};
				},
				{
					triggerName = "33310";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffset = {
						x = 89;
						y = 16;
					};
					childOffset = {
						x = 59;
						y = -16;
					};
				},
				{
					triggerName = "С1- базовые : рокер10";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 23;
						y = 16;
					};
					childOffset = {
						x = 22;
						y = -16;
					};
				},
				{
					triggerName = "ИСХОДНИКИ10";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffset = {
						x = 24;
						y = 16;
					};
					childOffset = {
						x = -24;
						y = -16;
					};
				},
				{
					triggerName = "ИМПЕРИЯ10";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffset = {
						x = 36;
						y = 16;
					};
					childOffset = {
						x = -36;
						y = -16;
					};
				},
				{
					triggerName = "C1-электротанк1";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				},
				{
					triggerName = "С1-кондуктор2";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				},
				{
					triggerName = "C1-электротанк00";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				},
				{
					triggerName = "С1-кондуктор00";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				},
				{
					triggerName = "С1- цептор 2000";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				},
				{
					triggerName = "С1-цептор атака0";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				},
				{
					triggerName = "С1-электросамолет0";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				},
				{
					triggerName = "С1-кондуктор10";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellIndex = {
				x = 2;
				y = 43;
			};
			boundingRect = {
				left = 576;
				top = 2752;
				right = 832;
				bottom = 2784;
			};
		},
		{
			name = "С 1- стрейфер10";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					7;
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_DISINTEGRATOR;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionUnitClassIsGoingToBeAttacked" {
							state_ = false;
							internalColor_ = 255;
							victimUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_STRUCTURE_CORE | UNIT_CLASS_FRAME | UNIT_CLASS_BUILDER | UNIT_CLASS_TRUCK | UNIT_CLASS_BLOCK | UNIT_CLASS_IGNORE;
							agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_IGNORE;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_GYROID;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_CEPTOR;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_SCUM_HEATER;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = true;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_EFLAIR;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_CONDUCTOR;
						};
					}
				};
			};
			action = "struct ActionSquadAttack" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_4;
				attackByType = UNIT_ATTRIBUTE_STRAFER;
				unitsToAttack = {
					0;
				};
				unitClassToAttack = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_IGNORE;
				offensive = true;
				unitsNumber = 3;
				soldiers = 0;
				officers = 0;
				technics = 0;
				attackTime = 10;
				remutateCounter = 1;
				holdProduction = false;
				squadFollowDistance = 0.;
				squadToFollowBy = CHOOSE_SQUAD_1;
				ignoreLastTarget = false;
				returnToBase = true;
				interruptable = false;
				attackTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 16777088;
			cellIndex = {
				x = 1;
				y = 48;
			};
			boundingRect = {
				left = 288;
				top = 3072;
				right = 544;
				bottom = 3104;
			};
		},
		{
			name = "С2 базовые-бомбер10";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_BOMBER;
						};
					}
				};
			};
			action = "struct ActionSquadOrderUnits" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_2;
				soldiers = 10;
				officers = 30;
				technics = 60;
				energyReserve = 0.;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 8454016;
			cellIndex = {
				x = 2;
				y = 61;
			};
			boundingRect = {
				left = 576;
				top = 3904;
				right = 832;
				bottom = 3936;
			};
		},
		{
			name = "С2- бомбер20";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = OR;
							conditions = {
								2;
								{
									type = INVERTED;
									condition = "struct ConditionUnitClassIsGoingToBeAttacked" {
										state_ = false;
										internalColor_ = 255;
										victimUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_STRUCTURE | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_STRUCTURE_SPECIAL | UNIT_CLASS_STRUCTURE_CORE | UNIT_CLASS_FRAME | UNIT_CLASS_BUILDER | UNIT_CLASS_TRUCK | UNIT_CLASS_BLOCK | UNIT_CLASS_IGNORE;
										agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_IGNORE;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionSquadSufficientUnits" {
										state_ = false;
										internalColor_ = 0;
										playerType = AI_PLAYER_TYPE_ME;
										chooseSquadID = CHOOSE_SQUAD_2;
										unitType = UNIT_ATTRIBUTE_BOMBER;
										compareOperator = COMPARE_GREATER_EQ;
										unitsNumber = 2;
										soldiers = 0;
										officers = 0;
										technics = 0;
									};
								}
							};
						};
					}
				};
			};
			action = "struct ActionSquadAttack" {
				internalColor_ = 16629619;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_2;
				attackByType = UNIT_ATTRIBUTE_BOMBER;
				unitsToAttack = {
					6;
					UNIT_ATTRIBUTE_GUN_HOWITZER,
					UNIT_ATTRIBUTE_ELECTRO_CANNON,
					UNIT_ATTRIBUTE_GUN_FILTH_NAVIGATOR,
					UNIT_ATTRIBUTE_GUN_SCUM_DISRUPTOR,
					UNIT_ATTRIBUTE_GUN_BALLISTIC,
					UNIT_ATTRIBUTE_CORE
				};
				unitClassToAttack = UNIT_CLASS_STRUCTURE | UNIT_CLASS_FRAME | UNIT_CLASS_IGNORE;
				offensive = true;
				unitsNumber = 5;
				soldiers = 0;
				officers = 0;
				technics = 0;
				attackTime = 30;
				remutateCounter = 1;
				holdProduction = true;
				squadFollowDistance = 0.;
				squadToFollowBy = CHOOSE_SQUAD_2;
				ignoreLastTarget = true;
				returnToBase = false;
				interruptable = true;
				attackTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12615680;
			cellIndex = {
				x = 2;
				y = 62;
			};
			boundingRect = {
				left = 576;
				top = 3968;
				right = 832;
				bottom = 4000;
			};
		},
		{
			name = "33310";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct Action" {
				internalColor_ = 0;
			};
			outcomingLinks = {
				13;
				{
					triggerName = "С2 базовые-бомбер10";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = -76;
						y = 16;
					};
					childOffset = {
						x = -79;
						y = -16;
					};
				},
				{
					triggerName = "С2- бомбер20";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = -93;
						y = 16;
					};
					childOffset = {
						x = -92;
						y = -16;
					};
				},
				{
					triggerName = "С2 базовые-бомбер10";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = -76;
						y = 16;
					};
					childOffset = {
						x = -79;
						y = -16;
					};
				},
				{
					triggerName = "С2- бомбер20";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = -93;
						y = 16;
					};
					childOffset = {
						x = -92;
						y = -16;
					};
				},
				{
					triggerName = "С2 базовые-бомбер10";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = -76;
						y = 16;
					};
					childOffset = {
						x = -79;
						y = -16;
					};
				},
				{
					triggerName = "С2- бомбер20";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = -93;
						y = 16;
					};
					childOffset = {
						x = -92;
						y = -16;
					};
				},
				{
					triggerName = "С2 базовые-бомбер10";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = -76;
						y = 16;
					};
					childOffset = {
						x = -79;
						y = -16;
					};
				},
				{
					triggerName = "С2- бомбер20";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = -93;
						y = 16;
					};
					childOffset = {
						x = -92;
						y = -16;
					};
				},
				{
					triggerName = "С2- бомбер010";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = -96;
						y = 16;
					};
					childOffset = {
						x = 115;
						y = -16;
					};
				},
				{
					triggerName = "С2-героид0";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 18;
						y = 16;
					};
					childOffset = {
						x = -18;
						y = -16;
					};
				},
				{
					triggerName = "С2-цептор0";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 15;
						y = 16;
					};
					childOffset = {
						x = -14;
						y = -16;
					};
				},
				{
					triggerName = "С2-электротанк0";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 12;
						y = 16;
					};
					childOffset = {
						x = -12;
						y = -16;
					};
				},
				{
					triggerName = "С2-кондуктор0";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 11;
						y = 16;
					};
					childOffset = {
						x = -10;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellIndex = {
				x = 2;
				y = 57;
			};
			boundingRect = {
				left = 576;
				top = 3648;
				right = 832;
				bottom = 3680;
			};
		},
		{
			name = "С2- бомбер010";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionSquadSufficientUnits" {
							state_ = false;
							internalColor_ = 0;
							playerType = AI_PLAYER_TYPE_ME;
							chooseSquadID = CHOOSE_SQUAD_2;
							unitType = UNIT_ATTRIBUTE_BOMBER;
							compareOperator = COMPARE_LESS;
							unitsNumber = 5;
							soldiers = 0;
							officers = 0;
							technics = 0;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionUnitClassIsGoingToBeAttacked" {
							state_ = false;
							internalColor_ = 255;
							victimUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_STRUCTURE | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_STRUCTURE_SPECIAL | UNIT_CLASS_STRUCTURE_CORE | UNIT_CLASS_FRAME | UNIT_CLASS_BUILDER | UNIT_CLASS_TRUCK | UNIT_CLASS_BLOCK | UNIT_CLASS_IGNORE;
							agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_IGNORE;
						};
					}
				};
			};
			action = "struct ActionSquadAttack" {
				internalColor_ = 16629619;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_2;
				attackByType = UNIT_ATTRIBUTE_BOMBER;
				unitsToAttack = {
					6;
					UNIT_ATTRIBUTE_CORE,
					UNIT_ATTRIBUTE_GUN_HOWITZER,
					UNIT_ATTRIBUTE_ELECTRO_CANNON,
					UNIT_ATTRIBUTE_GUN_FILTH_NAVIGATOR,
					UNIT_ATTRIBUTE_GUN_SCUM_DISRUPTOR,
					UNIT_ATTRIBUTE_GUN_BALLISTIC
				};
				unitClassToAttack = UNIT_CLASS_STRUCTURE | UNIT_CLASS_FRAME | UNIT_CLASS_IGNORE;
				offensive = true;
				unitsNumber = 1;
				soldiers = 0;
				officers = 0;
				technics = 0;
				attackTime = 30;
				remutateCounter = 1;
				holdProduction = true;
				squadFollowDistance = 0.;
				squadToFollowBy = CHOOSE_SQUAD_2;
				ignoreLastTarget = false;
				returnToBase = true;
				interruptable = true;
				attackTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12615680;
			cellIndex = {
				x = 1;
				y = 62;
			};
			boundingRect = {
				left = 288;
				top = 3968;
				right = 544;
				bottom = 4000;
			};
		},
		{
			name = "С1- базовые : рокер10";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					4;
					{
						type = NORMAL;
						condition = "struct ConditionMutationEnabled" {
							state_ = true;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_CEPTOR;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_EFLAIR;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_CONDUCTOR;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_SCUM_HEATER;
						};
					}
				};
			};
			action = "struct ActionSquadOrderUnits" {
				internalColor_ = 16629619;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_1;
				soldiers = 50;
				officers = 80;
				technics = 15;
				energyReserve = 0.;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 8454016;
			cellIndex = {
				x = 2;
				y = 48;
			};
			boundingRect = {
				left = 576;
				top = 3072;
				right = 832;
				bottom = 3104;
			};
		},
		{
			name = "C1-электротанк1";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					3;
					{
						type = NORMAL;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_EFLAIR;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = true;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_CONDUCTOR;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_SCUM_HEATER;
						};
					}
				};
			};
			action = "struct ActionSquadOrderUnits" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_1;
				soldiers = 40;
				officers = 80;
				technics = 30;
				energyReserve = 0.;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 8454016;
			cellIndex = {
				x = 2;
				y = 50;
			};
			boundingRect = {
				left = 576;
				top = 3200;
				right = 832;
				bottom = 3232;
			};
		},
		{
			name = "С1-кондуктор2";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_CONDUCTOR;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_SCUM_HEATER;
						};
					}
				};
			};
			action = "struct ActionSquadOrderUnits" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_1;
				soldiers = 45;
				officers = 80;
				technics = 25;
				energyReserve = 0.;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 8454016;
			cellIndex = {
				x = 2;
				y = 52;
			};
			boundingRect = {
				left = 576;
				top = 3328;
				right = 832;
				bottom = 3360;
			};
		},
		{
			name = "C1-электротанк00";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					3;
					{
						type = INVERTED;
						condition = "struct ConditionUnitClassIsGoingToBeAttacked" {
							state_ = false;
							internalColor_ = 255;
							victimUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_STRUCTURE | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_STRUCTURE_SPECIAL | UNIT_CLASS_STRUCTURE_CORE | UNIT_CLASS_FRAME | UNIT_CLASS_BUILDER | UNIT_CLASS_TRUCK | UNIT_CLASS_BLOCK | UNIT_CLASS_IGNORE;
							agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_IGNORE;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_CONDUCTOR;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_SCUM_HEATER;
						};
					}
				};
			};
			action = "struct ActionSquadAttack" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_1;
				attackByType = UNIT_ATTRIBUTE_EFLAIR;
				unitsToAttack = {
					6;
					UNIT_ATTRIBUTE_GUN_HOWITZER,
					UNIT_ATTRIBUTE_ELECTRO_CANNON,
					UNIT_ATTRIBUTE_GUN_FILTH_NAVIGATOR,
					UNIT_ATTRIBUTE_GUN_BALLISTIC,
					UNIT_ATTRIBUTE_GUN_SCUM_DISRUPTOR,
					UNIT_ATTRIBUTE_CORE
				};
				unitClassToAttack = UNIT_CLASS_STRUCTURE | UNIT_CLASS_FRAME | UNIT_CLASS_IGNORE;
				offensive = true;
				unitsNumber = 10;
				soldiers = 0;
				officers = 0;
				technics = 0;
				attackTime = 30;
				remutateCounter = 1;
				holdProduction = true;
				squadFollowDistance = 0.;
				squadToFollowBy = CHOOSE_SQUAD_1;
				ignoreLastTarget = false;
				returnToBase = true;
				interruptable = true;
				attackTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 16711680;
			cellIndex = {
				x = 2;
				y = 51;
			};
			boundingRect = {
				left = 576;
				top = 3264;
				right = 832;
				bottom = 3296;
			};
		},
		{
			name = "С1-кондуктор00";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					2;
					{
						type = INVERTED;
						condition = "struct ConditionUnitClassIsGoingToBeAttacked" {
							state_ = false;
							internalColor_ = 255;
							victimUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_STRUCTURE | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_STRUCTURE_SPECIAL | UNIT_CLASS_STRUCTURE_CORE | UNIT_CLASS_FRAME | UNIT_CLASS_BUILDER | UNIT_CLASS_TRUCK | UNIT_CLASS_BLOCK | UNIT_CLASS_IGNORE;
							agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_IGNORE;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_SCUM_HEATER;
						};
					}
				};
			};
			action = "struct ActionSquadAttack" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_1;
				attackByType = UNIT_ATTRIBUTE_CONDUCTOR;
				unitsToAttack = {
					6;
					UNIT_ATTRIBUTE_GUN_HOWITZER,
					UNIT_ATTRIBUTE_ELECTRO_CANNON,
					UNIT_ATTRIBUTE_GUN_FILTH_NAVIGATOR,
					UNIT_ATTRIBUTE_GUN_BALLISTIC,
					UNIT_ATTRIBUTE_GUN_SCUM_DISRUPTOR,
					UNIT_ATTRIBUTE_CORE
				};
				unitClassToAttack = UNIT_CLASS_STRUCTURE | UNIT_CLASS_FRAME | UNIT_CLASS_IGNORE;
				offensive = true;
				unitsNumber = 5;
				soldiers = 0;
				officers = 0;
				technics = 0;
				attackTime = 30;
				remutateCounter = 1;
				holdProduction = true;
				squadFollowDistance = 0.;
				squadToFollowBy = CHOOSE_SQUAD_1;
				ignoreLastTarget = false;
				returnToBase = true;
				interruptable = true;
				attackTimer = {
					time = 21000;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 16711680;
			cellIndex = {
				x = 2;
				y = 53;
			};
			boundingRect = {
				left = 576;
				top = 3392;
				right = 832;
				bottom = 3424;
			};
		},
		{
			name = "С1- цептор 2000";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					4;
					{
						type = INVERTED;
						condition = "struct ConditionUnitClassIsGoingToBeAttacked" {
							state_ = false;
							internalColor_ = 255;
							victimUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_STRUCTURE | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_STRUCTURE_SPECIAL | UNIT_CLASS_STRUCTURE_CORE | UNIT_CLASS_FRAME | UNIT_CLASS_BUILDER | UNIT_CLASS_TRUCK | UNIT_CLASS_BLOCK | UNIT_CLASS_IGNORE;
							agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_IGNORE;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_CONDUCTOR;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_EFLAIR;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_SCUM_HEATER;
						};
					}
				};
			};
			action = "struct ActionSquadAttack" {
				internalColor_ = 16629619;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_1;
				attackByType = UNIT_ATTRIBUTE_CEPTOR;
				unitsToAttack = {
					0;
				};
				unitClassToAttack = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_BUILDER | UNIT_CLASS_AIR_FILTH | UNIT_CLASS_GROUND_FILTH | UNIT_CLASS_IGNORE;
				offensive = true;
				unitsNumber = 6;
				soldiers = 0;
				officers = 0;
				technics = 0;
				attackTime = 30;
				remutateCounter = 1;
				holdProduction = true;
				squadFollowDistance = 0.;
				squadToFollowBy = CHOOSE_SQUAD_1;
				ignoreLastTarget = false;
				returnToBase = true;
				interruptable = true;
				attackTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 16744448;
			cellIndex = {
				x = 2;
				y = 49;
			};
			boundingRect = {
				left = 576;
				top = 3136;
				right = 832;
				bottom = 3168;
			};
		},
		{
			name = "С1-цептор атака0";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					5;
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_SCUM_HEATER;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionUnitClassIsGoingToBeAttacked" {
							state_ = false;
							internalColor_ = 255;
							victimUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_STRUCTURE | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_STRUCTURE_SPECIAL | UNIT_CLASS_STRUCTURE_CORE | UNIT_CLASS_FRAME | UNIT_CLASS_BUILDER | UNIT_CLASS_TRUCK | UNIT_CLASS_BLOCK | UNIT_CLASS_IGNORE;
							agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_IGNORE;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_CONDUCTOR;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = true;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_EFLAIR;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_DISINTEGRATOR;
						};
					}
				};
			};
			action = "struct ActionSquadAttack" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_1;
				attackByType = UNIT_ATTRIBUTE_CEPTOR;
				unitsToAttack = {
					0;
				};
				unitClassToAttack = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_BUILDER | UNIT_CLASS_AIR_FILTH | UNIT_CLASS_GROUND_FILTH | UNIT_CLASS_IGNORE;
				offensive = true;
				unitsNumber = 1;
				soldiers = 0;
				officers = 0;
				technics = 0;
				attackTime = 10;
				remutateCounter = 1;
				holdProduction = false;
				squadFollowDistance = 0.;
				squadToFollowBy = CHOOSE_SQUAD_1;
				ignoreLastTarget = false;
				returnToBase = true;
				interruptable = false;
				attackTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 16777088;
			cellIndex = {
				x = 2;
				y = 54;
			};
			boundingRect = {
				left = 576;
				top = 3456;
				right = 832;
				bottom = 3488;
			};
		},
		{
			name = "С1-электросамолет0";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					4;
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_CONDUCTOR;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionUnitClassIsGoingToBeAttacked" {
							state_ = false;
							internalColor_ = 255;
							victimUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_STRUCTURE | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_STRUCTURE_SPECIAL | UNIT_CLASS_STRUCTURE_CORE | UNIT_CLASS_FRAME | UNIT_CLASS_BUILDER | UNIT_CLASS_TRUCK | UNIT_CLASS_BLOCK | UNIT_CLASS_IGNORE;
							agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_IGNORE;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_SCUM_HEATER;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_DISINTEGRATOR;
						};
					}
				};
			};
			action = "struct ActionSquadAttack" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_1;
				attackByType = UNIT_ATTRIBUTE_EFLAIR;
				unitsToAttack = {
					0;
				};
				unitClassToAttack = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_BUILDER | UNIT_CLASS_AIR_FILTH | UNIT_CLASS_GROUND_FILTH | UNIT_CLASS_IGNORE;
				offensive = true;
				unitsNumber = 1;
				soldiers = 0;
				officers = 0;
				technics = 0;
				attackTime = 10;
				remutateCounter = 1;
				holdProduction = false;
				squadFollowDistance = 0.;
				squadToFollowBy = CHOOSE_SQUAD_1;
				ignoreLastTarget = false;
				returnToBase = true;
				interruptable = false;
				attackTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 16777088;
			cellIndex = {
				x = 2;
				y = 55;
			};
			boundingRect = {
				left = 576;
				top = 3520;
				right = 832;
				bottom = 3552;
			};
		},
		{
			name = "С1-кондуктор10";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					3;
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_SCUM_HEATER;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionUnitClassIsGoingToBeAttacked" {
							state_ = false;
							internalColor_ = 255;
							victimUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_STRUCTURE | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_STRUCTURE_SPECIAL | UNIT_CLASS_STRUCTURE_CORE | UNIT_CLASS_FRAME | UNIT_CLASS_BUILDER | UNIT_CLASS_TRUCK | UNIT_CLASS_BLOCK | UNIT_CLASS_IGNORE;
							agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_IGNORE;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_DISINTEGRATOR;
						};
					}
				};
			};
			action = "struct ActionSquadAttack" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_1;
				attackByType = UNIT_ATTRIBUTE_CONDUCTOR;
				unitsToAttack = {
					0;
				};
				unitClassToAttack = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_BUILDER | UNIT_CLASS_AIR_FILTH | UNIT_CLASS_GROUND_FILTH | UNIT_CLASS_IGNORE;
				offensive = true;
				unitsNumber = 1;
				soldiers = 0;
				officers = 0;
				technics = 0;
				attackTime = 10;
				remutateCounter = 1;
				holdProduction = false;
				squadFollowDistance = 0.;
				squadToFollowBy = CHOOSE_SQUAD_1;
				ignoreLastTarget = false;
				returnToBase = true;
				interruptable = false;
				attackTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 16777088;
			cellIndex = {
				x = 2;
				y = 56;
			};
			boundingRect = {
				left = 576;
				top = 3584;
				right = 832;
				bottom = 3616;
			};
		},
		{
			name = "С1-хитер0";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionUnitClassIsGoingToBeAttacked" {
							state_ = false;
							internalColor_ = 255;
							victimUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_STRUCTURE | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_STRUCTURE_SPECIAL | UNIT_CLASS_STRUCTURE_CORE | UNIT_CLASS_FRAME | UNIT_CLASS_BUILDER | UNIT_CLASS_TRUCK | UNIT_CLASS_BLOCK | UNIT_CLASS_IGNORE;
							agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_IGNORE;
						};
					}
				};
			};
			action = "struct ActionSquadAttack" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_1;
				attackByType = UNIT_ATTRIBUTE_SCUM_HEATER;
				unitsToAttack = {
					0;
				};
				unitClassToAttack = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_UNDERGROUND | UNIT_CLASS_IGNORE;
				offensive = true;
				unitsNumber = 1;
				soldiers = 0;
				officers = 0;
				technics = 0;
				attackTime = 10;
				remutateCounter = 1;
				holdProduction = false;
				squadFollowDistance = 0.;
				squadToFollowBy = CHOOSE_SQUAD_1;
				ignoreLastTarget = false;
				returnToBase = true;
				interruptable = false;
				attackTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 16777088;
			cellIndex = {
				x = 4;
				y = 52;
			};
			boundingRect = {
				left = 1152;
				top = 3328;
				right = 1408;
				bottom = 3360;
			};
		},
		{
			name = "С2-героид0";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					5;
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_CONDUCTOR;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionUnitClassIsGoingToBeAttacked" {
							state_ = false;
							internalColor_ = 255;
							victimUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_STRUCTURE | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_STRUCTURE_SPECIAL | UNIT_CLASS_STRUCTURE_CORE | UNIT_CLASS_FRAME | UNIT_CLASS_BUILDER | UNIT_CLASS_TRUCK | UNIT_CLASS_BLOCK | UNIT_CLASS_IGNORE;
							agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_IGNORE;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_CEPTOR;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = true;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_EFLAIR;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionSquadSufficientUnits" {
							state_ = false;
							internalColor_ = 0;
							playerType = AI_PLAYER_TYPE_ME;
							chooseSquadID = CHOOSE_SQUAD_2;
							unitType = UNIT_ATTRIBUTE_BOMBER;
							compareOperator = COMPARE_LESS;
							unitsNumber = 5;
							soldiers = 0;
							officers = 0;
							technics = 0;
						};
					}
				};
			};
			action = "struct ActionSquadAttack" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_2;
				attackByType = UNIT_ATTRIBUTE_GYROID;
				unitsToAttack = {
					0;
				};
				unitClassToAttack = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_BUILDER | UNIT_CLASS_AIR_FILTH | UNIT_CLASS_GROUND_FILTH | UNIT_CLASS_IGNORE;
				offensive = true;
				unitsNumber = 1;
				soldiers = 0;
				officers = 0;
				technics = 0;
				attackTime = 10;
				remutateCounter = 1;
				holdProduction = false;
				squadFollowDistance = 0.;
				squadToFollowBy = CHOOSE_SQUAD_2;
				ignoreLastTarget = false;
				returnToBase = true;
				interruptable = false;
				attackTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 16777088;
			cellIndex = {
				x = 3;
				y = 61;
			};
			boundingRect = {
				left = 864;
				top = 3904;
				right = 1120;
				bottom = 3936;
			};
		},
		{
			name = "С2-цептор0";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					4;
					{
						type = NORMAL;
						condition = "struct ConditionUnitClassIsGoingToBeAttacked" {
							state_ = false;
							internalColor_ = 255;
							victimUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_STRUCTURE | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_STRUCTURE_SPECIAL | UNIT_CLASS_STRUCTURE_CORE | UNIT_CLASS_FRAME | UNIT_CLASS_BUILDER | UNIT_CLASS_TRUCK | UNIT_CLASS_BLOCK | UNIT_CLASS_IGNORE;
							agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_IGNORE;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_CONDUCTOR;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = true;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_EFLAIR;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionSquadSufficientUnits" {
							state_ = false;
							internalColor_ = 0;
							playerType = AI_PLAYER_TYPE_ME;
							chooseSquadID = CHOOSE_SQUAD_2;
							unitType = UNIT_ATTRIBUTE_BOMBER;
							compareOperator = COMPARE_LESS;
							unitsNumber = 5;
							soldiers = 0;
							officers = 0;
							technics = 0;
						};
					}
				};
			};
			action = "struct ActionSquadAttack" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_2;
				attackByType = UNIT_ATTRIBUTE_CEPTOR;
				unitsToAttack = {
					0;
				};
				unitClassToAttack = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_BUILDER | UNIT_CLASS_AIR_FILTH | UNIT_CLASS_GROUND_FILTH | UNIT_CLASS_IGNORE;
				offensive = true;
				unitsNumber = 1;
				soldiers = 0;
				officers = 0;
				technics = 0;
				attackTime = 10;
				remutateCounter = 1;
				holdProduction = false;
				squadFollowDistance = 0.;
				squadToFollowBy = CHOOSE_SQUAD_1;
				ignoreLastTarget = false;
				returnToBase = true;
				interruptable = false;
				attackTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 16777088;
			cellIndex = {
				x = 3;
				y = 62;
			};
			boundingRect = {
				left = 864;
				top = 3968;
				right = 1120;
				bottom = 4000;
			};
		},
		{
			name = "С2-электротанк0";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					3;
					{
						type = NORMAL;
						condition = "struct ConditionUnitClassIsGoingToBeAttacked" {
							state_ = false;
							internalColor_ = 255;
							victimUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_STRUCTURE | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_STRUCTURE_SPECIAL | UNIT_CLASS_STRUCTURE_CORE | UNIT_CLASS_FRAME | UNIT_CLASS_BUILDER | UNIT_CLASS_TRUCK | UNIT_CLASS_BLOCK | UNIT_CLASS_IGNORE;
							agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_IGNORE;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_CONDUCTOR;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionSquadSufficientUnits" {
							state_ = false;
							internalColor_ = 0;
							playerType = AI_PLAYER_TYPE_ME;
							chooseSquadID = CHOOSE_SQUAD_2;
							unitType = UNIT_ATTRIBUTE_BOMBER;
							compareOperator = COMPARE_LESS;
							unitsNumber = 5;
							soldiers = 0;
							officers = 0;
							technics = 0;
						};
					}
				};
			};
			action = "struct ActionSquadAttack" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_1;
				attackByType = UNIT_ATTRIBUTE_EFLAIR;
				unitsToAttack = {
					0;
				};
				unitClassToAttack = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_BUILDER | UNIT_CLASS_AIR_FILTH | UNIT_CLASS_GROUND_FILTH | UNIT_CLASS_IGNORE;
				offensive = true;
				unitsNumber = 1;
				soldiers = 0;
				officers = 0;
				technics = 0;
				attackTime = 10;
				remutateCounter = 1;
				holdProduction = false;
				squadFollowDistance = 0.;
				squadToFollowBy = CHOOSE_SQUAD_1;
				ignoreLastTarget = false;
				returnToBase = true;
				interruptable = false;
				attackTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 16777088;
			cellIndex = {
				x = 3;
				y = 63;
			};
			boundingRect = {
				left = 864;
				top = 4032;
				right = 1120;
				bottom = 4064;
			};
		},
		{
			name = "С2-кондуктор0";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionUnitClassIsGoingToBeAttacked" {
							state_ = false;
							internalColor_ = 255;
							victimUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_STRUCTURE | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_STRUCTURE_SPECIAL | UNIT_CLASS_STRUCTURE_CORE | UNIT_CLASS_FRAME | UNIT_CLASS_BUILDER | UNIT_CLASS_TRUCK | UNIT_CLASS_BLOCK | UNIT_CLASS_IGNORE;
							agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_IGNORE;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionSquadSufficientUnits" {
							state_ = false;
							internalColor_ = 0;
							playerType = AI_PLAYER_TYPE_ME;
							chooseSquadID = CHOOSE_SQUAD_2;
							unitType = UNIT_ATTRIBUTE_BOMBER;
							compareOperator = COMPARE_LESS;
							unitsNumber = 5;
							soldiers = 0;
							officers = 0;
							technics = 0;
						};
					}
				};
			};
			action = "struct ActionSquadAttack" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_2;
				attackByType = UNIT_ATTRIBUTE_CONDUCTOR;
				unitsToAttack = {
					0;
				};
				unitClassToAttack = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_BUILDER | UNIT_CLASS_AIR_FILTH | UNIT_CLASS_GROUND_FILTH | UNIT_CLASS_IGNORE;
				offensive = true;
				unitsNumber = 1;
				soldiers = 0;
				officers = 0;
				technics = 0;
				attackTime = 10;
				remutateCounter = 1;
				holdProduction = false;
				squadFollowDistance = 0.;
				squadToFollowBy = CHOOSE_SQUAD_1;
				ignoreLastTarget = false;
				returnToBase = true;
				interruptable = false;
				attackTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 16777088;
			cellIndex = {
				x = 3;
				y = 64;
			};
			boundingRect = {
				left = 864;
				top = 4096;
				right = 1120;
				bottom = 4128;
			};
		},
		{
			name = "ИМПЕРИЯ11";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionCheckBelligerent" {
							state_ = true;
							internalColor_ = 0;
							belligerent = EMPIRE;
						};
					}
				};
			};
			action = "struct Action" {
				internalColor_ = 0;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "С1- дезинтегратор11";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = -12;
						y = 16;
					};
					childOffset = {
						x = -31;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellIndex = {
				x = -3;
				y = 23;
			};
			boundingRect = {
				left = -864;
				top = 1472;
				right = -608;
				bottom = 1504;
			};
		},
		{
			name = "С1- дезинтегратор11";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionUnitClassIsGoingToBeAttacked" {
							state_ = false;
							internalColor_ = 255;
							victimUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_STRUCTURE | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_STRUCTURE_SPECIAL | UNIT_CLASS_STRUCTURE_CORE | UNIT_CLASS_FRAME | UNIT_CLASS_BUILDER | UNIT_CLASS_TRUCK | UNIT_CLASS_BLOCK | UNIT_CLASS_IGNORE;
							agressorUnitClass = UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_UNDERGROUND | UNIT_CLASS_IGNORE;
						};
					}
				};
			};
			action = "struct ActionSquadAttack" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_1;
				attackByType = UNIT_ATTRIBUTE_DISINTEGRATOR;
				unitsToAttack = {
					0;
				};
				unitClassToAttack = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_IGNORE;
				offensive = true;
				unitsNumber = 1;
				soldiers = 0;
				officers = 0;
				technics = 0;
				attackTime = 10;
				remutateCounter = 1;
				holdProduction = false;
				squadFollowDistance = 0.;
				squadToFollowBy = CHOOSE_SQUAD_1;
				ignoreLastTarget = false;
				returnToBase = true;
				interruptable = false;
				attackTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 16777088;
			cellIndex = {
				x = -3;
				y = 26;
			};
			boundingRect = {
				left = -864;
				top = 1664;
				right = -608;
				bottom = 1696;
			};
		},
		{
			name = "ИСХОДНИКИ11";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionCheckBelligerent" {
							state_ = false;
							internalColor_ = 0;
							belligerent = EXODUS;
						};
					}
				};
			};
			action = "struct Action" {
				internalColor_ = 0;
			};
			outcomingLinks = {
				3;
				{
					triggerName = "С1-базовые-хитер11";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 41;
						y = 16;
					};
					childOffset = {
						x = 29;
						y = -16;
					};
				},
				{
					triggerName = "С1хитер21";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 53;
						y = 16;
					};
					childOffset = {
						x = 45;
						y = -16;
					};
				},
				{
					triggerName = "С1-хитер1";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellIndex = {
				x = -4;
				y = 23;
			};
			boundingRect = {
				left = -1152;
				top = 1472;
				right = -896;
				bottom = 1504;
			};
		},
		{
			name = "С1-базовые-хитер11";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_SCUM_HEATER;
						};
					}
				};
			};
			action = "struct ActionSquadOrderUnits" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_1;
				soldiers = 0;
				officers = 80;
				technics = 70;
				energyReserve = 0.;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 8453888;
			cellIndex = {
				x = -4;
				y = 24;
			};
			boundingRect = {
				left = -1152;
				top = 1536;
				right = -896;
				bottom = 1568;
			};
		},
		{
			name = "С1хитер21";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = OR;
				conditions = {
					1;
					{
						type = INVERTED;
						condition = "struct ConditionUnitClassIsGoingToBeAttacked" {
							state_ = false;
							internalColor_ = 255;
							victimUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_STRUCTURE_CORE | UNIT_CLASS_FRAME | UNIT_CLASS_BUILDER | UNIT_CLASS_TRUCK | UNIT_CLASS_BLOCK | UNIT_CLASS_IGNORE;
							agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_UNDERGROUND | UNIT_CLASS_IGNORE;
						};
					}
				};
			};
			action = "struct ActionSquadAttack" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_1;
				attackByType = UNIT_ATTRIBUTE_SCUM_HEATER;
				unitsToAttack = {
					1;
					UNIT_ATTRIBUTE_CORE
				};
				unitClassToAttack = UNIT_CLASS_STRUCTURE | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_FRAME | UNIT_CLASS_IGNORE;
				offensive = true;
				unitsNumber = 3;
				soldiers = 0;
				officers = 0;
				technics = 0;
				attackTime = 100;
				remutateCounter = 1;
				holdProduction = true;
				squadFollowDistance = 0.;
				squadToFollowBy = CHOOSE_SQUAD_1;
				ignoreLastTarget = false;
				returnToBase = true;
				interruptable = true;
				attackTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12615808;
			cellIndex = {
				x = -4;
				y = 25;
			};
			boundingRect = {
				left = -1152;
				top = 1600;
				right = -896;
				bottom = 1632;
			};
		},
		{
			name = "С1-заказать юнитов111";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					5;
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = true;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_CEPTOR;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_CONDUCTOR;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_EFLAIR;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_SCUM_HEATER;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = false;
							internalColor_ = 0;
							type = OR;
							conditions = {
								2;
								{
									type = NORMAL;
									condition = "struct ConditionMutationEnabled" {
										state_ = false;
										internalColor_ = 0;
										unitType = UNIT_ATTRIBUTE_GYROID;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionMutationEnabled" {
										state_ = false;
										internalColor_ = 0;
										unitType = UNIT_ATTRIBUTE_STRAFER;
									};
								}
							};
						};
					}
				};
			};
			action = "struct ActionSquadOrderUnits" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_1;
				soldiers = 40;
				officers = 80;
				technics = 30;
				energyReserve = 0.;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 8454016;
			cellIndex = {
				x = -5;
				y = 22;
			};
			boundingRect = {
				left = -1440;
				top = 1408;
				right = -1184;
				bottom = 1440;
			};
		},
		{
			name = "С 1 - героид121";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					5;
					{
						type = INVERTED;
						condition = "struct ConditionUnitClassIsGoingToBeAttacked" {
							state_ = false;
							internalColor_ = 255;
							victimUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_STRUCTURE | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_STRUCTURE_SPECIAL | UNIT_CLASS_STRUCTURE_CORE | UNIT_CLASS_FRAME | UNIT_CLASS_BUILDER | UNIT_CLASS_TRUCK | UNIT_CLASS_BLOCK | UNIT_CLASS_IGNORE;
							agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_IGNORE;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = true;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_CEPTOR;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_CONDUCTOR;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_EFLAIR;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_SCUM_HEATER;
						};
					}
				};
			};
			action = "struct ActionSquadAttack" {
				internalColor_ = 16629619;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_1;
				attackByType = UNIT_ATTRIBUTE_GYROID;
				unitsToAttack = {
					0;
				};
				unitClassToAttack = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_BUILDER | UNIT_CLASS_AIR_FILTH | UNIT_CLASS_GROUND_FILTH | UNIT_CLASS_IGNORE;
				offensive = true;
				unitsNumber = 10;
				soldiers = 0;
				officers = 0;
				technics = 0;
				attackTime = 30;
				remutateCounter = 1;
				holdProduction = true;
				squadFollowDistance = 0.;
				squadToFollowBy = CHOOSE_SQUAD_2;
				ignoreLastTarget = false;
				returnToBase = true;
				interruptable = true;
				attackTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 16744576;
			cellIndex = {
				x = -5;
				y = 23;
			};
			boundingRect = {
				left = -1440;
				top = 1472;
				right = -1184;
				bottom = 1504;
			};
		},
		{
			name = "С 1 - героид00011";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					6;
					{
						type = NORMAL;
						condition = "struct ConditionUnitClassIsGoingToBeAttacked" {
							state_ = false;
							internalColor_ = 255;
							victimUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_STRUCTURE | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_STRUCTURE_SPECIAL | UNIT_CLASS_STRUCTURE_CORE | UNIT_CLASS_FRAME | UNIT_CLASS_BUILDER | UNIT_CLASS_TRUCK | UNIT_CLASS_BLOCK | UNIT_CLASS_IGNORE;
							agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_IGNORE;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_CONDUCTOR;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_DISINTEGRATOR;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_CEPTOR;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = true;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_EFLAIR;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_SCUM_HEATER;
						};
					}
				};
			};
			action = "struct ActionSquadAttack" {
				internalColor_ = 16629619;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_1;
				attackByType = UNIT_ATTRIBUTE_GYROID;
				unitsToAttack = {
					0;
				};
				unitClassToAttack = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_IGNORE;
				offensive = true;
				unitsNumber = 1;
				soldiers = 0;
				officers = 0;
				technics = 0;
				attackTime = 10;
				remutateCounter = 1;
				holdProduction = false;
				squadFollowDistance = 0.;
				squadToFollowBy = CHOOSE_SQUAD_1;
				ignoreLastTarget = false;
				returnToBase = true;
				interruptable = false;
				attackTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 16777088;
			cellIndex = {
				x = -5;
				y = 24;
			};
			boundingRect = {
				left = -1440;
				top = 1536;
				right = -1184;
				bottom = 1568;
			};
		},
		{
			name = "нормальный";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionDifficultyLevel" {
							state_ = true;
							internalColor_ = 0;
							difficulty = DIFFICULTY_NORMAL;
						};
					}
				};
			};
			action = "struct Action" {
				internalColor_ = 0;
			};
			outcomingLinks = {
				26;
				{
					triggerName = "С1-заказать юнитов111";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 128;
						y = 11;
					};
					childOffset = {
						x = -75;
						y = -16;
					};
				},
				{
					triggerName = "С 1 - героид121";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 119;
						y = 16;
					};
					childOffset = {
						x = -70;
						y = -16;
					};
				},
				{
					triggerName = "С 1 - героид00011";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 97;
						y = 16;
					};
					childOffset = {
						x = -57;
						y = -16;
					};
				},
				{
					triggerName = "С1-заказать юнитов111";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 128;
						y = 11;
					};
					childOffset = {
						x = -75;
						y = -16;
					};
				},
				{
					triggerName = "С 1 - героид121";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 119;
						y = 16;
					};
					childOffset = {
						x = -70;
						y = -16;
					};
				},
				{
					triggerName = "С 1 - героид00011";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 97;
						y = 16;
					};
					childOffset = {
						x = -57;
						y = -16;
					};
				},
				{
					triggerName = "ИСХОДНИКИ11";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffset = {
						x = 24;
						y = 16;
					};
					childOffset = {
						x = -24;
						y = -16;
					};
				},
				{
					triggerName = "ИМПЕРИЯ11";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffset = {
						x = 36;
						y = 16;
					};
					childOffset = {
						x = -36;
						y = -16;
					};
				},
				{
					triggerName = "С1-заказать юнитов111";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 128;
						y = 11;
					};
					childOffset = {
						x = -75;
						y = -16;
					};
				},
				{
					triggerName = "С 1 - героид121";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 119;
						y = 16;
					};
					childOffset = {
						x = -70;
						y = -16;
					};
				},
				{
					triggerName = "С 1 - героид00011";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 97;
						y = 16;
					};
					childOffset = {
						x = -57;
						y = -16;
					};
				},
				{
					triggerName = "С 1- стрейфер11";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = -120;
						y = 16;
					};
					childOffset = {
						x = 124;
						y = -16;
					};
				},
				{
					triggerName = "С1-заказать юнитов111";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 128;
						y = 11;
					};
					childOffset = {
						x = -75;
						y = -16;
					};
				},
				{
					triggerName = "С 1 - героид121";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 119;
						y = 16;
					};
					childOffset = {
						x = -70;
						y = -16;
					};
				},
				{
					triggerName = "С 1 - героид00011";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 97;
						y = 16;
					};
					childOffset = {
						x = -57;
						y = -16;
					};
				},
				{
					triggerName = "С1- базовые : рокер11";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 23;
						y = 16;
					};
					childOffset = {
						x = 22;
						y = -16;
					};
				},
				{
					triggerName = "ИСХОДНИКИ11";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffset = {
						x = 24;
						y = 16;
					};
					childOffset = {
						x = -24;
						y = -16;
					};
				},
				{
					triggerName = "ИМПЕРИЯ11";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffset = {
						x = 36;
						y = 16;
					};
					childOffset = {
						x = -36;
						y = -16;
					};
				},
				{
					triggerName = "C1-электротанк2";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				},
				{
					triggerName = "С1-кондуктор3";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				},
				{
					triggerName = "C1-электротанк01";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				},
				{
					triggerName = "С1-кондуктор01";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				},
				{
					triggerName = "С1- цептор 2001";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				},
				{
					triggerName = "С1-цептор атака1";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				},
				{
					triggerName = "С1-электросамолет1";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				},
				{
					triggerName = "С1-кондуктор11";
					color = STRATEGY_RED;
					type = THICK;
					active_ = false;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = 0;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellIndex = {
				x = -6;
				y = 17;
			};
			boundingRect = {
				left = -1728;
				top = 1088;
				right = -1472;
				bottom = 1120;
			};
		},
		{
			name = "С 1- стрейфер11";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					7;
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_DISINTEGRATOR;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionUnitClassIsGoingToBeAttacked" {
							state_ = false;
							internalColor_ = 255;
							victimUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_STRUCTURE_CORE | UNIT_CLASS_FRAME | UNIT_CLASS_BUILDER | UNIT_CLASS_TRUCK | UNIT_CLASS_BLOCK | UNIT_CLASS_IGNORE;
							agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_IGNORE;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_GYROID;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_CEPTOR;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_SCUM_HEATER;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = true;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_EFLAIR;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_CONDUCTOR;
						};
					}
				};
			};
			action = "struct ActionSquadAttack" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_4;
				attackByType = UNIT_ATTRIBUTE_STRAFER;
				unitsToAttack = {
					0;
				};
				unitClassToAttack = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_IGNORE;
				offensive = true;
				unitsNumber = 3;
				soldiers = 0;
				officers = 0;
				technics = 0;
				attackTime = 10;
				remutateCounter = 1;
				holdProduction = false;
				squadFollowDistance = 0.;
				squadToFollowBy = CHOOSE_SQUAD_1;
				ignoreLastTarget = false;
				returnToBase = true;
				interruptable = false;
				attackTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 16777088;
			cellIndex = {
				x = -7;
				y = 22;
			};
			boundingRect = {
				left = -2016;
				top = 1408;
				right = -1760;
				bottom = 1440;
			};
		},
		{
			name = "С1- базовые : рокер11";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					4;
					{
						type = NORMAL;
						condition = "struct ConditionMutationEnabled" {
							state_ = true;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_CEPTOR;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_EFLAIR;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_CONDUCTOR;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_SCUM_HEATER;
						};
					}
				};
			};
			action = "struct ActionSquadOrderUnits" {
				internalColor_ = 16629619;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_1;
				soldiers = 50;
				officers = 80;
				technics = 15;
				energyReserve = 0.;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 8454016;
			cellIndex = {
				x = -6;
				y = 22;
			};
			boundingRect = {
				left = -1728;
				top = 1408;
				right = -1472;
				bottom = 1440;
			};
		},
		{
			name = "C1-электротанк2";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					3;
					{
						type = NORMAL;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_EFLAIR;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_CONDUCTOR;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_SCUM_HEATER;
						};
					}
				};
			};
			action = "struct ActionSquadOrderUnits" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_1;
				soldiers = 40;
				officers = 80;
				technics = 30;
				energyReserve = 0.;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 8454016;
			cellIndex = {
				x = -6;
				y = 24;
			};
			boundingRect = {
				left = -1728;
				top = 1536;
				right = -1472;
				bottom = 1568;
			};
		},
		{
			name = "С1-кондуктор3";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_CONDUCTOR;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_SCUM_HEATER;
						};
					}
				};
			};
			action = "struct ActionSquadOrderUnits" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_1;
				soldiers = 45;
				officers = 80;
				technics = 25;
				energyReserve = 0.;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 8454016;
			cellIndex = {
				x = -6;
				y = 26;
			};
			boundingRect = {
				left = -1728;
				top = 1664;
				right = -1472;
				bottom = 1696;
			};
		},
		{
			name = "C1-электротанк01";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					3;
					{
						type = INVERTED;
						condition = "struct ConditionUnitClassIsGoingToBeAttacked" {
							state_ = false;
							internalColor_ = 255;
							victimUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_STRUCTURE | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_STRUCTURE_SPECIAL | UNIT_CLASS_STRUCTURE_CORE | UNIT_CLASS_FRAME | UNIT_CLASS_BUILDER | UNIT_CLASS_TRUCK | UNIT_CLASS_BLOCK | UNIT_CLASS_IGNORE;
							agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_IGNORE;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_CONDUCTOR;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_SCUM_HEATER;
						};
					}
				};
			};
			action = "struct ActionSquadAttack" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_1;
				attackByType = UNIT_ATTRIBUTE_EFLAIR;
				unitsToAttack = {
					6;
					UNIT_ATTRIBUTE_GUN_HOWITZER,
					UNIT_ATTRIBUTE_ELECTRO_CANNON,
					UNIT_ATTRIBUTE_GUN_FILTH_NAVIGATOR,
					UNIT_ATTRIBUTE_GUN_BALLISTIC,
					UNIT_ATTRIBUTE_GUN_SCUM_DISRUPTOR,
					UNIT_ATTRIBUTE_CORE
				};
				unitClassToAttack = UNIT_CLASS_STRUCTURE | UNIT_CLASS_FRAME | UNIT_CLASS_IGNORE;
				offensive = true;
				unitsNumber = 6;
				soldiers = 0;
				officers = 0;
				technics = 0;
				attackTime = 30;
				remutateCounter = 1;
				holdProduction = true;
				squadFollowDistance = 0.;
				squadToFollowBy = CHOOSE_SQUAD_1;
				ignoreLastTarget = false;
				returnToBase = true;
				interruptable = true;
				attackTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 16711680;
			cellIndex = {
				x = -6;
				y = 25;
			};
			boundingRect = {
				left = -1728;
				top = 1600;
				right = -1472;
				bottom = 1632;
			};
		},
		{
			name = "С1-кондуктор01";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					2;
					{
						type = INVERTED;
						condition = "struct ConditionUnitClassIsGoingToBeAttacked" {
							state_ = false;
							internalColor_ = 255;
							victimUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_STRUCTURE | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_STRUCTURE_SPECIAL | UNIT_CLASS_STRUCTURE_CORE | UNIT_CLASS_FRAME | UNIT_CLASS_BUILDER | UNIT_CLASS_TRUCK | UNIT_CLASS_BLOCK | UNIT_CLASS_IGNORE;
							agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_IGNORE;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_SCUM_HEATER;
						};
					}
				};
			};
			action = "struct ActionSquadAttack" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_1;
				attackByType = UNIT_ATTRIBUTE_CONDUCTOR;
				unitsToAttack = {
					6;
					UNIT_ATTRIBUTE_GUN_HOWITZER,
					UNIT_ATTRIBUTE_ELECTRO_CANNON,
					UNIT_ATTRIBUTE_GUN_FILTH_NAVIGATOR,
					UNIT_ATTRIBUTE_GUN_BALLISTIC,
					UNIT_ATTRIBUTE_GUN_SCUM_DISRUPTOR,
					UNIT_ATTRIBUTE_CORE
				};
				unitClassToAttack = UNIT_CLASS_STRUCTURE | UNIT_CLASS_FRAME | UNIT_CLASS_IGNORE;
				offensive = true;
				unitsNumber = 3;
				soldiers = 0;
				officers = 0;
				technics = 0;
				attackTime = 30;
				remutateCounter = 1;
				holdProduction = true;
				squadFollowDistance = 0.;
				squadToFollowBy = CHOOSE_SQUAD_1;
				ignoreLastTarget = false;
				returnToBase = true;
				interruptable = true;
				attackTimer = {
					time = 21000;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 16711680;
			cellIndex = {
				x = -6;
				y = 27;
			};
			boundingRect = {
				left = -1728;
				top = 1728;
				right = -1472;
				bottom = 1760;
			};
		},
		{
			name = "С1- цептор 2001";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					4;
					{
						type = INVERTED;
						condition = "struct ConditionUnitClassIsGoingToBeAttacked" {
							state_ = false;
							internalColor_ = 255;
							victimUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_STRUCTURE | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_STRUCTURE_SPECIAL | UNIT_CLASS_STRUCTURE_CORE | UNIT_CLASS_FRAME | UNIT_CLASS_BUILDER | UNIT_CLASS_TRUCK | UNIT_CLASS_BLOCK | UNIT_CLASS_IGNORE;
							agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_IGNORE;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_CONDUCTOR;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_EFLAIR;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_SCUM_HEATER;
						};
					}
				};
			};
			action = "struct ActionSquadAttack" {
				internalColor_ = 16629619;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_1;
				attackByType = UNIT_ATTRIBUTE_CEPTOR;
				unitsToAttack = {
					0;
				};
				unitClassToAttack = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_BUILDER | UNIT_CLASS_AIR_FILTH | UNIT_CLASS_GROUND_FILTH | UNIT_CLASS_IGNORE;
				offensive = true;
				unitsNumber = 5;
				soldiers = 0;
				officers = 0;
				technics = 0;
				attackTime = 30;
				remutateCounter = 1;
				holdProduction = true;
				squadFollowDistance = 0.;
				squadToFollowBy = CHOOSE_SQUAD_1;
				ignoreLastTarget = false;
				returnToBase = true;
				interruptable = true;
				attackTimer = {
					time = 9200;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 16744448;
			cellIndex = {
				x = -6;
				y = 23;
			};
			boundingRect = {
				left = -1728;
				top = 1472;
				right = -1472;
				bottom = 1504;
			};
		},
		{
			name = "С1-цептор атака1";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					5;
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_SCUM_HEATER;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionUnitClassIsGoingToBeAttacked" {
							state_ = false;
							internalColor_ = 255;
							victimUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_STRUCTURE | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_STRUCTURE_SPECIAL | UNIT_CLASS_STRUCTURE_CORE | UNIT_CLASS_FRAME | UNIT_CLASS_BUILDER | UNIT_CLASS_TRUCK | UNIT_CLASS_BLOCK | UNIT_CLASS_IGNORE;
							agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_IGNORE;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_CONDUCTOR;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = true;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_EFLAIR;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_DISINTEGRATOR;
						};
					}
				};
			};
			action = "struct ActionSquadAttack" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_1;
				attackByType = UNIT_ATTRIBUTE_CEPTOR;
				unitsToAttack = {
					0;
				};
				unitClassToAttack = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_BUILDER | UNIT_CLASS_AIR_FILTH | UNIT_CLASS_GROUND_FILTH | UNIT_CLASS_IGNORE;
				offensive = true;
				unitsNumber = 1;
				soldiers = 0;
				officers = 0;
				technics = 0;
				attackTime = 10;
				remutateCounter = 1;
				holdProduction = false;
				squadFollowDistance = 0.;
				squadToFollowBy = CHOOSE_SQUAD_1;
				ignoreLastTarget = false;
				returnToBase = true;
				interruptable = false;
				attackTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 16777088;
			cellIndex = {
				x = -6;
				y = 28;
			};
			boundingRect = {
				left = -1728;
				top = 1792;
				right = -1472;
				bottom = 1824;
			};
		},
		{
			name = "С1-электросамолет1";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					4;
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_CONDUCTOR;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionUnitClassIsGoingToBeAttacked" {
							state_ = false;
							internalColor_ = 255;
							victimUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_STRUCTURE | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_STRUCTURE_SPECIAL | UNIT_CLASS_STRUCTURE_CORE | UNIT_CLASS_FRAME | UNIT_CLASS_BUILDER | UNIT_CLASS_TRUCK | UNIT_CLASS_BLOCK | UNIT_CLASS_IGNORE;
							agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_IGNORE;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_SCUM_HEATER;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_DISINTEGRATOR;
						};
					}
				};
			};
			action = "struct ActionSquadAttack" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_1;
				attackByType = UNIT_ATTRIBUTE_EFLAIR;
				unitsToAttack = {
					0;
				};
				unitClassToAttack = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_BUILDER | UNIT_CLASS_AIR_FILTH | UNIT_CLASS_GROUND_FILTH | UNIT_CLASS_IGNORE;
				offensive = true;
				unitsNumber = 1;
				soldiers = 0;
				officers = 0;
				technics = 0;
				attackTime = 10;
				remutateCounter = 1;
				holdProduction = false;
				squadFollowDistance = 0.;
				squadToFollowBy = CHOOSE_SQUAD_1;
				ignoreLastTarget = false;
				returnToBase = true;
				interruptable = false;
				attackTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 16777088;
			cellIndex = {
				x = -6;
				y = 29;
			};
			boundingRect = {
				left = -1728;
				top = 1856;
				right = -1472;
				bottom = 1888;
			};
		},
		{
			name = "С1-кондуктор11";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					3;
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_SCUM_HEATER;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionUnitClassIsGoingToBeAttacked" {
							state_ = false;
							internalColor_ = 255;
							victimUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_STRUCTURE | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_STRUCTURE_SPECIAL | UNIT_CLASS_STRUCTURE_CORE | UNIT_CLASS_FRAME | UNIT_CLASS_BUILDER | UNIT_CLASS_TRUCK | UNIT_CLASS_BLOCK | UNIT_CLASS_IGNORE;
							agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_IGNORE;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionMutationEnabled" {
							state_ = false;
							internalColor_ = 0;
							unitType = UNIT_ATTRIBUTE_DISINTEGRATOR;
						};
					}
				};
			};
			action = "struct ActionSquadAttack" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_1;
				attackByType = UNIT_ATTRIBUTE_CONDUCTOR;
				unitsToAttack = {
					0;
				};
				unitClassToAttack = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_BUILDER | UNIT_CLASS_AIR_FILTH | UNIT_CLASS_GROUND_FILTH | UNIT_CLASS_IGNORE;
				offensive = true;
				unitsNumber = 1;
				soldiers = 0;
				officers = 0;
				technics = 0;
				attackTime = 10;
				remutateCounter = 1;
				holdProduction = false;
				squadFollowDistance = 0.;
				squadToFollowBy = CHOOSE_SQUAD_1;
				ignoreLastTarget = false;
				returnToBase = true;
				interruptable = false;
				attackTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 16777088;
			cellIndex = {
				x = -6;
				y = 30;
			};
			boundingRect = {
				left = -1728;
				top = 1920;
				right = -1472;
				bottom = 1952;
			};
		},
		{
			name = "С1-хитер1";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionUnitClassIsGoingToBeAttacked" {
							state_ = false;
							internalColor_ = 255;
							victimUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_STRUCTURE | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_STRUCTURE_SPECIAL | UNIT_CLASS_STRUCTURE_CORE | UNIT_CLASS_FRAME | UNIT_CLASS_BUILDER | UNIT_CLASS_TRUCK | UNIT_CLASS_BLOCK | UNIT_CLASS_IGNORE;
							agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_IGNORE;
						};
					}
				};
			};
			action = "struct ActionSquadAttack" {
				internalColor_ = 0;
				onlyIfAi = true;
				chooseSquadID = CHOOSE_SQUAD_1;
				attackByType = UNIT_ATTRIBUTE_SCUM_HEATER;
				unitsToAttack = {
					0;
				};
				unitClassToAttack = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_UNDERGROUND | UNIT_CLASS_IGNORE;
				offensive = true;
				unitsNumber = 1;
				soldiers = 0;
				officers = 0;
				technics = 0;
				attackTime = 10;
				remutateCounter = 1;
				holdProduction = false;
				squadFollowDistance = 0.;
				squadToFollowBy = CHOOSE_SQUAD_1;
				ignoreLastTarget = false;
				returnToBase = true;
				interruptable = false;
				attackTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 16777088;
			cellIndex = {
				x = -4;
				y = 26;
			};
			boundingRect = {
				left = -1152;
				top = 1664;
				right = -896;
				bottom = 1696;
			};
		}
	};
	boundingRect = {
		left = -2016;
		top = -576;
		right = 2272;
		bottom = 4128;
	};
	viewRect = {
		left = -2021;
		top = 962;
		right = -486;
		bottom = 2352;
	};
};
