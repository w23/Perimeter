TriggerChain = {
	name = "";
	triggers = {
		56;
		{
			name = "START";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = AND;
							conditions = {
								0;
							};
						};
					}
				};
			};
			action = 0;
			outcomingLinks = {
				8;
				{
					triggerName = "старт";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = -10;
					childOffsetX_ = -128;
					childOffsetY_ = -2;
					parentOffset = {
						x = 128;
						y = -10;
					};
					childOffset = {
						x = -128;
						y = -2;
					};
				},
				{
					triggerName = "терминал";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 129;
					parentOffsetY_ = 15;
					childOffsetX_ = -118;
					childOffsetY_ = -16;
					parentOffset = {
						x = 129;
						y = 15;
					};
					childOffset = {
						x = -118;
						y = -16;
					};
				},
				{
					triggerName = "111111111";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = -4;
					childOffsetX_ = -128;
					childOffsetY_ = -10;
					parentOffset = {
						x = 128;
						y = -4;
					};
					childOffset = {
						x = -128;
						y = -10;
					};
				},
				{
					triggerName = "выкл. интерфейс0";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -121;
					parentOffsetY_ = -16;
					childOffsetX_ = 128;
					childOffsetY_ = 9;
					parentOffset = {
						x = -121;
						y = -16;
					};
					childOffset = {
						x = 128;
						y = 9;
					};
				},
				{
					triggerName = "на врага";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -128;
					parentOffsetY_ = -5;
					childOffsetX_ = 128;
					childOffsetY_ = -2;
					parentOffset = {
						x = -128;
						y = -5;
					};
					childOffset = {
						x = 128;
						y = -2;
					};
				},
				{
					triggerName = "на фрейм0";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -117;
					parentOffsetY_ = 16;
					childOffsetX_ = 126;
					childOffsetY_ = -16;
					parentOffset = {
						x = -117;
						y = 16;
					};
					childOffset = {
						x = 126;
						y = -16;
					};
				},
				{
					triggerName = "уничтожить бомбу0";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = -5;
					childOffsetX_ = -112;
					childOffsetY_ = -16;
					parentOffset = {
						x = 128;
						y = -5;
					};
					childOffset = {
						x = -112;
						y = -16;
					};
				},
				{
					triggerName = "11";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -79;
					parentOffsetY_ = 16;
					childOffsetX_ = 122;
					childOffsetY_ = -16;
					parentOffset = {
						x = -79;
						y = 16;
					};
					childOffset = {
						x = 122;
						y = -16;
					};
				}
			};
			state_ = CHECKING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = -1;
			cellNumberY = 3;
			left_ = -288;
			top_ = 192;
			right_ = -32;
			bottom_ = 224;
			cellIndex = {
				x = -1;
				y = 3;
			};
			boundingRect = {
				left = -288;
				top = 192;
				right = -32;
				bottom = 224;
			};
		},
		{
			name = "время";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = OR;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_STATIC_BOMB;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ENEMY;
							constructedAndConstructing = true;
						};
					}
				};
			};
			action = "struct ActionDelay" {
				internalColor_ = 0;
				delay = 600;
				showTimer = true;
				scaleByDifficulty = false;
				timer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 2;
			cellNumberY = 5;
			left_ = 576;
			top_ = 320;
			right_ = 832;
			bottom_ = 352;
			cellIndex = {
				x = 2;
				y = 5;
			};
			boundingRect = {
				left = 576;
				top = 320;
				right = 832;
				bottom = 352;
			};
		},
		{
			name = "победа";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					3;
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_FRAME;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ENEMY;
							constructedAndConstructing = true;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_STATIC_BOMB;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ENEMY;
							constructedAndConstructing = true;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionTeleportation" {
							state_ = true;
							internalColor_ = 0;
							teleportationType = TELEPORTATION_TYPE_OMEGA;
							playerType = AI_PLAYER_TYPE_ME;
						};
					}
				};
			};
			action = "struct ActionVictory" {
				internalColor_ = 0;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 1;
			cellNumberY = 0;
			left_ = 288;
			top_ = 0;
			right_ = 544;
			bottom_ = 32;
			cellIndex = {
				x = 1;
				y = 0;
			};
			boundingRect = {
				left = 288;
				top = 0;
				right = 544;
				bottom = 32;
			};
		},
		{
			name = "поражение";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionDefeat" {
				internalColor_ = 0;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 3;
			cellNumberY = -3;
			left_ = 864;
			top_ = -192;
			right_ = 1120;
			bottom_ = -160;
			cellIndex = {
				x = 3;
				y = -3;
			};
			boundingRect = {
				left = 864;
				top = -192;
				right = 1120;
				bottom = -160;
			};
		},
		{
			name = "тряска камеры";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = OR;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_STATIC_BOMB;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ENEMY;
							constructedAndConstructing = true;
						};
					}
				};
			};
			action = "struct ActionOscillateCamera" {
				internalColor_ = 0;
				duration = 5;
				factor = 1.;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "пауза";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = 0;
					childOffsetX_ = -128;
					childOffsetY_ = 0;
					parentOffset = {
						x = 128;
						y = 0;
					};
					childOffset = {
						x = -128;
						y = 0;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 1;
			cellNumberY = 4;
			left_ = 288;
			top_ = 256;
			right_ = 544;
			bottom_ = 288;
			cellIndex = {
				x = 1;
				y = 4;
			};
			boundingRect = {
				left = 288;
				top = 256;
				right = 544;
				bottom = 288;
			};
		},
		{
			name = "Camera";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = AND;
							conditions = {
								0;
							};
						};
					}
				};
			};
			action = "struct ActionSetCamera" {
				internalColor_ = 0;
				cameraSplineName = "Camera0";
				stepTime = 0.;
				cycles = 3;
				smoothTransition = true;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "на омегу";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 35;
					parentOffsetY_ = 16;
					childOffsetX_ = 35;
					childOffsetY_ = -16;
					parentOffset = {
						x = 35;
						y = 16;
					};
					childOffset = {
						x = 35;
						y = -16;
					};
				}
			};
			state_ = CHECKING;
			executionCounter_ = 0;
			internalColor_ = 12632256;
			cellNumberX = -1;
			cellNumberY = 1;
			left_ = -288;
			top_ = 64;
			right_ = -32;
			bottom_ = 96;
			cellIndex = {
				x = -1;
				y = 1;
			};
			boundingRect = {
				left = -288;
				top = 64;
				right = -32;
				bottom = 96;
			};
		},
		{
			name = "поражение 0";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = OR;
				conditions = {
					0;
				};
			};
			action = "struct ActionDefeat" {
				internalColor_ = 0;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 1;
			cellNumberY = -5;
			left_ = 288;
			top_ = -320;
			right_ = 544;
			bottom_ = -288;
			cellIndex = {
				x = 1;
				y = -5;
			};
			boundingRect = {
				left = 288;
				top = -320;
				right = 544;
				bottom = -288;
			};
		},
		{
			name = "пауза";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = AND;
							conditions = {
								0;
							};
						};
					}
				};
			};
			action = "struct ActionDelay" {
				internalColor_ = 0;
				delay = 60;
				showTimer = false;
				scaleByDifficulty = false;
				timer = {
					time = 0;
				};
			};
			outcomingLinks = {
				1;
				{
					triggerName = "тряска камеры";
					color = STRATEGY_BLUE;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -128;
					parentOffsetY_ = 0;
					childOffsetX_ = 128;
					childOffsetY_ = 0;
					parentOffset = {
						x = -128;
						y = 0;
					};
					childOffset = {
						x = 128;
						y = 0;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 2;
			cellNumberY = 4;
			left_ = 576;
			top_ = 256;
			right_ = 832;
			bottom_ = 288;
			cellIndex = {
				x = 2;
				y = 4;
			};
			boundingRect = {
				left = 576;
				top = 256;
				right = 832;
				bottom = 288;
			};
		},
		{
			name = "старт";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = AND;
							conditions = {
								0;
							};
						};
					}
				};
			};
			action = 0;
			outcomingLinks = {
				6;
				{
					triggerName = "телепортация";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 4;
					parentOffsetY_ = -16;
					childOffsetX_ = 2;
					childOffsetY_ = 16;
					parentOffset = {
						x = 4;
						y = -16;
					};
					childOffset = {
						x = 2;
						y = 16;
					};
				},
				{
					triggerName = "задание3провалено";
					color = STRATEGY_BLUE;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 58;
					parentOffsetY_ = -16;
					childOffsetX_ = 57;
					childOffsetY_ = 16;
					parentOffset = {
						x = 58;
						y = -16;
					};
					childOffset = {
						x = 57;
						y = 16;
					};
				},
				{
					triggerName = "П1";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = 1;
					childOffsetX_ = -128;
					childOffsetY_ = 1;
					parentOffset = {
						x = 128;
						y = 1;
					};
					childOffset = {
						x = -128;
						y = 1;
					};
				},
				{
					triggerName = "задание1провалено0";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = -12;
					childOffsetX_ = -117;
					childOffsetY_ = 16;
					parentOffset = {
						x = 128;
						y = -12;
					};
					childOffset = {
						x = -117;
						y = 16;
					};
				},
				{
					triggerName = "на фрейм1";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -15;
					parentOffsetY_ = -16;
					childOffsetX_ = -19;
					childOffsetY_ = 16;
					parentOffset = {
						x = -15;
						y = -16;
					};
					childOffset = {
						x = -19;
						y = 16;
					};
				},
				{
					triggerName = "п1111111";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 113;
					parentOffsetY_ = -16;
					childOffsetX_ = -113;
					childOffsetY_ = 16;
					parentOffset = {
						x = 113;
						y = -16;
					};
					childOffset = {
						x = -113;
						y = 16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 1;
			cellNumberY = 3;
			left_ = 288;
			top_ = 192;
			right_ = 544;
			bottom_ = 224;
			cellIndex = {
				x = 1;
				y = 3;
			};
			boundingRect = {
				left = 288;
				top = 192;
				right = 544;
				bottom = 224;
			};
		},
		{
			name = "ЗАДАНИЕ";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_FRAME;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = true;
						};
					}
				};
			};
			action = "struct ActionTask" {
				internalColor_ = 0;
				type = ASSIGNED;
				taskID = "Mission Tasks.Mission 22.Task 1";
				duration = 10;
				syncroBySound = false;
				showTips = true;
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				2;
				{
					triggerName = "задание2";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 9;
					parentOffsetY_ = 16;
					childOffsetX_ = 9;
					childOffsetY_ = -16;
					parentOffset = {
						x = 9;
						y = 16;
					};
					childOffset = {
						x = 9;
						y = -16;
					};
				},
				{
					triggerName = "задание1 выполнено";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 122;
					parentOffsetY_ = 16;
					childOffsetX_ = -128;
					childOffsetY_ = -8;
					parentOffset = {
						x = 122;
						y = 16;
					};
					childOffset = {
						x = -128;
						y = -8;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 14277119;
			cellNumberX = 0;
			cellNumberY = 5;
			left_ = 0;
			top_ = 320;
			right_ = 256;
			bottom_ = 352;
			cellIndex = {
				x = 0;
				y = 5;
			};
			boundingRect = {
				left = 0;
				top = 320;
				right = 256;
				bottom = 352;
			};
		},
		{
			name = "111111111";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionUnitClassUnderAttack" {
							state_ = true;
							internalColor_ = 0;
							victimUnitClass = UNIT_CLASS_STRUCTURE | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_STRUCTURE_CORE | UNIT_CLASS_FRAME | UNIT_CLASS_IGNORE;
							damagePercent = 1;
							agressorUnitClass = UNIT_CLASS_BASE | UNIT_CLASS_LIGHT | UNIT_CLASS_MEDIUM | UNIT_CLASS_HEAVY | UNIT_CLASS_AIR | UNIT_CLASS_AIR_HEAVY | UNIT_CLASS_STRUCTURE_GUN | UNIT_CLASS_IGNORE;
							playerType = AI_PLAYER_TYPE_ENEMY;
						};
					}
				};
			};
			action = "struct Action" {
				internalColor_ = 0;
			};
			outcomingLinks = {
				3;
				{
					triggerName = "тряска камеры";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -6;
					parentOffsetY_ = -16;
					childOffsetX_ = -15;
					childOffsetY_ = 16;
					parentOffset = {
						x = -6;
						y = -16;
					};
					childOffset = {
						x = -15;
						y = 16;
					};
				},
				{
					triggerName = "время";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = 3;
					childOffsetX_ = -128;
					childOffsetY_ = 3;
					parentOffset = {
						x = 128;
						y = 3;
					};
					childOffset = {
						x = -128;
						y = 3;
					};
				},
				{
					triggerName = "время=0";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 126;
					parentOffsetY_ = 16;
					childOffsetX_ = -128;
					childOffsetY_ = -16;
					parentOffset = {
						x = 126;
						y = 16;
					};
					childOffset = {
						x = -128;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 1;
			cellNumberY = 5;
			left_ = 288;
			top_ = 320;
			right_ = 544;
			bottom_ = 352;
			cellIndex = {
				x = 1;
				y = 5;
			};
			boundingRect = {
				left = 288;
				top = 320;
				right = 544;
				bottom = 352;
			};
		},
		{
			name = "терминал";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionMessage" {
				internalColor_ = 0;
				messageID = "Mission Tips.Mission 22.Tip 1";
				message = "";
				delay = 0;
				duration = 5;
				syncroBySound = false;
				delayTimer = {
					time = 0;
				};
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				1;
				{
					triggerName = "ЗАДАНИЕ";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -10;
					parentOffsetY_ = 16;
					childOffsetX_ = -13;
					childOffsetY_ = -16;
					parentOffset = {
						x = -10;
						y = 16;
					};
					childOffset = {
						x = -13;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 0;
			cellNumberY = 4;
			left_ = 0;
			top_ = 256;
			right_ = 256;
			bottom_ = 288;
			cellIndex = {
				x = 0;
				y = 4;
			};
			boundingRect = {
				left = 0;
				top = 256;
				right = 256;
				bottom = 288;
			};
		},
		{
			name = "задание2";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_FRAME;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = true;
						};
					}
				};
			};
			action = "struct ActionTask" {
				internalColor_ = 0;
				type = ASSIGNED;
				taskID = "Mission Tasks.Mission 22.Task 2";
				duration = 5;
				syncroBySound = false;
				showTips = true;
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				2;
				{
					triggerName = "задание3";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 11;
					parentOffsetY_ = 16;
					childOffsetX_ = 8;
					childOffsetY_ = -16;
					parentOffset = {
						x = 11;
						y = 16;
					};
					childOffset = {
						x = 8;
						y = -16;
					};
				},
				{
					triggerName = "задание2 выполнено";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 119;
					parentOffsetY_ = 16;
					childOffsetX_ = -128;
					childOffsetY_ = -13;
					parentOffset = {
						x = 119;
						y = 16;
					};
					childOffset = {
						x = -128;
						y = -13;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12895487;
			cellNumberX = 0;
			cellNumberY = 6;
			left_ = 0;
			top_ = 384;
			right_ = 256;
			bottom_ = 416;
			cellIndex = {
				x = 0;
				y = 6;
			};
			boundingRect = {
				left = 0;
				top = 384;
				right = 256;
				bottom = 416;
			};
		},
		{
			name = "задание3";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_FRAME;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = true;
						};
					}
				};
			};
			action = "struct ActionTask" {
				internalColor_ = 0;
				type = ASSIGNED;
				taskID = "Mission Tasks.Mission 22.Task 3";
				duration = 5;
				syncroBySound = false;
				showTips = true;
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				1;
				{
					triggerName = "задание3выполнено";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 9;
					parentOffsetY_ = 16;
					childOffsetX_ = 9;
					childOffsetY_ = -16;
					parentOffset = {
						x = 9;
						y = 16;
					};
					childOffset = {
						x = 9;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12895487;
			cellNumberX = 0;
			cellNumberY = 7;
			left_ = 0;
			top_ = 448;
			right_ = 256;
			bottom_ = 480;
			cellIndex = {
				x = 0;
				y = 7;
			};
			boundingRect = {
				left = 0;
				top = 448;
				right = 256;
				bottom = 480;
			};
		},
		{
			name = "задание4";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_FRAME;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = true;
						};
					}
				};
			};
			action = "struct ActionTask" {
				internalColor_ = 0;
				type = ASSIGNED;
				taskID = "Mission Tasks.Mission 22.Task 4";
				duration = 5;
				syncroBySound = false;
				showTips = true;
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				1;
				{
					triggerName = "задание4 выполнено";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 37;
					parentOffsetY_ = 16;
					childOffsetX_ = 37;
					childOffsetY_ = -16;
					parentOffset = {
						x = 37;
						y = 16;
					};
					childOffset = {
						x = 37;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12895487;
			cellNumberX = 0;
			cellNumberY = 9;
			left_ = 0;
			top_ = 576;
			right_ = 256;
			bottom_ = 608;
			cellIndex = {
				x = 0;
				y = 9;
			};
			boundingRect = {
				left = 0;
				top = 576;
				right = 256;
				bottom = 608;
			};
		},
		{
			name = "задание3выполнено";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = OR;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionKillObject" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_FRAME;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ENEMY;
						};
					}
				};
			};
			action = "struct ActionTask" {
				internalColor_ = 0;
				type = COMPLETED;
				taskID = "Mission Tasks.Mission 22.Task 3";
				duration = 5;
				syncroBySound = false;
				showTips = true;
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				1;
				{
					triggerName = "задание4";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 8;
					parentOffsetY_ = 16;
					childOffsetX_ = 8;
					childOffsetY_ = -16;
					parentOffset = {
						x = 8;
						y = 16;
					};
					childOffset = {
						x = 8;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12895487;
			cellNumberX = 0;
			cellNumberY = 8;
			left_ = 0;
			top_ = 512;
			right_ = 256;
			bottom_ = 544;
			cellIndex = {
				x = 0;
				y = 8;
			};
			boundingRect = {
				left = 0;
				top = 512;
				right = 256;
				bottom = 544;
			};
		},
		{
			name = "задание2 выполнено";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_CORRIDOR_OMEGA;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_FRAME;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = true;
						};
					}
				};
			};
			action = "struct ActionTask" {
				internalColor_ = 0;
				type = COMPLETED;
				taskID = "Mission Tasks.Mission 22.Task 2";
				duration = 5;
				syncroBySound = false;
				showTips = true;
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				1;
				{
					triggerName = "задание2снова";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -14;
					parentOffsetY_ = 16;
					childOffsetX_ = -14;
					childOffsetY_ = -16;
					parentOffset = {
						x = -14;
						y = 16;
					};
					childOffset = {
						x = -14;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12895487;
			cellNumberX = 1;
			cellNumberY = 7;
			left_ = 288;
			top_ = 448;
			right_ = 544;
			bottom_ = 480;
			cellIndex = {
				x = 1;
				y = 7;
			};
			boundingRect = {
				left = 288;
				top = 448;
				right = 544;
				bottom = 480;
			};
		},
		{
			name = "задание1 выполнено";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = OR;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_STATIC_BOMB;
							counter = 1;
							playerType = AI_PLAYER_TYPE_WORLD;
							constructedAndConstructing = true;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_STATIC_BOMB;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = true;
						};
					}
				};
			};
			action = "struct ActionTask" {
				internalColor_ = 0;
				type = COMPLETED;
				taskID = "Mission Tasks.Mission 22.Task 1";
				duration = 5;
				syncroBySound = false;
				showTips = true;
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12895487;
			cellNumberX = 1;
			cellNumberY = 6;
			left_ = 288;
			top_ = 384;
			right_ = 544;
			bottom_ = 416;
			cellIndex = {
				x = 1;
				y = 6;
			};
			boundingRect = {
				left = 288;
				top = 384;
				right = 544;
				bottom = 416;
			};
		},
		{
			name = "телепортация";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					2;
					{
						type = INVERTED;
						condition = "struct ConditionFrameState" {
							state_ = true;
							internalColor_ = 0;
							state = AI_FRAME_STATE_INSTALLED;
							playerType = AI_PLAYER_TYPE_ME;
							spiralChargingPercent = 100;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_CORRIDOR_OMEGA;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					}
				};
			};
			action = "struct ActionTeleportationOut" {
				internalColor_ = 0;
			};
			outcomingLinks = {
				4;
				{
					triggerName = "победа";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 3;
					parentOffsetY_ = -16;
					childOffsetX_ = 3;
					childOffsetY_ = 16;
					parentOffset = {
						x = 3;
						y = -16;
					};
					childOffset = {
						x = 3;
						y = 16;
					};
				},
				{
					triggerName = "поражение 2";
					color = STRATEGY_YELLOW;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -118;
					parentOffsetY_ = -16;
					childOffsetX_ = 119;
					childOffsetY_ = 16;
					parentOffset = {
						x = -118;
						y = -16;
					};
					childOffset = {
						x = 119;
						y = 16;
					};
				},
				{
					triggerName = "П1";
					color = STRATEGY_YELLOW;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = 15;
					childOffsetX_ = -119;
					childOffsetY_ = -16;
					parentOffset = {
						x = 128;
						y = 15;
					};
					childOffset = {
						x = -119;
						y = -16;
					};
				},
				{
					triggerName = "задание1провалено0";
					color = STRATEGY_YELLOW;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = -5;
					childOffsetX_ = -128;
					childOffsetY_ = -6;
					parentOffset = {
						x = 128;
						y = -5;
					};
					childOffset = {
						x = -128;
						y = -6;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 1;
			cellNumberY = 2;
			left_ = 288;
			top_ = 128;
			right_ = 544;
			bottom_ = 160;
			cellIndex = {
				x = 1;
				y = 2;
			};
			boundingRect = {
				left = 288;
				top = 128;
				right = 544;
				bottom = 160;
			};
		},
		{
			name = "поражение 2";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = OR;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_STATIC_BOMB;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ENEMY;
							constructedAndConstructing = false;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_FRAME;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ENEMY;
							constructedAndConstructing = true;
						};
					}
				};
			};
			action = "struct ActionDefeat" {
				internalColor_ = 0;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 0;
			cellNumberY = 0;
			left_ = 0;
			top_ = 0;
			right_ = 256;
			bottom_ = 32;
			cellIndex = {
				x = 0;
				y = 0;
			};
			boundingRect = {
				left = 0;
				top = 0;
				right = 256;
				bottom = 32;
			};
		},
		{
			name = "уничтожить бомбу";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionKillObject" {
				internalColor_ = 0;
				object = UNIT_ATTRIBUTE_STATIC_BOMB;
			};
			outcomingLinks = {
				4;
				{
					triggerName = "уничтожить все ядра";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -7;
					parentOffsetY_ = -16;
					childOffsetX_ = -7;
					childOffsetY_ = 16;
					parentOffset = {
						x = -7;
						y = -16;
					};
					childOffset = {
						x = -7;
						y = 16;
					};
				},
				{
					triggerName = "камера на омегу";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = 2;
					childOffsetX_ = -128;
					childOffsetY_ = 2;
					parentOffset = {
						x = 128;
						y = 2;
					};
					childOffset = {
						x = -128;
						y = 2;
					};
				},
				{
					triggerName = "уничтожить омегу";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 46;
					parentOffsetY_ = -16;
					childOffsetX_ = 49;
					childOffsetY_ = 16;
					parentOffset = {
						x = 46;
						y = -16;
					};
					childOffset = {
						x = 49;
						y = 16;
					};
				},
				{
					triggerName = "выкл. интерфейс";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 16;
					parentOffsetY_ = 16;
					childOffsetX_ = 14;
					childOffsetY_ = -16;
					parentOffset = {
						x = 16;
						y = 16;
					};
					childOffset = {
						x = 14;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 2;
			cellNumberY = -1;
			left_ = 576;
			top_ = -64;
			right_ = 832;
			bottom_ = -32;
			cellIndex = {
				x = 2;
				y = -1;
			};
			boundingRect = {
				left = 576;
				top = -64;
				right = 832;
				bottom = -32;
			};
		},
		{
			name = "уничтожить все ядра";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionKillObject" {
				internalColor_ = 0;
				object = UNIT_ATTRIBUTE_CORE;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "уничтожить фреймы";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = -4;
					childOffsetX_ = -128;
					childOffsetY_ = -3;
					parentOffset = {
						x = 128;
						y = -4;
					};
					childOffset = {
						x = -128;
						y = -3;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 2;
			cellNumberY = -2;
			left_ = 576;
			top_ = -128;
			right_ = 832;
			bottom_ = -96;
			cellIndex = {
				x = 2;
				y = -2;
			};
			boundingRect = {
				left = 576;
				top = -128;
				right = 832;
				bottom = -96;
			};
		},
		{
			name = "уничтожить фреймы";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionKillObject" {
				internalColor_ = 0;
				object = UNIT_ATTRIBUTE_FRAME;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 3;
			cellNumberY = -2;
			left_ = 864;
			top_ = -128;
			right_ = 1120;
			bottom_ = -96;
			cellIndex = {
				x = 3;
				y = -2;
			};
			boundingRect = {
				left = 864;
				top = -128;
				right = 1120;
				bottom = -96;
			};
		},
		{
			name = "камера на омегу";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionSetCameraAtObject" {
				internalColor_ = 0;
				object = UNIT_ATTRIBUTE_CORRIDOR_OMEGA;
				playerType = AI_PLAYER_TYPE_ME;
				transitionTime = 0;
				setFollow = false;
				turnTime = 10;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "поражение";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -20;
					parentOffsetY_ = -16;
					childOffsetX_ = -20;
					childOffsetY_ = 16;
					parentOffset = {
						x = -20;
						y = -16;
					};
					childOffset = {
						x = -20;
						y = 16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12632256;
			cellNumberX = 3;
			cellNumberY = -1;
			left_ = 864;
			top_ = -64;
			right_ = 1120;
			bottom_ = -32;
			cellIndex = {
				x = 3;
				y = -1;
			};
			boundingRect = {
				left = 864;
				top = -64;
				right = 1120;
				bottom = -32;
			};
		},
		{
			name = "уничтожить омегу";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionKillObject" {
				internalColor_ = 0;
				object = UNIT_ATTRIBUTE_CORRIDOR_OMEGA;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 2;
			cellNumberY = -3;
			left_ = 576;
			top_ = -192;
			right_ = 832;
			bottom_ = -160;
			cellIndex = {
				x = 2;
				y = -3;
			};
			boundingRect = {
				left = 576;
				top = -192;
				right = 832;
				bottom = -160;
			};
		},
		{
			name = "на омегу";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionSetCameraAtObject" {
				internalColor_ = 0;
				object = UNIT_ATTRIBUTE_CORRIDOR_OMEGA;
				playerType = AI_PLAYER_TYPE_ME;
				transitionTime = 0;
				setFollow = false;
				turnTime = 5;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "на фрейм";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 25;
					parentOffsetY_ = 16;
					childOffsetX_ = 21;
					childOffsetY_ = -16;
					parentOffset = {
						x = 25;
						y = 16;
					};
					childOffset = {
						x = 21;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12632256;
			cellNumberX = -1;
			cellNumberY = 4;
			left_ = -288;
			top_ = 256;
			right_ = -32;
			bottom_ = 288;
			cellIndex = {
				x = -1;
				y = 4;
			};
			boundingRect = {
				left = -288;
				top = 256;
				right = -32;
				bottom = 288;
			};
		},
		{
			name = "на фрейм";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = INVERTED;
						condition = "struct ConditionCutSceneWasSkipped" {
							state_ = false;
							internalColor_ = 0;
							timeMax = 15;
						};
					}
				};
			};
			action = "struct ActionSetCameraAtObject" {
				internalColor_ = 0;
				object = UNIT_ATTRIBUTE_FRAME;
				playerType = AI_PLAYER_TYPE_ME;
				transitionTime = 5;
				setFollow = false;
				turnTime = 0;
			};
			outcomingLinks = {
				2;
				{
					triggerName = "вкл. интерфейс";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 68;
					parentOffsetY_ = 16;
					childOffsetX_ = 62;
					childOffsetY_ = -16;
					parentOffset = {
						x = 68;
						y = 16;
					};
					childOffset = {
						x = 62;
						y = -16;
					};
				},
				{
					triggerName = "2";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 35;
					parentOffsetY_ = 16;
					childOffsetX_ = 12;
					childOffsetY_ = -16;
					parentOffset = {
						x = 35;
						y = 16;
					};
					childOffset = {
						x = 12;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12632256;
			cellNumberX = -1;
			cellNumberY = 5;
			left_ = -288;
			top_ = 320;
			right_ = -32;
			bottom_ = 352;
			cellIndex = {
				x = -1;
				y = 5;
			};
			boundingRect = {
				left = -288;
				top = 320;
				right = -32;
				bottom = 352;
			};
		},
		{
			name = "UserCamera";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionSetCamera" {
				internalColor_ = 0;
				cameraSplineName = "";
				stepTime = 3.94663e-023;
				cycles = 440326384;
				smoothTransition = false;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 0;
			cellNumberY = 2;
			left_ = 0;
			top_ = 128;
			right_ = 256;
			bottom_ = 160;
			cellIndex = {
				x = 0;
				y = 2;
			};
			boundingRect = {
				left = 0;
				top = 128;
				right = 256;
				bottom = 160;
			};
		},
		{
			name = "время=0";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = false;
							internalColor_ = 0;
							type = OR;
							conditions = {
								2;
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = false;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_STATIC_BOMB;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ME;
										constructedAndConstructing = true;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = false;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_STATIC_BOMB;
										counter = 1;
										playerType = AI_PLAYER_TYPE_WORLD;
										constructedAndConstructing = true;
									};
								}
							};
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionTimeMatched" {
							state_ = false;
							internalColor_ = 0;
							time = 1;
						};
					}
				};
			};
			action = "struct ActionDelay" {
				internalColor_ = 0;
				delay = 1;
				showTimer = true;
				scaleByDifficulty = false;
				timer = {
					time = 0;
				};
			};
			outcomingLinks = {
				1;
				{
					triggerName = "уничтожить бомбу0";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = -1;
					childOffsetX_ = -128;
					childOffsetY_ = 0;
					parentOffset = {
						x = 128;
						y = -1;
					};
					childOffset = {
						x = -128;
						y = 0;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 2;
			cellNumberY = 6;
			left_ = 576;
			top_ = 384;
			right_ = 832;
			bottom_ = 416;
			cellIndex = {
				x = 2;
				y = 6;
			};
			boundingRect = {
				left = 576;
				top = 384;
				right = 832;
				bottom = 416;
			};
		},
		{
			name = "уничтожить бомбу0";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = OR;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_STATIC_BOMB;
							counter = 1;
							playerType = AI_PLAYER_TYPE_WORLD;
							constructedAndConstructing = true;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_STATIC_BOMB;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = true;
						};
					}
				};
			};
			action = "struct ActionKillObject" {
				internalColor_ = 0;
				object = UNIT_ATTRIBUTE_STATIC_BOMB;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 3;
			cellNumberY = 6;
			left_ = 864;
			top_ = 384;
			right_ = 1120;
			bottom_ = 416;
			cellIndex = {
				x = 3;
				y = 6;
			};
			boundingRect = {
				left = 864;
				top = 384;
				right = 1120;
				bottom = 416;
			};
		},
		{
			name = "задание4 выполнено";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionFrameState" {
							state_ = true;
							internalColor_ = 0;
							state = AI_FRAME_STATE_TELEPORTATION_STARTED;
							playerType = AI_PLAYER_TYPE_ME;
							spiralChargingPercent = 100;
						};
					}
				};
			};
			action = "struct ActionTask" {
				internalColor_ = 0;
				type = COMPLETED;
				taskID = "Mission Tasks.Mission 22.Task 4";
				duration = 10;
				syncroBySound = false;
				showTips = true;
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				1;
				{
					triggerName = "победа";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 119;
					parentOffsetY_ = -16;
					childOffsetX_ = -26;
					childOffsetY_ = 16;
					parentOffset = {
						x = 119;
						y = -16;
					};
					childOffset = {
						x = -26;
						y = 16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12698111;
			cellNumberX = 0;
			cellNumberY = 10;
			left_ = 0;
			top_ = 640;
			right_ = 256;
			bottom_ = 672;
			cellIndex = {
				x = 0;
				y = 10;
			};
			boundingRect = {
				left = 0;
				top = 640;
				right = 256;
				bottom = 672;
			};
		},
		{
			name = "вкл. интерфейс";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionSetInterface" {
				internalColor_ = 0;
				enableInterface = true;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = -1;
			cellNumberY = 6;
			left_ = -288;
			top_ = 384;
			right_ = -32;
			bottom_ = 416;
			cellIndex = {
				x = -1;
				y = 6;
			};
			boundingRect = {
				left = -288;
				top = 384;
				right = -32;
				bottom = 416;
			};
		},
		{
			name = "выкл. интерфейс";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionSetInterface" {
				internalColor_ = 0;
				enableInterface = false;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 2;
			cellNumberY = 0;
			left_ = 576;
			top_ = 0;
			right_ = 832;
			bottom_ = 32;
			cellIndex = {
				x = 2;
				y = 0;
			};
			boundingRect = {
				left = 576;
				top = 0;
				right = 832;
				bottom = 32;
			};
		},
		{
			name = "выкл. интерфейс0";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = OR;
				conditions = {
					4;
					{
						type = NORMAL;
						condition = "struct ConditionKillObject" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_FRAME;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionCaptureBuilding" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_FRAME;
							playerType = AI_PLAYER_TYPE_ENEMY;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionFrameState" {
							state_ = false;
							internalColor_ = 0;
							state = AI_FRAME_STATE_TELEPORTATION_STARTED;
							playerType = AI_PLAYER_TYPE_ME;
							spiralChargingPercent = 100;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionCaptureBuilding" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_FRAME;
							playerType = AI_PLAYER_TYPE_ME;
						};
					}
				};
			};
			action = "struct ActionSetInterface" {
				internalColor_ = 0;
				enableInterface = false;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = -2;
			cellNumberY = 2;
			left_ = -576;
			top_ = 128;
			right_ = -320;
			bottom_ = 160;
			cellIndex = {
				x = -2;
				y = 2;
			};
			boundingRect = {
				left = -576;
				top = 128;
				right = -320;
				bottom = 160;
			};
		},
		{
			name = "на врага";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = OR;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionKillObject" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_FRAME;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ENEMY;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionCaptureBuilding" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_FRAME;
							playerType = AI_PLAYER_TYPE_ME;
						};
					}
				};
			};
			action = "struct ActionSetCameraAtObject" {
				internalColor_ = 0;
				object = UNIT_ATTRIBUTE_FRAME;
				playerType = AI_PLAYER_TYPE_ENEMY;
				transitionTime = 0;
				setFollow = false;
				turnTime = 5;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12632256;
			cellNumberX = -2;
			cellNumberY = 3;
			left_ = -576;
			top_ = 192;
			right_ = -320;
			bottom_ = 224;
			cellIndex = {
				x = -2;
				y = 3;
			};
			boundingRect = {
				left = -576;
				top = 192;
				right = -320;
				bottom = 224;
			};
		},
		{
			name = "на фрейм0";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = OR;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionKillObject" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_FRAME;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionCaptureBuilding" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_FRAME;
							playerType = AI_PLAYER_TYPE_ENEMY;
						};
					}
				};
			};
			action = "struct ActionSetCameraAtObject" {
				internalColor_ = 0;
				object = UNIT_ATTRIBUTE_FRAME;
				playerType = AI_PLAYER_TYPE_ME;
				transitionTime = 0;
				setFollow = false;
				turnTime = 5;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12632256;
			cellNumberX = -2;
			cellNumberY = 4;
			left_ = -576;
			top_ = 256;
			right_ = -320;
			bottom_ = 288;
			cellIndex = {
				x = -2;
				y = 4;
			};
			boundingRect = {
				left = -576;
				top = 256;
				right = -320;
				bottom = 288;
			};
		},
		{
			name = "задание3провалено";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = OR;
				conditions = {
					4;
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_FRAME;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = true;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionKillObject" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_FRAME;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionCaptureBuilding" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_FRAME;
							playerType = AI_PLAYER_TYPE_ME;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionCaptureBuilding" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_FRAME;
							playerType = AI_PLAYER_TYPE_ENEMY;
						};
					}
				};
			};
			action = "struct ActionTask" {
				internalColor_ = 0;
				type = FAILED;
				taskID = "Mission Tasks.Mission 22.Task 3";
				duration = 5;
				syncroBySound = false;
				showTips = true;
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				1;
				{
					triggerName = "задание4провалено";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 54;
					parentOffsetY_ = -16;
					childOffsetX_ = 56;
					childOffsetY_ = 16;
					parentOffset = {
						x = 54;
						y = -16;
					};
					childOffset = {
						x = 56;
						y = 16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12698111;
			cellNumberX = 1;
			cellNumberY = -1;
			left_ = 288;
			top_ = -64;
			right_ = 544;
			bottom_ = -32;
			cellIndex = {
				x = 1;
				y = -1;
			};
			boundingRect = {
				left = 288;
				top = -64;
				right = 544;
				bottom = -32;
			};
		},
		{
			name = "задание4провалено";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionTask" {
				internalColor_ = 0;
				type = FAILED;
				taskID = "Mission Tasks.Mission 22.Task 4";
				duration = 5;
				syncroBySound = false;
				showTips = true;
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				2;
				{
					triggerName = "задание2провалено";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 36;
					parentOffsetY_ = -16;
					childOffsetX_ = 40;
					childOffsetY_ = 16;
					parentOffset = {
						x = 36;
						y = -16;
					};
					childOffset = {
						x = 40;
						y = 16;
					};
				},
				{
					triggerName = "пауза1";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -125;
					parentOffsetY_ = -16;
					childOffsetX_ = 128;
					childOffsetY_ = 15;
					parentOffset = {
						x = -125;
						y = -16;
					};
					childOffset = {
						x = 128;
						y = 15;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12698111;
			cellNumberX = 1;
			cellNumberY = -2;
			left_ = 288;
			top_ = -128;
			right_ = 544;
			bottom_ = -96;
			cellIndex = {
				x = 1;
				y = -2;
			};
			boundingRect = {
				left = 288;
				top = -128;
				right = 544;
				bottom = -96;
			};
		},
		{
			name = "задание2провалено";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_CORRIDOR_OMEGA;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = true;
						};
					}
				};
			};
			action = "struct ActionTask" {
				internalColor_ = 0;
				type = FAILED;
				taskID = "Mission Tasks.Mission 22.Task 2";
				duration = 5;
				syncroBySound = false;
				showTips = true;
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12698111;
			cellNumberX = 1;
			cellNumberY = -3;
			left_ = 288;
			top_ = -192;
			right_ = 544;
			bottom_ = -160;
			cellIndex = {
				x = 1;
				y = -3;
			};
			boundingRect = {
				left = 288;
				top = -192;
				right = 544;
				bottom = -160;
			};
		},
		{
			name = "пауза1";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionDelay" {
				internalColor_ = 0;
				delay = 6;
				showTimer = false;
				scaleByDifficulty = false;
				timer = {
					time = 0;
				};
			};
			outcomingLinks = {
				2;
				{
					triggerName = "задание1провалено";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 124;
					parentOffsetY_ = -16;
					childOffsetX_ = -128;
					childOffsetY_ = 15;
					parentOffset = {
						x = 124;
						y = -16;
					};
					childOffset = {
						x = -128;
						y = 15;
					};
				},
				{
					triggerName = "пауза2";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 114;
					parentOffsetY_ = -16;
					childOffsetX_ = 114;
					childOffsetY_ = 16;
					parentOffset = {
						x = 114;
						y = -16;
					};
					childOffset = {
						x = 114;
						y = 16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 0;
			cellNumberY = -3;
			left_ = 0;
			top_ = -192;
			right_ = 256;
			bottom_ = -160;
			cellIndex = {
				x = 0;
				y = -3;
			};
			boundingRect = {
				left = 0;
				top = -192;
				right = 256;
				bottom = -160;
			};
		},
		{
			name = "задание1провалено";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_STATIC_BOMB;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ENEMY;
							constructedAndConstructing = false;
						};
					}
				};
			};
			action = "struct ActionTask" {
				internalColor_ = 0;
				type = FAILED;
				taskID = "Mission Tasks.Mission 22.Task 1";
				duration = 5;
				syncroBySound = false;
				showTips = true;
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12698111;
			cellNumberX = 1;
			cellNumberY = -4;
			left_ = 288;
			top_ = -256;
			right_ = 544;
			bottom_ = -224;
			cellIndex = {
				x = 1;
				y = -4;
			};
			boundingRect = {
				left = 288;
				top = -256;
				right = 544;
				bottom = -224;
			};
		},
		{
			name = "пауза2";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionDelay" {
				internalColor_ = 0;
				delay = 6;
				showTimer = false;
				scaleByDifficulty = false;
				timer = {
					time = 0;
				};
			};
			outcomingLinks = {
				1;
				{
					triggerName = "поражение 0";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 122;
					parentOffsetY_ = -16;
					childOffsetX_ = -128;
					childOffsetY_ = 14;
					parentOffset = {
						x = 122;
						y = -16;
					};
					childOffset = {
						x = -128;
						y = 14;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 0;
			cellNumberY = -4;
			left_ = 0;
			top_ = -256;
			right_ = 256;
			bottom_ = -224;
			cellIndex = {
				x = 0;
				y = -4;
			};
			boundingRect = {
				left = 0;
				top = -256;
				right = 256;
				bottom = -224;
			};
		},
		{
			name = "задание1провалено0";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = OR;
				conditions = {
					3;
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = AND;
							conditions = {
								2;
								{
									type = NORMAL;
									condition = "struct ConditionTimeMatched" {
										state_ = true;
										internalColor_ = 0;
										time = 1;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = true;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_STATIC_BOMB;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ENEMY;
										constructedAndConstructing = true;
									};
								}
							};
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = false;
							internalColor_ = 0;
							type = AND;
							conditions = {
								3;
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = true;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_FRAME;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ENEMY;
										constructedAndConstructing = true;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = true;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_STATIC_BOMB;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ENEMY;
										constructedAndConstructing = false;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionFrameState" {
										state_ = false;
										internalColor_ = 0;
										state = AI_FRAME_STATE_TELEPORTATION_STARTED;
										playerType = AI_PLAYER_TYPE_ME;
										spiralChargingPercent = 100;
									};
								}
							};
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = false;
							internalColor_ = 0;
							type = AND;
							conditions = {
								2;
								{
									type = NORMAL;
									condition = "struct ConditionFrameState" {
										state_ = false;
										internalColor_ = 0;
										state = AI_FRAME_STATE_TELEPORTATION_STARTED;
										playerType = AI_PLAYER_TYPE_ME;
										spiralChargingPercent = 100;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = false;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_FRAME;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ENEMY;
										constructedAndConstructing = true;
									};
								}
							};
						};
					}
				};
			};
			action = "struct ActionTask" {
				internalColor_ = 0;
				type = FAILED;
				taskID = "Mission Tasks.Mission 22.Task 1";
				duration = 5;
				syncroBySound = false;
				showTips = true;
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12698111;
			cellNumberX = 2;
			cellNumberY = 2;
			left_ = 576;
			top_ = 128;
			right_ = 832;
			bottom_ = 160;
			cellIndex = {
				x = 2;
				y = 2;
			};
			boundingRect = {
				left = 576;
				top = 128;
				right = 832;
				bottom = 160;
			};
		},
		{
			name = "задание2провалено0";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_CORRIDOR_OMEGA;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					}
				};
			};
			action = "struct ActionTask" {
				internalColor_ = 0;
				type = FAILED;
				taskID = "Mission Tasks.Mission 22.Task 2";
				duration = 5;
				syncroBySound = false;
				showTips = true;
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12698111;
			cellNumberX = 3;
			cellNumberY = 2;
			left_ = 864;
			top_ = 128;
			right_ = 1120;
			bottom_ = 160;
			cellIndex = {
				x = 3;
				y = 2;
			};
			boundingRect = {
				left = 864;
				top = 128;
				right = 1120;
				bottom = 160;
			};
		},
		{
			name = "задание3провалено0";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_FRAME;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ENEMY;
							constructedAndConstructing = true;
						};
					}
				};
			};
			action = "struct ActionTask" {
				internalColor_ = 0;
				type = FAILED;
				taskID = "Mission Tasks.Mission 22.Task 3";
				duration = 5;
				syncroBySound = false;
				showTips = true;
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12698111;
			cellNumberX = 4;
			cellNumberY = 2;
			left_ = 1152;
			top_ = 128;
			right_ = 1408;
			bottom_ = 160;
			cellIndex = {
				x = 4;
				y = 2;
			};
			boundingRect = {
				left = 1152;
				top = 128;
				right = 1408;
				bottom = 160;
			};
		},
		{
			name = "задание4провалено0";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = INVERTED;
						condition = "struct ConditionFrameState" {
							state_ = false;
							internalColor_ = 0;
							state = AI_FRAME_STATE_TELEPORTATION_STARTED;
							playerType = AI_PLAYER_TYPE_ME;
							spiralChargingPercent = 100;
						};
					}
				};
			};
			action = "struct ActionTask" {
				internalColor_ = 0;
				type = FAILED;
				taskID = "Mission Tasks.Mission 22.Task 4";
				duration = 5;
				syncroBySound = false;
				showTips = true;
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12698111;
			cellNumberX = 5;
			cellNumberY = 2;
			left_ = 1440;
			top_ = 128;
			right_ = 1696;
			bottom_ = 160;
			cellIndex = {
				x = 5;
				y = 2;
			};
			boundingRect = {
				left = 1440;
				top = 128;
				right = 1696;
				bottom = 160;
			};
		},
		{
			name = "П1";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = OR;
				conditions = {
					3;
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = false;
							internalColor_ = 0;
							type = AND;
							conditions = {
								2;
								{
									type = NORMAL;
									condition = "struct ConditionTimeMatched" {
										state_ = false;
										internalColor_ = 0;
										time = 1;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = false;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_STATIC_BOMB;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ENEMY;
										constructedAndConstructing = true;
									};
								}
							};
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = false;
							internalColor_ = 0;
							type = AND;
							conditions = {
								3;
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = false;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_FRAME;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ENEMY;
										constructedAndConstructing = true;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = false;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_STATIC_BOMB;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ENEMY;
										constructedAndConstructing = false;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionFrameState" {
										state_ = false;
										internalColor_ = 0;
										state = AI_FRAME_STATE_TELEPORTATION_STARTED;
										playerType = AI_PLAYER_TYPE_ME;
										spiralChargingPercent = 100;
									};
								}
							};
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = false;
							internalColor_ = 0;
							type = AND;
							conditions = {
								2;
								{
									type = NORMAL;
									condition = "struct ConditionFrameState" {
										state_ = false;
										internalColor_ = 0;
										state = AI_FRAME_STATE_TELEPORTATION_STARTED;
										playerType = AI_PLAYER_TYPE_ME;
										spiralChargingPercent = 100;
									};
								},
								{
									type = NORMAL;
									condition = "struct ConditionObjectExists" {
										state_ = false;
										internalColor_ = 0;
										object = UNIT_ATTRIBUTE_FRAME;
										counter = 1;
										playerType = AI_PLAYER_TYPE_ENEMY;
										constructedAndConstructing = true;
									};
								}
							};
						};
					}
				};
			};
			action = "struct ActionDelay" {
				internalColor_ = 0;
				delay = 6;
				showTimer = false;
				scaleByDifficulty = false;
				timer = {
					time = 0;
				};
			};
			outcomingLinks = {
				2;
				{
					triggerName = "П2";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = 3;
					childOffsetX_ = -128;
					childOffsetY_ = 2;
					parentOffset = {
						x = 128;
						y = 3;
					};
					childOffset = {
						x = -128;
						y = 2;
					};
				},
				{
					triggerName = "задание2провалено0";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 119;
					parentOffsetY_ = -16;
					childOffsetX_ = -128;
					childOffsetY_ = 13;
					parentOffset = {
						x = 119;
						y = -16;
					};
					childOffset = {
						x = -128;
						y = 13;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 2;
			cellNumberY = 3;
			left_ = 576;
			top_ = 192;
			right_ = 832;
			bottom_ = 224;
			cellIndex = {
				x = 2;
				y = 3;
			};
			boundingRect = {
				left = 576;
				top = 192;
				right = 832;
				bottom = 224;
			};
		},
		{
			name = "П2";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionDelay" {
				internalColor_ = 0;
				delay = 6;
				showTimer = false;
				scaleByDifficulty = false;
				timer = {
					time = 0;
				};
			};
			outcomingLinks = {
				2;
				{
					triggerName = "П3";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = 2;
					childOffsetX_ = -128;
					childOffsetY_ = 3;
					parentOffset = {
						x = 128;
						y = 2;
					};
					childOffset = {
						x = -128;
						y = 3;
					};
				},
				{
					triggerName = "задание3провалено0";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 122;
					parentOffsetY_ = -16;
					childOffsetX_ = -127;
					childOffsetY_ = 16;
					parentOffset = {
						x = 122;
						y = -16;
					};
					childOffset = {
						x = -127;
						y = 16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 3;
			cellNumberY = 3;
			left_ = 864;
			top_ = 192;
			right_ = 1120;
			bottom_ = 224;
			cellIndex = {
				x = 3;
				y = 3;
			};
			boundingRect = {
				left = 864;
				top = 192;
				right = 1120;
				bottom = 224;
			};
		},
		{
			name = "П3";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionDelay" {
				internalColor_ = 0;
				delay = 6;
				showTimer = false;
				scaleByDifficulty = false;
				timer = {
					time = 0;
				};
			};
			outcomingLinks = {
				2;
				{
					triggerName = "задание4провалено0";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = -7;
					childOffsetX_ = -128;
					childOffsetY_ = 12;
					parentOffset = {
						x = 128;
						y = -7;
					};
					childOffset = {
						x = -128;
						y = 12;
					};
				},
				{
					triggerName = "П4";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = -2;
					childOffsetX_ = -128;
					childOffsetY_ = -2;
					parentOffset = {
						x = 128;
						y = -2;
					};
					childOffset = {
						x = -128;
						y = -2;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 4;
			cellNumberY = 3;
			left_ = 1152;
			top_ = 192;
			right_ = 1408;
			bottom_ = 224;
			cellIndex = {
				x = 4;
				y = 3;
			};
			boundingRect = {
				left = 1152;
				top = 192;
				right = 1408;
				bottom = 224;
			};
		},
		{
			name = "П4";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionDelay" {
				internalColor_ = 0;
				delay = 6;
				showTimer = false;
				scaleByDifficulty = false;
				timer = {
					time = 0;
				};
			};
			outcomingLinks = {
				2;
				{
					triggerName = "поражение";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 79;
					parentOffsetY_ = -16;
					childOffsetX_ = 128;
					childOffsetY_ = 10;
					parentOffset = {
						x = 79;
						y = -16;
					};
					childOffset = {
						x = 128;
						y = 10;
					};
				},
				{
					triggerName = "поражение 2";
					color = STRATEGY_YELLOW;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -128;
					parentOffsetY_ = -12;
					childOffsetX_ = 128;
					childOffsetY_ = -3;
					parentOffset = {
						x = -128;
						y = -12;
					};
					childOffset = {
						x = 128;
						y = -3;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 5;
			cellNumberY = 3;
			left_ = 1440;
			top_ = 192;
			right_ = 1696;
			bottom_ = 224;
			cellIndex = {
				x = 5;
				y = 3;
			};
			boundingRect = {
				left = 1440;
				top = 192;
				right = 1696;
				bottom = 224;
			};
		},
		{
			name = "на фрейм1";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionFrameState" {
							state_ = false;
							internalColor_ = 0;
							state = AI_FRAME_STATE_TELEPORTATION_STARTED;
							playerType = AI_PLAYER_TYPE_ME;
							spiralChargingPercent = 100;
						};
					}
				};
			};
			action = "struct ActionSetCameraAtObject" {
				internalColor_ = 0;
				object = UNIT_ATTRIBUTE_FRAME;
				playerType = AI_PLAYER_TYPE_ME;
				transitionTime = 0;
				setFollow = true;
				turnTime = 0;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12632256;
			cellNumberX = 1;
			cellNumberY = 1;
			left_ = 288;
			top_ = 64;
			right_ = 544;
			bottom_ = 96;
			cellIndex = {
				x = 1;
				y = 1;
			};
			boundingRect = {
				left = 288;
				top = 64;
				right = 544;
				bottom = 96;
			};
		},
		{
			name = "задание2снова";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					2;
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_CORRIDOR_OMEGA;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_FRAME;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = true;
						};
					}
				};
			};
			action = "struct ActionTask" {
				internalColor_ = 0;
				type = ASSIGNED;
				taskID = "Mission Tasks.Mission 22.Task 2";
				duration = 5;
				syncroBySound = false;
				showTips = true;
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				1;
				{
					triggerName = "задание2 выполнено";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 45;
					parentOffsetY_ = -16;
					childOffsetX_ = 45;
					childOffsetY_ = 16;
					parentOffset = {
						x = 45;
						y = -16;
					};
					childOffset = {
						x = 45;
						y = 16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 1;
			cellNumberY = 8;
			left_ = 288;
			top_ = 512;
			right_ = 544;
			bottom_ = 544;
			cellIndex = {
				x = 1;
				y = 8;
			};
			boundingRect = {
				left = 288;
				top = 512;
				right = 544;
				bottom = 544;
			};
		},
		{
			name = "11";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct Action" {
				internalColor_ = 0;
			};
			outcomingLinks = {
				2;
				{
					triggerName = "на фрейм00";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 38;
					parentOffsetY_ = 16;
					childOffsetX_ = 36;
					childOffsetY_ = -16;
					parentOffset = {
						x = 38;
						y = 16;
					};
					childOffset = {
						x = 36;
						y = -16;
					};
				},
				{
					triggerName = "2";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 110;
					parentOffsetY_ = 16;
					childOffsetX_ = -123;
					childOffsetY_ = -16;
					parentOffset = {
						x = 110;
						y = 16;
					};
					childOffset = {
						x = -123;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = -2;
			cellNumberY = 6;
			left_ = -576;
			top_ = 384;
			right_ = -320;
			bottom_ = 416;
			cellIndex = {
				x = -2;
				y = 6;
			};
			boundingRect = {
				left = -576;
				top = 384;
				right = -320;
				bottom = 416;
			};
		},
		{
			name = "на фрейм00";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionSkipCutScene" {
							state_ = false;
							internalColor_ = 0;
						};
					}
				};
			};
			action = "struct ActionSetCamera" {
				internalColor_ = 0;
				cameraSplineName = "на фрейм";
				stepTime = 1.;
				cycles = 1;
				smoothTransition = false;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "вкл. интерфейс";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 117;
					parentOffsetY_ = -16;
					childOffsetX_ = -92;
					childOffsetY_ = 16;
					parentOffset = {
						x = 117;
						y = -16;
					};
					childOffset = {
						x = -92;
						y = 16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12632256;
			cellNumberX = -2;
			cellNumberY = 8;
			left_ = -576;
			top_ = 512;
			right_ = -320;
			bottom_ = 544;
			cellIndex = {
				x = -2;
				y = 8;
			};
			boundingRect = {
				left = -576;
				top = 512;
				right = -320;
				bottom = 544;
			};
		},
		{
			name = "2";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionDelay" {
				internalColor_ = 0;
				delay = 1;
				showTimer = false;
				scaleByDifficulty = false;
				timer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = -1;
			cellNumberY = 8;
			left_ = -288;
			top_ = 512;
			right_ = -32;
			bottom_ = 544;
			cellIndex = {
				x = -1;
				y = 8;
			};
			boundingRect = {
				left = -288;
				top = 512;
				right = -32;
				bottom = 544;
			};
		},
		{
			name = "п1111111";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionTimeMatched" {
							state_ = true;
							internalColor_ = 0;
							time = 1;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_STATIC_BOMB;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ENEMY;
							constructedAndConstructing = true;
						};
					}
				};
			};
			action = "struct ActionDelay" {
				internalColor_ = 0;
				delay = 1;
				showTimer = false;
				scaleByDifficulty = false;
				timer = {
					time = 0;
				};
			};
			outcomingLinks = {
				1;
				{
					triggerName = "уничтожить бомбу";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -24;
					parentOffsetY_ = -16;
					childOffsetX_ = -19;
					childOffsetY_ = 16;
					parentOffset = {
						x = -24;
						y = -16;
					};
					childOffset = {
						x = -19;
						y = 16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 2;
			cellNumberY = 1;
			left_ = 576;
			top_ = 64;
			right_ = 832;
			bottom_ = 96;
			cellIndex = {
				x = 2;
				y = 1;
			};
			boundingRect = {
				left = 576;
				top = 64;
				right = 832;
				bottom = 96;
			};
		}
	};
	left_ = 295;
	top_ = -255;
	right_ = 1292;
	bottom_ = 361;
	boundingRect = {
		left = 295;
		top = -255;
		right = 1292;
		bottom = 361;
	};
	viewRect = {
		left = 295;
		top = -255;
		right = 1292;
		bottom = 361;
	};
};
