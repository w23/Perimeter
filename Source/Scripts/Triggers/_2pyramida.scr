TriggerChain = {
	name = "";
	triggers = {
		48;
		{
			name = "START";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = AND;
							conditions = {
								0;
							};
						};
					}
				};
			};
			action = 0;
			outcomingLinks = {
				3;
				{
					triggerName = "старт";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 73;
					parentOffsetY_ = -16;
					childOffsetX_ = -117;
					childOffsetY_ = 16;
					parentOffset = {
						x = 73;
						y = -16;
					};
					childOffset = {
						x = -117;
						y = 16;
					};
				},
				{
					triggerName = "задание1 провалено";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = 3;
					childOffsetX_ = -128;
					childOffsetY_ = -16;
					parentOffset = {
						x = 128;
						y = 3;
					};
					childOffset = {
						x = -128;
						y = -16;
					};
				},
				{
					triggerName = "11";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -128;
					parentOffsetY_ = -2;
					childOffsetX_ = 128;
					childOffsetY_ = 0;
					parentOffset = {
						x = -128;
						y = -2;
					};
					childOffset = {
						x = 128;
						y = 0;
					};
				}
			};
			state_ = CHECKING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 0;
			cellNumberY = 0;
			left_ = 0;
			top_ = 0;
			right_ = 256;
			bottom_ = 32;
			cellIndex = {
				x = 0;
				y = 0;
			};
			boundingRect = {
				left = 0;
				top = 0;
				right = 256;
				bottom = 32;
			};
		},
		{
			name = "Victory";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_COLLECTOR;
							counter = 2;
							playerType = AI_PLAYER_TYPE_ANY;
							constructedAndConstructing = true;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_FRAME;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					}
				};
			};
			action = "struct ActionVictory" {
				internalColor_ = 0;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 0;
			cellNumberY = -1;
			left_ = 0;
			top_ = -64;
			right_ = 256;
			bottom_ = -32;
			cellIndex = {
				x = 0;
				y = -1;
			};
			boundingRect = {
				left = 0;
				top = -64;
				right = 256;
				bottom = -32;
			};
		},
		{
			name = "Defeat";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = OR;
				conditions = {
					2;
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_COLLECTOR;
							counter = 2;
							playerType = AI_PLAYER_TYPE_ANY;
							constructedAndConstructing = true;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_FRAME;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					}
				};
			};
			action = "struct ActionDefeat" {
				internalColor_ = 0;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 0;
			cellNumberY = -2;
			left_ = 0;
			top_ = -128;
			right_ = 256;
			bottom_ = -96;
			cellIndex = {
				x = 0;
				y = -2;
			};
			boundingRect = {
				left = 0;
				top = -128;
				right = 256;
				bottom = -96;
			};
		},
		{
			name = "Camera";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = AND;
							conditions = {
								0;
							};
						};
					}
				};
			};
			action = "struct ActionSetCamera" {
				internalColor_ = 0;
				cameraSplineName = "Camera0";
				stepTime = 7.8125e-003;
				cycles = 1058045952;
				smoothTransition = false;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "катсцена1";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 28;
					parentOffsetY_ = 16;
					childOffsetX_ = 22;
					childOffsetY_ = -16;
					parentOffset = {
						x = 28;
						y = 16;
					};
					childOffset = {
						x = 22;
						y = -16;
					};
				}
			};
			state_ = CHECKING;
			executionCounter_ = 0;
			internalColor_ = 12632256;
			cellNumberX = -1;
			cellNumberY = 0;
			left_ = -288;
			top_ = 0;
			right_ = -32;
			bottom_ = 32;
			cellIndex = {
				x = -1;
				y = 0;
			};
			boundingRect = {
				left = -288;
				top = 0;
				right = -32;
				bottom = 32;
			};
		},
		{
			name = "ЗАДАНИЕ";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = AND;
							conditions = {
								0;
							};
						};
					}
				};
			};
			action = "struct ActionTask" {
				internalColor_ = 0;
				type = ASSIGNED;
				taskID = "Mission Tasks.Mission 02.Task 1";
				duration = 5;
				syncroBySound = false;
				showTips = true;
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				7;
				{
					triggerName = "деактивировать ус1";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -18;
					parentOffsetY_ = 16;
					childOffsetX_ = 18;
					childOffsetY_ = -16;
					parentOffset = {
						x = -18;
						y = 16;
					};
					childOffset = {
						x = 18;
						y = -16;
					};
				},
				{
					triggerName = "деактивировать ус2";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 0;
					parentOffsetY_ = 16;
					childOffsetX_ = -128;
					childOffsetY_ = -13;
					parentOffset = {
						x = 0;
						y = 16;
					};
					childOffset = {
						x = -128;
						y = -13;
					};
				},
				{
					triggerName = "деактивировать ус3";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 18;
					parentOffsetY_ = 16;
					childOffsetX_ = -18;
					childOffsetY_ = -16;
					parentOffset = {
						x = 18;
						y = 16;
					};
					childOffset = {
						x = -18;
						y = -16;
					};
				},
				{
					triggerName = "деактивировать ус4";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = 6;
					childOffsetX_ = -128;
					childOffsetY_ = 8;
					parentOffset = {
						x = 128;
						y = 6;
					};
					childOffset = {
						x = -128;
						y = 8;
					};
				},
				{
					triggerName = "активировать метку для ретранслятора";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -53;
					parentOffsetY_ = 16;
					childOffsetX_ = 83;
					childOffsetY_ = -16;
					parentOffset = {
						x = -53;
						y = 16;
					};
					childOffset = {
						x = 83;
						y = -16;
					};
				},
				{
					triggerName = "трансмитеры";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -23;
					parentOffsetY_ = 16;
					childOffsetX_ = -25;
					childOffsetY_ = -16;
					parentOffset = {
						x = -23;
						y = 16;
					};
					childOffset = {
						x = -25;
						y = -16;
					};
				},
				{
					triggerName = "активировать споты";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -37;
					parentOffsetY_ = 16;
					childOffsetX_ = 92;
					childOffsetY_ = -16;
					parentOffset = {
						x = -37;
						y = 16;
					};
					childOffset = {
						x = 92;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 14277119;
			cellNumberX = 1;
			cellNumberY = -1;
			left_ = 288;
			top_ = -64;
			right_ = 544;
			bottom_ = -32;
			cellIndex = {
				x = 1;
				y = -1;
			};
			boundingRect = {
				left = 288;
				top = -64;
				right = 544;
				bottom = -32;
			};
		},
		{
			name = "деактивировать ус4";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = OR;
				conditions = {
					2;
					{
						type = INVERTED;
						condition = "struct ConditionObjectNearObjectByLabel" {
							state_ = false;
							internalColor_ = 0;
							label = "усилитель 4";
							object = UNIT_ATTRIBUTE_COLLECTOR;
							objectConstructed = true;
							playerType = AI_PLAYER_TYPE_WORLD;
							distance = 100.;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectNearObjectByLabel" {
							state_ = false;
							internalColor_ = 0;
							label = "усилитель 4";
							object = UNIT_ATTRIBUTE_COLLECTOR;
							objectConstructed = true;
							playerType = AI_PLAYER_TYPE_ME;
							distance = 100.;
						};
					}
				};
			};
			action = "struct ActionDeactivateObjectByLabel" {
				internalColor_ = 0;
				label = "усилитель 4";
			};
			outcomingLinks = {
				1;
				{
					triggerName = "активировать ус4";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = 10;
					childOffsetX_ = -128;
					childOffsetY_ = 9;
					parentOffset = {
						x = 128;
						y = 10;
					};
					childOffset = {
						x = -128;
						y = 9;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 16744703;
			cellNumberX = 2;
			cellNumberY = -1;
			left_ = 576;
			top_ = -64;
			right_ = 832;
			bottom_ = -32;
			cellIndex = {
				x = 2;
				y = -1;
			};
			boundingRect = {
				left = 576;
				top = -64;
				right = 832;
				bottom = -32;
			};
		},
		{
			name = "активировать ус4";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionObjectNearObjectByLabel" {
							state_ = false;
							internalColor_ = 0;
							label = "усилитель 4";
							object = UNIT_ATTRIBUTE_COLLECTOR;
							objectConstructed = true;
							playerType = AI_PLAYER_TYPE_WORLD;
							distance = 100.;
						};
					}
				};
			};
			action = "struct ActionActivateObjectByLabel" {
				internalColor_ = 0;
				label = "усилитель 4";
			};
			outcomingLinks = {
				1;
				{
					triggerName = "деактивировать ус4";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -128;
					parentOffsetY_ = -6;
					childOffsetX_ = 128;
					childOffsetY_ = -6;
					parentOffset = {
						x = -128;
						y = -6;
					};
					childOffset = {
						x = 128;
						y = -6;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12615935;
			cellNumberX = 3;
			cellNumberY = -1;
			left_ = 864;
			top_ = -64;
			right_ = 1120;
			bottom_ = -32;
			cellIndex = {
				x = 3;
				y = -1;
			};
			boundingRect = {
				left = 864;
				top = -64;
				right = 1120;
				bottom = -32;
			};
		},
		{
			name = "деактивировать ус2";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = OR;
				conditions = {
					2;
					{
						type = INVERTED;
						condition = "struct ConditionObjectNearObjectByLabel" {
							state_ = true;
							internalColor_ = 0;
							label = "усилитель 2";
							object = UNIT_ATTRIBUTE_COLLECTOR;
							objectConstructed = true;
							playerType = AI_PLAYER_TYPE_WORLD;
							distance = 100.;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectNearObjectByLabel" {
							state_ = false;
							internalColor_ = 0;
							label = "усилитель 2";
							object = UNIT_ATTRIBUTE_COLLECTOR;
							objectConstructed = true;
							playerType = AI_PLAYER_TYPE_ME;
							distance = 100.;
						};
					}
				};
			};
			action = "struct ActionDeactivateObjectByLabel" {
				internalColor_ = 0;
				label = "усилитель 2";
			};
			outcomingLinks = {
				1;
				{
					triggerName = "активировать ус2";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = 0;
					childOffsetX_ = -128;
					childOffsetY_ = 0;
					parentOffset = {
						x = 128;
						y = 0;
					};
					childOffset = {
						x = -128;
						y = 0;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 16744703;
			cellNumberX = 2;
			cellNumberY = -3;
			left_ = 576;
			top_ = -192;
			right_ = 832;
			bottom_ = -160;
			cellIndex = {
				x = 2;
				y = -3;
			};
			boundingRect = {
				left = 576;
				top = -192;
				right = 832;
				bottom = -160;
			};
		},
		{
			name = "активировать ус2";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionObjectNearObjectByLabel" {
							state_ = false;
							internalColor_ = 0;
							label = "усилитель 2";
							object = UNIT_ATTRIBUTE_COLLECTOR;
							objectConstructed = true;
							playerType = AI_PLAYER_TYPE_WORLD;
							distance = 100.;
						};
					}
				};
			};
			action = "struct ActionActivateObjectByLabel" {
				internalColor_ = 0;
				label = "усилитель 2";
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12615935;
			cellNumberX = 3;
			cellNumberY = -3;
			left_ = 864;
			top_ = -192;
			right_ = 1120;
			bottom_ = -160;
			cellIndex = {
				x = 3;
				y = -3;
			};
			boundingRect = {
				left = 864;
				top = -192;
				right = 1120;
				bottom = -160;
			};
		},
		{
			name = "деактивировать ус1";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = OR;
				conditions = {
					2;
					{
						type = INVERTED;
						condition = "struct ConditionObjectNearObjectByLabel" {
							state_ = true;
							internalColor_ = 0;
							label = "усилитель 1";
							object = UNIT_ATTRIBUTE_COLLECTOR;
							objectConstructed = true;
							playerType = AI_PLAYER_TYPE_WORLD;
							distance = 100.;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectNearObjectByLabel" {
							state_ = false;
							internalColor_ = 0;
							label = "усилитель 1";
							object = UNIT_ATTRIBUTE_COLLECTOR;
							objectConstructed = true;
							playerType = AI_PLAYER_TYPE_ME;
							distance = 100.;
						};
					}
				};
			};
			action = "struct ActionDeactivateObjectByLabel" {
				internalColor_ = 0;
				label = "усилитель 1";
			};
			outcomingLinks = {
				1;
				{
					triggerName = "активировать ус1";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = 2;
					childOffsetX_ = -128;
					childOffsetY_ = -3;
					parentOffset = {
						x = 128;
						y = 2;
					};
					childOffset = {
						x = -128;
						y = -3;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 16744703;
			cellNumberX = 2;
			cellNumberY = 2;
			left_ = 576;
			top_ = 128;
			right_ = 832;
			bottom_ = 160;
			cellIndex = {
				x = 2;
				y = 2;
			};
			boundingRect = {
				left = 576;
				top = 128;
				right = 832;
				bottom = 160;
			};
		},
		{
			name = "активировать ус1";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionObjectNearObjectByLabel" {
							state_ = false;
							internalColor_ = 0;
							label = "усилитель 1";
							object = UNIT_ATTRIBUTE_COLLECTOR;
							objectConstructed = true;
							playerType = AI_PLAYER_TYPE_WORLD;
							distance = 100.;
						};
					}
				};
			};
			action = "struct ActionActivateObjectByLabel" {
				internalColor_ = 0;
				label = "усилитель 1";
			};
			outcomingLinks = {
				1;
				{
					triggerName = "деактивировать ус1";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -128;
					parentOffsetY_ = -8;
					childOffsetX_ = 128;
					childOffsetY_ = -5;
					parentOffset = {
						x = -128;
						y = -8;
					};
					childOffset = {
						x = 128;
						y = -5;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12615935;
			cellNumberX = 3;
			cellNumberY = 3;
			left_ = 864;
			top_ = 192;
			right_ = 1120;
			bottom_ = 224;
			cellIndex = {
				x = 3;
				y = 3;
			};
			boundingRect = {
				left = 864;
				top = 192;
				right = 1120;
				bottom = 224;
			};
		},
		{
			name = "деактивировать ус3";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = OR;
				conditions = {
					2;
					{
						type = INVERTED;
						condition = "struct ConditionObjectNearObjectByLabel" {
							state_ = false;
							internalColor_ = 0;
							label = "усилитель 3";
							object = UNIT_ATTRIBUTE_COLLECTOR;
							objectConstructed = true;
							playerType = AI_PLAYER_TYPE_WORLD;
							distance = 100.;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectNearObjectByLabel" {
							state_ = false;
							internalColor_ = 0;
							label = "усилитель 3";
							object = UNIT_ATTRIBUTE_COLLECTOR;
							objectConstructed = true;
							playerType = AI_PLAYER_TYPE_ME;
							distance = 100.;
						};
					}
				};
			};
			action = "struct ActionDeactivateObjectByLabel" {
				internalColor_ = 0;
				label = "усилитель 3";
			};
			outcomingLinks = {
				1;
				{
					triggerName = "активировать ус3";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 126;
					parentOffsetY_ = 16;
					childOffsetX_ = -128;
					childOffsetY_ = -2;
					parentOffset = {
						x = 126;
						y = 16;
					};
					childOffset = {
						x = -128;
						y = -2;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 16744703;
			cellNumberX = 2;
			cellNumberY = 1;
			left_ = 576;
			top_ = 64;
			right_ = 832;
			bottom_ = 96;
			cellIndex = {
				x = 2;
				y = 1;
			};
			boundingRect = {
				left = 576;
				top = 64;
				right = 832;
				bottom = 96;
			};
		},
		{
			name = "активировать ус3";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionObjectNearObjectByLabel" {
							state_ = false;
							internalColor_ = 0;
							label = "усилитель 3";
							object = UNIT_ATTRIBUTE_COLLECTOR;
							objectConstructed = true;
							playerType = AI_PLAYER_TYPE_WORLD;
							distance = 100.;
						};
					}
				};
			};
			action = "struct ActionActivateObjectByLabel" {
				internalColor_ = 0;
				label = "усилитель 3";
			};
			outcomingLinks = {
				1;
				{
					triggerName = "деактивировать ус3";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -120;
					parentOffsetY_ = -16;
					childOffsetX_ = 128;
					childOffsetY_ = -4;
					parentOffset = {
						x = -120;
						y = -16;
					};
					childOffset = {
						x = 128;
						y = -4;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12615935;
			cellNumberX = 3;
			cellNumberY = 1;
			left_ = 864;
			top_ = 64;
			right_ = 1120;
			bottom_ = 96;
			cellIndex = {
				x = 3;
				y = 1;
			};
			boundingRect = {
				left = 864;
				top = 64;
				right = 1120;
				bottom = 96;
			};
		},
		{
			name = "активировать кнопку ретрансляторов";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = AND;
							conditions = {
								0;
							};
						};
					}
				};
			};
			action = "struct ActionSetControls" {
				internalColor_ = 0;
				controls = {
					2;
					{
						controlID = SQSH_RELAY_ID;
						enabled = true;
						visible = true;
						flashing = true;
						tabNumber = 0;
					},
					{
						controlID = SQSH_TAB_BUILD_ID;
						enabled = true;
						visible = true;
						flashing = true;
						tabNumber = 1;
					}
				};
			};
			outcomingLinks = {
				1;
				{
					triggerName = "деактивировать кнопку ретранслятора";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 26;
					parentOffsetY_ = -16;
					childOffsetX_ = 27;
					childOffsetY_ = 16;
					parentOffset = {
						x = 26;
						y = -16;
					};
					childOffset = {
						x = 27;
						y = 16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 16777088;
			cellNumberX = 0;
			cellNumberY = 4;
			left_ = 0;
			top_ = 256;
			right_ = 256;
			bottom_ = 288;
			cellIndex = {
				x = 0;
				y = 4;
			};
			boundingRect = {
				left = 0;
				top = 256;
				right = 256;
				bottom = 288;
			};
		},
		{
			name = "активировать метку для ретранслятора";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionActivateObjectByLabel" {
				internalColor_ = 0;
				label = "транслятор";
			};
			outcomingLinks = {
				2;
				{
					triggerName = "активировать кнопку ретрансляторов";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 46;
					parentOffsetY_ = -16;
					childOffsetX_ = 46;
					childOffsetY_ = 16;
					parentOffset = {
						x = 46;
						y = -16;
					};
					childOffset = {
						x = 46;
						y = 16;
					};
				},
				{
					triggerName = "деактивировать метку транслятора";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 47;
					parentOffsetY_ = 16;
					childOffsetX_ = 47;
					childOffsetY_ = -16;
					parentOffset = {
						x = 47;
						y = 16;
					};
					childOffset = {
						x = 47;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 16765817;
			cellNumberX = 0;
			cellNumberY = 5;
			left_ = 0;
			top_ = 320;
			right_ = 256;
			bottom_ = 352;
			cellIndex = {
				x = 0;
				y = 5;
			};
			boundingRect = {
				left = 0;
				top = 320;
				right = 256;
				bottom = 352;
			};
		},
		{
			name = "деактивировать метку транслятора";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = OR;
				conditions = {
					3;
					{
						type = NORMAL;
						condition = "struct ConditionObjectNearObjectByLabel" {
							state_ = false;
							internalColor_ = 0;
							label = "транслятор";
							object = UNIT_ATTRIBUTE_RELAY;
							objectConstructed = false;
							playerType = AI_PLAYER_TYPE_ME;
							distance = 100.;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_RELAY;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_COLLECTOR;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					}
				};
			};
			action = "struct ActionDeactivateObjectByLabel" {
				internalColor_ = 0;
				label = "транслятор";
			};
			outcomingLinks = {
				1;
				{
					triggerName = "пауза2";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 60;
					parentOffsetY_ = 16;
					childOffsetX_ = 58;
					childOffsetY_ = -16;
					parentOffset = {
						x = 60;
						y = 16;
					};
					childOffset = {
						x = 58;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 16765817;
			cellNumberX = 0;
			cellNumberY = 6;
			left_ = 0;
			top_ = 384;
			right_ = 256;
			bottom_ = 416;
			cellIndex = {
				x = 0;
				y = 6;
			};
			boundingRect = {
				left = 0;
				top = 384;
				right = 256;
				bottom = 416;
			};
		},
		{
			name = "активировать споты";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = OR;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_RELAY;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_CORE;
							counter = 5;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					}
				};
			};
			action = "struct ActionActivateAllSpots" {
				internalColor_ = 0;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "ПАУЗА-трансмитеры";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 103;
					parentOffsetY_ = 16;
					childOffsetX_ = -88;
					childOffsetY_ = -16;
					parentOffset = {
						x = 103;
						y = 16;
					};
					childOffset = {
						x = -88;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 0;
			cellNumberY = 10;
			left_ = 0;
			top_ = 640;
			right_ = 256;
			bottom_ = 672;
			cellIndex = {
				x = 0;
				y = 10;
			};
			boundingRect = {
				left = 0;
				top = 640;
				right = 256;
				bottom = 672;
			};
		},
		{
			name = "камера на ядро на острове";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = OR;
				conditions = {
					3;
					{
						type = NORMAL;
						condition = "struct ConditionObjectNearObjectByLabel" {
							state_ = false;
							internalColor_ = 0;
							label = "транслятор";
							object = UNIT_ATTRIBUTE_RELAY;
							objectConstructed = true;
							playerType = AI_PLAYER_TYPE_ME;
							distance = 100.;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_RELAY;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_COLLECTOR;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					}
				};
			};
			action = "struct ActionSetCamera" {
				internalColor_ = 0;
				cameraSplineName = "на остров 1";
				stepTime = 3.;
				cycles = 1;
				smoothTransition = true;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "задание2 ";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 80;
					parentOffsetY_ = 16;
					childOffsetX_ = 83;
					childOffsetY_ = -16;
					parentOffset = {
						x = 80;
						y = 16;
					};
					childOffset = {
						x = 83;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12632256;
			cellNumberX = 1;
			cellNumberY = 1;
			left_ = 288;
			top_ = 64;
			right_ = 544;
			bottom_ = 96;
			cellIndex = {
				x = 1;
				y = 1;
			};
			boundingRect = {
				left = 288;
				top = 64;
				right = 544;
				bottom = 96;
			};
		},
		{
			name = "стройте трансмитеры";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionSwitcher" {
							state_ = true;
							internalColor_ = 0;
							type = AND;
							conditions = {
								0;
							};
						};
					}
				};
			};
			action = "struct ActionMessage" {
				internalColor_ = 0;
				messageID = "Mission Tips.Mission 02.Tip 12";
				message = "";
				delay = 0;
				duration = 5;
				syncroBySound = false;
				delayTimer = {
					time = 0;
				};
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				1;
				{
					triggerName = "ПАУЗА-трансмитеры";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = 0;
					childOffsetX_ = -128;
					childOffsetY_ = 0;
					parentOffset = {
						x = 128;
						y = 0;
					};
					childOffset = {
						x = -128;
						y = 0;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 33023;
			cellNumberX = 0;
			cellNumberY = 12;
			left_ = 0;
			top_ = 768;
			right_ = 256;
			bottom_ = 800;
			cellIndex = {
				x = 0;
				y = 12;
			};
			boundingRect = {
				left = 0;
				top = 768;
				right = 256;
				bottom = 800;
			};
		},
		{
			name = "ПАУЗА-трансмитеры";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_RELAY;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					}
				};
			};
			action = "struct ActionDelay" {
				internalColor_ = 0;
				delay = 60;
				showTimer = false;
				scaleByDifficulty = false;
				timer = {
					time = 5200;
				};
			};
			outcomingLinks = {
				1;
				{
					triggerName = "стройте трансмитеры";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -128;
					parentOffsetY_ = -10;
					childOffsetX_ = 128;
					childOffsetY_ = -12;
					parentOffset = {
						x = -128;
						y = -10;
					};
					childOffset = {
						x = 128;
						y = -12;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 234492;
			cellNumberX = 1;
			cellNumberY = 12;
			left_ = 288;
			top_ = 768;
			right_ = 544;
			bottom_ = 800;
			cellIndex = {
				x = 1;
				y = 12;
			};
			boundingRect = {
				left = 288;
				top = 768;
				right = 544;
				bottom = 800;
			};
		},
		{
			name = "старт";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct Action" {
				internalColor_ = 0;
			};
			outcomingLinks = {
				4;
				{
					triggerName = "Defeat";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -128;
					parentOffsetY_ = -1;
					childOffsetX_ = 128;
					childOffsetY_ = -1;
					parentOffset = {
						x = -128;
						y = -1;
					};
					childOffset = {
						x = 128;
						y = -1;
					};
				},
				{
					triggerName = "Victory";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -128;
					parentOffsetY_ = 15;
					childOffsetX_ = 115;
					childOffsetY_ = -16;
					parentOffset = {
						x = -128;
						y = 15;
					};
					childOffset = {
						x = 115;
						y = -16;
					};
				},
				{
					triggerName = "взрыв фрейма";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -9;
					parentOffsetY_ = -16;
					childOffsetX_ = -9;
					childOffsetY_ = 16;
					parentOffset = {
						x = -9;
						y = -16;
					};
					childOffset = {
						x = -9;
						y = 16;
					};
				},
				{
					triggerName = "выкл. интерфейс";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 31;
					parentOffsetY_ = -16;
					childOffsetX_ = 38;
					childOffsetY_ = 16;
					parentOffset = {
						x = 31;
						y = -16;
					};
					childOffset = {
						x = 38;
						y = 16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 1;
			cellNumberY = -2;
			left_ = 288;
			top_ = -128;
			right_ = 544;
			bottom_ = -96;
			cellIndex = {
				x = 1;
				y = -2;
			};
			boundingRect = {
				left = 288;
				top = -128;
				right = 544;
				bottom = -96;
			};
		},
		{
			name = "деактивировать кнопку ретранслятора";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionClickOnButton" {
							state_ = true;
							internalColor_ = 0;
							controlID = SQSH_RELAY_ID;
							counter = 1;
						};
					}
				};
			};
			action = "struct ActionSetControls" {
				internalColor_ = 0;
				controls = {
					2;
					{
						controlID = SQSH_RELAY_ID;
						enabled = true;
						visible = true;
						flashing = false;
						tabNumber = 0;
					},
					{
						controlID = SQSH_TAB_BUILD_ID;
						enabled = true;
						visible = true;
						flashing = false;
						tabNumber = 1;
					}
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 0;
			cellNumberY = 3;
			left_ = 0;
			top_ = 192;
			right_ = 256;
			bottom_ = 224;
			cellIndex = {
				x = 0;
				y = 3;
			};
			boundingRect = {
				left = 0;
				top = 192;
				right = 256;
				bottom = 224;
			};
		},
		{
			name = "трансмитеры";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionMessage" {
				internalColor_ = 0;
				messageID = "Mission Tips.Mission 02.Tip 1";
				message = "";
				delay = 0;
				duration = 0;
				syncroBySound = false;
				delayTimer = {
					time = 0;
				};
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				1;
				{
					triggerName = "задание1 выполнено";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 118;
					parentOffsetY_ = 16;
					childOffsetX_ = -128;
					childOffsetY_ = -13;
					parentOffset = {
						x = 118;
						y = 16;
					};
					childOffset = {
						x = -128;
						y = -13;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 14145535;
			cellNumberX = 1;
			cellNumberY = 3;
			left_ = 288;
			top_ = 192;
			right_ = 544;
			bottom_ = 224;
			cellIndex = {
				x = 1;
				y = 3;
			};
			boundingRect = {
				left = 288;
				top = 192;
				right = 544;
				bottom = 224;
			};
		},
		{
			name = "задание2 ";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = OR;
				conditions = {
					3;
					{
						type = NORMAL;
						condition = "struct ConditionObjectNearObjectByLabel" {
							state_ = false;
							internalColor_ = 0;
							label = "транслятор";
							object = UNIT_ATTRIBUTE_RELAY;
							objectConstructed = true;
							playerType = AI_PLAYER_TYPE_ME;
							distance = 100.;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_RELAY;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_COLLECTOR;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					}
				};
			};
			action = "struct ActionTask" {
				internalColor_ = 0;
				type = ASSIGNED;
				taskID = "Mission Tasks.Mission 02.Task 2";
				duration = 5;
				syncroBySound = false;
				showTips = true;
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				1;
				{
					triggerName = "захвати коллектор";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 7;
					parentOffsetY_ = 16;
					childOffsetX_ = 9;
					childOffsetY_ = -16;
					parentOffset = {
						x = 7;
						y = 16;
					};
					childOffset = {
						x = 9;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 14145535;
			cellNumberX = 1;
			cellNumberY = 4;
			left_ = 288;
			top_ = 256;
			right_ = 544;
			bottom_ = 288;
			cellIndex = {
				x = 1;
				y = 4;
			};
			boundingRect = {
				left = 288;
				top = 256;
				right = 544;
				bottom = 288;
			};
		},
		{
			name = "захвати коллектор";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionMessage" {
				internalColor_ = 0;
				messageID = "Mission Tips.Mission 02.Tip 2";
				message = "";
				delay = 0;
				duration = 5;
				syncroBySound = true;
				delayTimer = {
					time = 0;
				};
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				3;
				{
					triggerName = "камера на усилитель30";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 6;
					parentOffsetY_ = 16;
					childOffsetX_ = 5;
					childOffsetY_ = -16;
					parentOffset = {
						x = 6;
						y = 16;
					};
					childOffset = {
						x = 5;
						y = -16;
					};
				},
				{
					triggerName = "защити коллекторы";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = 9;
					childOffsetX_ = -125;
					childOffsetY_ = -16;
					parentOffset = {
						x = 128;
						y = 9;
					};
					childOffset = {
						x = -125;
						y = -16;
					};
				},
				{
					triggerName = "задание 3";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 87;
					parentOffsetY_ = 16;
					childOffsetX_ = 99;
					childOffsetY_ = -16;
					parentOffset = {
						x = 87;
						y = 16;
					};
					childOffset = {
						x = 99;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 14145535;
			cellNumberX = 1;
			cellNumberY = 5;
			left_ = 288;
			top_ = 320;
			right_ = 544;
			bottom_ = 352;
			cellIndex = {
				x = 1;
				y = 5;
			};
			boundingRect = {
				left = 288;
				top = 320;
				right = 544;
				bottom = 352;
			};
		},
		{
			name = "камера на усилитель30";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					2;
					{
						type = INVERTED;
						condition = "struct ConditionObjectNearObjectByLabel" {
							state_ = false;
							internalColor_ = 0;
							label = "усилитель 3";
							object = UNIT_ATTRIBUTE_COLLECTOR;
							objectConstructed = false;
							playerType = AI_PLAYER_TYPE_WORLD;
							distance = 100.;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionObjectNearObjectByLabel" {
							state_ = false;
							internalColor_ = 0;
							label = "усилитель 3";
							object = UNIT_ATTRIBUTE_COLLECTOR;
							objectConstructed = false;
							playerType = AI_PLAYER_TYPE_ME;
							distance = 100.;
						};
					}
				};
			};
			action = "struct ActionSetCamera" {
				internalColor_ = 0;
				cameraSplineName = "усилитель3";
				stepTime = 4.;
				cycles = 1;
				smoothTransition = false;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12632256;
			cellNumberX = 1;
			cellNumberY = 6;
			left_ = 288;
			top_ = 384;
			right_ = 544;
			bottom_ = 416;
			cellIndex = {
				x = 1;
				y = 6;
			};
			boundingRect = {
				left = 288;
				top = 384;
				right = 544;
				bottom = 416;
			};
		},
		{
			name = "задание1 выполнено";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = OR;
				conditions = {
					3;
					{
						type = NORMAL;
						condition = "struct ConditionObjectNearObjectByLabel" {
							state_ = false;
							internalColor_ = 0;
							label = "транслятор";
							object = UNIT_ATTRIBUTE_RELAY;
							objectConstructed = true;
							playerType = AI_PLAYER_TYPE_ME;
							distance = 100.;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_RELAY;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					},
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_COLLECTOR;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					}
				};
			};
			action = "struct ActionTask" {
				internalColor_ = 0;
				type = COMPLETED;
				taskID = "Mission Tasks.Mission 02.Task 1";
				duration = 5;
				syncroBySound = false;
				showTips = true;
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				1;
				{
					triggerName = "задание2 ";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -128;
					parentOffsetY_ = 5;
					childOffsetX_ = 128;
					childOffsetY_ = 7;
					parentOffset = {
						x = -128;
						y = 5;
					};
					childOffset = {
						x = 128;
						y = 7;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 14145535;
			cellNumberX = 2;
			cellNumberY = 4;
			left_ = 576;
			top_ = 256;
			right_ = 832;
			bottom_ = 288;
			cellIndex = {
				x = 2;
				y = 4;
			};
			boundingRect = {
				left = 576;
				top = 256;
				right = 832;
				bottom = 288;
			};
		},
		{
			name = "задание 3";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionTask" {
				internalColor_ = 0;
				type = ASSIGNED;
				taskID = "Mission Tasks.Mission 02.Task 3";
				duration = 5;
				syncroBySound = false;
				showTips = true;
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				2;
				{
					triggerName = "задание2 выпонено";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -1;
					parentOffsetY_ = 16;
					childOffsetX_ = -3;
					childOffsetY_ = -16;
					parentOffset = {
						x = -1;
						y = 16;
					};
					childOffset = {
						x = -3;
						y = -16;
					};
				},
				{
					triggerName = "пауза";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = -6;
					childOffsetX_ = -128;
					childOffsetY_ = -4;
					parentOffset = {
						x = 128;
						y = -6;
					};
					childOffset = {
						x = -128;
						y = -4;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 14145535;
			cellNumberX = 1;
			cellNumberY = 8;
			left_ = 288;
			top_ = 512;
			right_ = 544;
			bottom_ = 544;
			cellIndex = {
				x = 1;
				y = 8;
			};
			boundingRect = {
				left = 288;
				top = 512;
				right = 544;
				bottom = 544;
			};
		},
		{
			name = "задание2 выпонено";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_COLLECTOR;
							counter = 2;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					}
				};
			};
			action = "struct ActionTask" {
				internalColor_ = 0;
				type = COMPLETED;
				taskID = "Mission Tasks.Mission 02.Task 2";
				duration = 5;
				syncroBySound = false;
				showTips = true;
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				1;
				{
					triggerName = "задание3 выполнено";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = 2;
					childOffsetX_ = -128;
					childOffsetY_ = 2;
					parentOffset = {
						x = 128;
						y = 2;
					};
					childOffset = {
						x = -128;
						y = 2;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 14145535;
			cellNumberX = 1;
			cellNumberY = 9;
			left_ = 288;
			top_ = 576;
			right_ = 544;
			bottom_ = 608;
			cellIndex = {
				x = 1;
				y = 9;
			};
			boundingRect = {
				left = 288;
				top = 576;
				right = 544;
				bottom = 608;
			};
		},
		{
			name = "задание3 выполнено";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = OR;
				conditions = {
					0;
				};
			};
			action = "struct ActionTask" {
				internalColor_ = 0;
				type = COMPLETED;
				taskID = "Mission Tasks.Mission 02.Task 3";
				duration = 5;
				syncroBySound = false;
				showTips = true;
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				1;
				{
					triggerName = "Victory";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -22;
					parentOffsetY_ = -16;
					childOffsetX_ = 98;
					childOffsetY_ = 16;
					parentOffset = {
						x = -22;
						y = -16;
					};
					childOffset = {
						x = 98;
						y = 16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 14145535;
			cellNumberX = 2;
			cellNumberY = 9;
			left_ = 576;
			top_ = 576;
			right_ = 832;
			bottom_ = 608;
			cellIndex = {
				x = 2;
				y = 9;
			};
			boundingRect = {
				left = 576;
				top = 576;
				right = 832;
				bottom = 608;
			};
		},
		{
			name = "пауза";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionDelay" {
				internalColor_ = 0;
				delay = 15;
				showTimer = false;
				scaleByDifficulty = false;
				timer = {
					time = 0;
				};
			};
			outcomingLinks = {
				2;
				{
					triggerName = "солдат";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = 0;
					childOffsetX_ = -128;
					childOffsetY_ = 1;
					parentOffset = {
						x = 128;
						y = 0;
					};
					childOffset = {
						x = -128;
						y = 1;
					};
				},
				{
					triggerName = "пусто";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 122;
					parentOffsetY_ = -16;
					childOffsetX_ = -126;
					childOffsetY_ = 16;
					parentOffset = {
						x = 122;
						y = -16;
					};
					childOffset = {
						x = -126;
						y = 16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 2;
			cellNumberY = 8;
			left_ = 576;
			top_ = 512;
			right_ = 832;
			bottom_ = 544;
			cellIndex = {
				x = 2;
				y = 8;
			};
			boundingRect = {
				left = 576;
				top = 512;
				right = 832;
				bottom = 544;
			};
		},
		{
			name = "солдат";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_SOLDIER;
							counter = 15;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					}
				};
			};
			action = "struct ActionMessage" {
				internalColor_ = 0;
				messageID = "Mission Tips.Mission 02.Tip 4";
				message = "";
				delay = 0;
				duration = 5;
				syncroBySound = true;
				delayTimer = {
					time = 0;
				};
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 14145535;
			cellNumberX = 3;
			cellNumberY = 8;
			left_ = 864;
			top_ = 512;
			right_ = 1120;
			bottom_ = 544;
			cellIndex = {
				x = 3;
				y = 8;
			};
			boundingRect = {
				left = 864;
				top = 512;
				right = 1120;
				bottom = 544;
			};
		},
		{
			name = "пусто";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_SOLDIER;
							counter = 15;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = true;
						};
					}
				};
			};
			action = "struct Action" {
				internalColor_ = 0;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 3;
			cellNumberY = 7;
			left_ = 864;
			top_ = 448;
			right_ = 1120;
			bottom_ = 480;
			cellIndex = {
				x = 3;
				y = 7;
			};
			boundingRect = {
				left = 864;
				top = 448;
				right = 1120;
				bottom = 480;
			};
		},
		{
			name = "защити коллекторы";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					2;
					{
						type = INVERTED;
						condition = "struct ConditionObjectNearObjectByLabel" {
							state_ = false;
							internalColor_ = 0;
							label = "усилитель 3";
							object = UNIT_ATTRIBUTE_COLLECTOR;
							objectConstructed = false;
							playerType = AI_PLAYER_TYPE_WORLD;
							distance = 100.;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionObjectNearObjectByLabel" {
							state_ = false;
							internalColor_ = 0;
							label = "усилитель 3";
							object = UNIT_ATTRIBUTE_COLLECTOR;
							objectConstructed = false;
							playerType = AI_PLAYER_TYPE_ME;
							distance = 100.;
						};
					}
				};
			};
			action = "struct ActionMessage" {
				internalColor_ = 0;
				messageID = "Mission Tips.Mission 02.Tip 3";
				message = "";
				delay = 0;
				duration = 10;
				syncroBySound = true;
				delayTimer = {
					time = 0;
				};
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 14145535;
			cellNumberX = 2;
			cellNumberY = 6;
			left_ = 576;
			top_ = 384;
			right_ = 832;
			bottom_ = 416;
			cellIndex = {
				x = 2;
				y = 6;
			};
			boundingRect = {
				left = 576;
				top = 384;
				right = 832;
				bottom = 416;
			};
		},
		{
			name = "катсцена1";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionSetCamera" {
				internalColor_ = 0;
				cameraSplineName = "катсцена2";
				stepTime = 4.;
				cycles = 1;
				smoothTransition = true;
			};
			outcomingLinks = {
				3;
				{
					triggerName = "на фрейм";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 50;
					parentOffsetY_ = 16;
					childOffsetX_ = 47;
					childOffsetY_ = -16;
					parentOffset = {
						x = 50;
						y = 16;
					};
					childOffset = {
						x = 47;
						y = -16;
					};
				},
				{
					triggerName = "вкл. интерфейс";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -103;
					parentOffsetY_ = 16;
					childOffsetX_ = 75;
					childOffsetY_ = -16;
					parentOffset = {
						x = -103;
						y = 16;
					};
					childOffset = {
						x = 75;
						y = -16;
					};
				},
				{
					triggerName = "2";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 20;
					parentOffsetY_ = 16;
					childOffsetX_ = 20;
					childOffsetY_ = -16;
					parentOffset = {
						x = 20;
						y = 16;
					};
					childOffset = {
						x = 20;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12632256;
			cellNumberX = -1;
			cellNumberY = 1;
			left_ = -288;
			top_ = 64;
			right_ = -32;
			bottom_ = 96;
			cellIndex = {
				x = -1;
				y = 1;
			};
			boundingRect = {
				left = -288;
				top = 64;
				right = -32;
				bottom = 96;
			};
		},
		{
			name = "на фрейм";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionSetCamera" {
				internalColor_ = 0;
				cameraSplineName = "на фрейм";
				stepTime = 2.;
				cycles = 1;
				smoothTransition = false;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12632256;
			cellNumberX = -1;
			cellNumberY = 5;
			left_ = -288;
			top_ = 320;
			right_ = -32;
			bottom_ = 352;
			cellIndex = {
				x = -1;
				y = 5;
			};
			boundingRect = {
				left = -288;
				top = 320;
				right = -32;
				bottom = 352;
			};
		},
		{
			name = "UserCamera";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = 0;
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = -1;
			cellNumberY = 6;
			left_ = -288;
			top_ = 384;
			right_ = -32;
			bottom_ = 416;
			cellIndex = {
				x = -1;
				y = 6;
			};
			boundingRect = {
				left = -288;
				top = 384;
				right = -32;
				bottom = 416;
			};
		},
		{
			name = "вкл. интерфейс";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionSetInterface" {
				internalColor_ = 0;
				enableInterface = true;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "ЗАДАНИЕ";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 128;
					parentOffsetY_ = -14;
					childOffsetX_ = -127;
					childOffsetY_ = 16;
					parentOffset = {
						x = 128;
						y = -14;
					};
					childOffset = {
						x = -127;
						y = 16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = -2;
			cellNumberY = 5;
			left_ = -576;
			top_ = 320;
			right_ = -320;
			bottom_ = 352;
			cellIndex = {
				x = -2;
				y = 5;
			};
			boundingRect = {
				left = -576;
				top = 320;
				right = -320;
				bottom = 352;
			};
		},
		{
			name = "пауза2";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionDelay" {
				internalColor_ = 0;
				delay = 15;
				showTimer = false;
				scaleByDifficulty = false;
				timer = {
					time = 0;
				};
			};
			outcomingLinks = {
				1;
				{
					triggerName = "камера на ядро на острове";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 116;
					parentOffsetY_ = -16;
					childOffsetX_ = -83;
					childOffsetY_ = 16;
					parentOffset = {
						x = 116;
						y = -16;
					};
					childOffset = {
						x = -83;
						y = 16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 0;
			cellNumberY = 7;
			left_ = 0;
			top_ = 448;
			right_ = 256;
			bottom_ = 480;
			cellIndex = {
				x = 0;
				y = 7;
			};
			boundingRect = {
				left = 0;
				top = 448;
				right = 256;
				bottom = 480;
			};
		},
		{
			name = "задание1 провалено";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = OR;
				conditions = {
					2;
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_COLLECTOR;
							counter = 2;
							playerType = AI_PLAYER_TYPE_ANY;
							constructedAndConstructing = true;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_FRAME;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
							constructedAndConstructing = false;
						};
					}
				};
			};
			action = "struct ActionTask" {
				internalColor_ = 0;
				type = FAILED;
				taskID = "Mission Tasks.Mission 02.Task 1";
				duration = 5;
				syncroBySound = false;
				showTips = true;
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				2;
				{
					triggerName = "задание2-провалено";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -1;
					parentOffsetY_ = 16;
					childOffsetX_ = -1;
					childOffsetY_ = -16;
					parentOffset = {
						x = -1;
						y = 16;
					};
					childOffset = {
						x = -1;
						y = -16;
					};
				},
				{
					triggerName = "дактивировать метку";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -117;
					parentOffsetY_ = -16;
					childOffsetX_ = 125;
					childOffsetY_ = 16;
					parentOffset = {
						x = -117;
						y = -16;
					};
					childOffset = {
						x = 125;
						y = 16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12895487;
			cellNumberX = 3;
			cellNumberY = 4;
			left_ = 864;
			top_ = 256;
			right_ = 1120;
			bottom_ = 288;
			cellIndex = {
				x = 3;
				y = 4;
			};
			boundingRect = {
				left = 864;
				top = 256;
				right = 1120;
				bottom = 288;
			};
		},
		{
			name = "задание2-провалено";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionTask" {
				internalColor_ = 0;
				type = FAILED;
				taskID = "Mission Tasks.Mission 02.Task 2";
				duration = 5;
				syncroBySound = false;
				showTips = true;
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				1;
				{
					triggerName = "задание3провалено";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 5;
					parentOffsetY_ = 16;
					childOffsetX_ = 2;
					childOffsetY_ = -16;
					parentOffset = {
						x = 5;
						y = 16;
					};
					childOffset = {
						x = 2;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12895487;
			cellNumberX = 3;
			cellNumberY = 5;
			left_ = 864;
			top_ = 320;
			right_ = 1120;
			bottom_ = 352;
			cellIndex = {
				x = 3;
				y = 5;
			};
			boundingRect = {
				left = 864;
				top = 320;
				right = 1120;
				bottom = 352;
			};
		},
		{
			name = "задание3провалено";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionTask" {
				internalColor_ = 0;
				type = FAILED;
				taskID = "Mission Tasks.Mission 02.Task 3";
				duration = 5;
				syncroBySound = false;
				showTips = true;
				durationTimer = {
					time = 0;
				};
			};
			outcomingLinks = {
				1;
				{
					triggerName = "Defeat";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = -119;
					parentOffsetY_ = -16;
					childOffsetX_ = 91;
					childOffsetY_ = 16;
					parentOffset = {
						x = -119;
						y = -16;
					};
					childOffset = {
						x = 91;
						y = 16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12895487;
			cellNumberX = 3;
			cellNumberY = 6;
			left_ = 864;
			top_ = 384;
			right_ = 1120;
			bottom_ = 416;
			cellIndex = {
				x = 3;
				y = 6;
			};
			boundingRect = {
				left = 864;
				top = 384;
				right = 1120;
				bottom = 416;
			};
		},
		{
			name = "взрыв фрейма";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionKillObject" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_FRAME;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_COLLECTOR;
							counter = 2;
							playerType = AI_PLAYER_TYPE_ANY;
							constructedAndConstructing = true;
						};
					}
				};
			};
			action = "struct ActionSetCameraAtObject" {
				internalColor_ = 0;
				object = UNIT_ATTRIBUTE_FRAME;
				playerType = AI_PLAYER_TYPE_ME;
				transitionTime = 0;
				setFollow = false;
				turnTime = 0;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12632256;
			cellNumberX = 1;
			cellNumberY = -3;
			left_ = 288;
			top_ = -192;
			right_ = 544;
			bottom_ = -160;
			cellIndex = {
				x = 1;
				y = -3;
			};
			boundingRect = {
				left = 288;
				top = -192;
				right = 544;
				bottom = -160;
			};
		},
		{
			name = "дактивировать метку";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionDeactivateObjectByLabel" {
				internalColor_ = 0;
				label = "транслятор";
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 0;
			cellNumberY = -3;
			left_ = 0;
			top_ = -192;
			right_ = 256;
			bottom_ = -160;
			cellIndex = {
				x = 0;
				y = -3;
			};
			boundingRect = {
				left = 0;
				top = -192;
				right = 256;
				bottom = -160;
			};
		},
		{
			name = "выкл. интерфейс";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = OR;
				conditions = {
					2;
					{
						type = NORMAL;
						condition = "struct ConditionKillObject" {
							state_ = false;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_FRAME;
							counter = 1;
							playerType = AI_PLAYER_TYPE_ME;
						};
					},
					{
						type = INVERTED;
						condition = "struct ConditionObjectExists" {
							state_ = true;
							internalColor_ = 0;
							object = UNIT_ATTRIBUTE_COLLECTOR;
							counter = 2;
							playerType = AI_PLAYER_TYPE_ANY;
							constructedAndConstructing = true;
						};
					}
				};
			};
			action = "struct ActionSetInterface" {
				internalColor_ = 0;
				enableInterface = false;
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = 1;
			cellNumberY = -4;
			left_ = 288;
			top_ = -256;
			right_ = 544;
			bottom_ = -224;
			cellIndex = {
				x = 1;
				y = -4;
			};
			boundingRect = {
				left = 288;
				top = -256;
				right = 544;
				bottom = -224;
			};
		},
		{
			name = "11";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct Action" {
				internalColor_ = 0;
			};
			outcomingLinks = {
				2;
				{
					triggerName = "на фрейм0";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 38;
					parentOffsetY_ = 16;
					childOffsetX_ = 36;
					childOffsetY_ = -16;
					parentOffset = {
						x = 38;
						y = 16;
					};
					childOffset = {
						x = 36;
						y = -16;
					};
				},
				{
					triggerName = "2";
					color = STRATEGY_GREEN;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 110;
					parentOffsetY_ = 16;
					childOffsetX_ = -123;
					childOffsetY_ = -16;
					parentOffset = {
						x = 110;
						y = 16;
					};
					childOffset = {
						x = -123;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = -2;
			cellNumberY = 0;
			left_ = -576;
			top_ = 0;
			right_ = -320;
			bottom_ = 32;
			cellIndex = {
				x = -2;
				y = 0;
			};
			boundingRect = {
				left = -576;
				top = 0;
				right = -320;
				bottom = 32;
			};
		},
		{
			name = "на фрейм0";
			condition = "struct ConditionSwitcher" {
				state_ = false;
				internalColor_ = 0;
				type = AND;
				conditions = {
					1;
					{
						type = NORMAL;
						condition = "struct ConditionSkipCutScene" {
							state_ = false;
							internalColor_ = 0;
						};
					}
				};
			};
			action = "struct ActionSetCamera" {
				internalColor_ = 0;
				cameraSplineName = "на фрейм";
				stepTime = 1.;
				cycles = 1;
				smoothTransition = false;
			};
			outcomingLinks = {
				1;
				{
					triggerName = "вкл. интерфейс";
					color = STRATEGY_RED;
					type = THIN;
					active_ = false;
					parentOffsetX_ = 54;
					parentOffsetY_ = 16;
					childOffsetX_ = 51;
					childOffsetY_ = -16;
					parentOffset = {
						x = 54;
						y = 16;
					};
					childOffset = {
						x = 51;
						y = -16;
					};
				}
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 12632256;
			cellNumberX = -2;
			cellNumberY = 3;
			left_ = -576;
			top_ = 192;
			right_ = -320;
			bottom_ = 224;
			cellIndex = {
				x = -2;
				y = 3;
			};
			boundingRect = {
				left = -576;
				top = 192;
				right = -320;
				bottom = 224;
			};
		},
		{
			name = "2";
			condition = "struct ConditionSwitcher" {
				state_ = true;
				internalColor_ = 0;
				type = AND;
				conditions = {
					0;
				};
			};
			action = "struct ActionDelay" {
				internalColor_ = 0;
				delay = 1;
				showTimer = false;
				scaleByDifficulty = false;
				timer = {
					time = 0;
				};
			};
			outcomingLinks = {
				0;
			};
			state_ = SLEEPING;
			executionCounter_ = 0;
			internalColor_ = 0;
			cellNumberX = -1;
			cellNumberY = 2;
			left_ = -288;
			top_ = 128;
			right_ = -32;
			bottom_ = 160;
			cellIndex = {
				x = -1;
				y = 2;
			};
			boundingRect = {
				left = -288;
				top = 128;
				right = -32;
				bottom = 160;
			};
		}
	};
	left_ = -5;
	top_ = -122;
	right_ = 1072;
	bottom_ = 543;
	boundingRect = {
		left = -5;
		top = -122;
		right = 1072;
		bottom = 543;
	};
	viewRect = {
		left = -5;
		top = -122;
		right = 1072;
		bottom = 543;
	};
};
